id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/15372:63,interoperability,format,formatting,63,Probably there are two spurious failures in the CI. LGTM after formatting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:32,performance,failur,failures,32,Probably there are two spurious failures in the CI. LGTM after formatting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:32,reliability,fail,failures,32,Probably there are two spurious failures in the CI. LGTM after formatting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:22,deployability,updat,updated,22,"Thanks, good point! I updated the PR with the code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:51,interoperability,format,formatting,51,"Thanks, good point! I updated the PR with the code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:22,safety,updat,updated,22,"Thanks, good point! I updated the PR with the code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:22,security,updat,updated,22,"Thanks, good point! I updated the PR with the code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15374:106,safety,test,tested,106,"@smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:162,safety,test,test,162,"@smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:106,testability,test,tested,106,"@smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:162,testability,test,test,162,"@smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:108,safety,test,tested,108,"> @smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR? CMSSW tests started via cms-sw/root#206.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:164,safety,test,test,164,"> @smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR? CMSSW tests started via cms-sw/root#206.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:184,safety,test,tests,184,"> @smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR? CMSSW tests started via cms-sw/root#206.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:108,testability,test,tested,108,"> @smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR? CMSSW tests started via cms-sw/root#206.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:164,testability,test,test,164,"> @smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR? CMSSW tests started via cms-sw/root#206.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:184,testability,test,tests,184,"> @smuzaffar, we will probably start moving towards more upstream llvm parts in Cling. These PRs need to be tested on cmssw because of relocation and pcms. Can you test this PR? CMSSW tests started via cms-sw/root#206.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:117,availability,failur,failure,117,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:117,deployability,fail,failure,117,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:117,performance,failur,failure,117,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:117,reliability,fail,failure,117,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:21,safety,test,tests,21,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:112,safety,test,test,112,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:21,testability,test,tests,21,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:107,testability,unit,unit,107,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:112,testability,test,test,112,"@vgvassilev , cmssw [tests looks good](https://github.com/cms-sw/root/pull/206#issuecomment-2083540349). A unit test failure is not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:101,deployability,configurat,configuration,101,"@smuzaffar, thank you! `ROOT CI / mac14 ARM64 LLVM_ENABLE_ASSERTIONS=On` seems to be broken at cmake configuration and I do not see how this could be caused by this PR. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:101,integrability,configur,configuration,101,"@smuzaffar, thank you! `ROOT CI / mac14 ARM64 LLVM_ENABLE_ASSERTIONS=On` seems to be broken at cmake configuration and I do not see how this could be caused by this PR. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:101,modifiability,configur,configuration,101,"@smuzaffar, thank you! `ROOT CI / mac14 ARM64 LLVM_ENABLE_ASSERTIONS=On` seems to be broken at cmake configuration and I do not see how this could be caused by this PR. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:101,security,configur,configuration,101,"@smuzaffar, thank you! `ROOT CI / mac14 ARM64 LLVM_ENABLE_ASSERTIONS=On` seems to be broken at cmake configuration and I do not see how this could be caused by this PR. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/issues/15375:37,deployability,releas,release,37,"Fixed in ""not applicable"" because no release was affected by this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/pull/15376:36,availability,failur,failure,36,"All green now, besides an unrelated failure that @egpbos should learn about",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15376:36,deployability,fail,failure,36,"All green now, besides an unrelated failure that @egpbos should learn about",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15376:4,energy efficiency,green,green,4,"All green now, besides an unrelated failure that @egpbos should learn about",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15376:36,performance,failur,failure,36,"All green now, besides an unrelated failure that @egpbos should learn about",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15376:36,reliability,fail,failure,36,"All green now, besides an unrelated failure that @egpbos should learn about",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15376:64,usability,learn,learn,64,"All green now, besides an unrelated failure that @egpbos should learn about",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15377:56,safety,test,test,56,Indeed it is just using `gInterpreter->MapCppName` if a test should be done it would be to test `MapCppName`. I thought a bit about it and I think this issue might be also seen with some other objects like histograms. I plan to check that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:91,safety,test,test,91,Indeed it is just using `gInterpreter->MapCppName` if a test should be done it would be to test `MapCppName`. I thought a bit about it and I think this issue might be also seen with some other objects like histograms. I plan to check that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:56,testability,test,test,56,Indeed it is just using `gInterpreter->MapCppName` if a test should be done it would be to test `MapCppName`. I thought a bit about it and I think this issue might be also seen with some other objects like histograms. I plan to check that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:91,testability,test,test,91,Indeed it is just using `gInterpreter->MapCppName` if a test should be done it would be to test `MapCppName`. I thought a bit about it and I think this issue might be also seen with some other objects like histograms. I plan to check that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:220,testability,plan,plan,220,Indeed it is just using `gInterpreter->MapCppName` if a test should be done it would be to test `MapCppName`. I thought a bit about it and I think this issue might be also seen with some other objects like histograms. I plan to check that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:200,security,hash,hash,200,"Is mangling supposed to address those characters too? Maybe there is something simple which could be done for names of objects in ROOT, for example keeping only letters and numbers and postponing the hash of the name? In the end we need this for autogenerated code, but maybe I am wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:79,testability,simpl,simple,79,"Is mangling supposed to address those characters too? Maybe there is something simple which could be done for names of objects in ROOT, for example keeping only letters and numbers and postponing the hash of the name? In the end we need this for autogenerated code, but maybe I am wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:79,usability,simpl,simple,79,"Is mangling supposed to address those characters too? Maybe there is something simple which could be done for names of objects in ROOT, for example keeping only letters and numbers and postponing the hash of the name? In the end we need this for autogenerated code, but maybe I am wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:149,deployability,continu,continue,149,Indeed this approach using `gInterpreter->MapCppName` is already used in some other SavePrimitives methods (like TH1). Seems to me it makes sense to continue with the same technique in the class where it is missing. I noticed some characters were missing @devajithvs is looking at it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:23,safety,compl,complex,23,I am on it. It is more complex than expected. TH2Poly is more complex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:62,safety,compl,complex,62,I am on it. It is more complex than expected. TH2Poly is more complex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:23,security,compl,complex,23,I am on it. It is more complex than expected. TH2Poly is more complex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:62,security,compl,complex,62,I am on it. It is more complex than expected. TH2Poly is more complex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15379:218,availability,error,error,218,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:792,availability,error,error,792,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1344,availability,error,error,1344,"ointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1997,availability,error,error,1997,"declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2651,availability,error,error,2651,"its = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3193,availability,error,error,3193,"c/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3741,availability,error,error,3741," = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4290,availability,error,error,4290,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4828,availability,consist,consistent,4828,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:183,energy efficiency,core,core,183,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:403,energy efficiency,core,core,403,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:749,energy efficiency,core,core,749,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:951,energy efficiency,core,core,951,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1300,energy efficiency,core,core,1300," | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1550,energy efficiency,core,core,1550,"/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1953,energy efficiency,core,core,1953,"/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2203,energy efficiency,core,core,2203,"master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: decla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2607,energy efficiency,core,core,2607,"is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2851,energy efficiency,core,core,2851,"aces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3400,energy efficiency,core,core,3400,"j/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3948,energy efficiency,core,core,3948," 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4491,energy efficiency,core,core,4491,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1670,interoperability,compatib,compatibility,1670,"/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2324,interoperability,compatib,compatibility,2324,"nfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2972,interoperability,compatib,compatibility,2972,"amerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3520,interoperability,compatib,compatibility,3520,"/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4069,interoperability,compatib,compatibility,4069,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4612,interoperability,compatib,compatibility,4612,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:247,modifiability,variab,variable,247,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:821,modifiability,variab,variable,821,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1373,modifiability,variab,variable,1373,"aces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2026,modifiability,variab,variable,2026,"ompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2680,modifiability,variab,variable,2680,"with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/space",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3222,modifiability,variab,variable,3222,".h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3770,modifiability,variab,variable,3770,"3, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4319,modifiability,variab,variable,4319,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:218,performance,error,error,218,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:792,performance,error,error,792,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1344,performance,error,error,1344,"ointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1997,performance,error,error,1997,"declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2651,performance,error,error,2651,"its = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3193,performance,error,error,3193,"c/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3741,performance,error,error,3741," = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4290,performance,error,error,4290,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:218,safety,error,error,218,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:792,safety,error,error,792,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1344,safety,error,error,1344,"ointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1997,safety,error,error,1997,"declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2651,safety,error,error,2651,"its = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3193,safety,error,error,3193,"c/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3741,safety,error,error,3741," = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4290,safety,error,error,4290,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4761,safety,test,testing,4761,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4893,security,sign,significantly,4893,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4761,testability,test,testing,4761,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:218,usability,error,error,218,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:792,usability,error,error,792,"The warnings are still there:. ```txt. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 50 | kIsPointer = BIT(2), // data member is a pointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1344,usability,error,error,1344,"ointer. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here. 78 | kIsPointer = 0x00001000,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 77 | kIsCompiled = BIT(16),. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:1997,usability,error,error,1997,"declaration is here. 86 | kIsCompiled = kIsCCompiled,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:2651,usability,error,error,2651,"its = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3193,usability,error,error,3193,"c/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:94:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 94 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:3741,usability,error,error,3741," = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4290,usability,error,error,4290,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:4828,usability,consist,consistent,4828,"amerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:161:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 161 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:20: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:. /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:165:75: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]. 165 | kUChar = 11, kUShort = 12, kUInt = 13, kULong = 14, kBits = 15,. | ^. /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:36: note: previous declaration is here. 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,. | ^. ```. But they are not really overwhelming, i.e. the output is not flooded by them. Maybe, since we're not testing clang on the CI anyway, we should make the `-Wshadow` flag consistent with gcc and just produce these warnings? That would *significantly* increase the likelihood that they get fixed, comparing to just having an old Jira issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15379:88,interoperability,compatib,compatibility,88,"What I wondered reading the JIRA ticket is if there is a ""good"" way to fix the warning (compatibility etc.)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15382:82,integrability,event,event,82,@linev Please check. The changes and testing have been done based on FireworksWeb event display.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:37,safety,test,testing,37,@linev Please check. The changes and testing have been done based on FireworksWeb event display.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:37,testability,test,testing,37,@linev Please check. The changes and testing have been done based on FireworksWeb event display.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15385:9,availability,failur,failure,9,"The only failure is due to TMVA, merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:9,deployability,fail,failure,9,"The only failure is due to TMVA, merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:9,performance,failur,failure,9,"The only failure is due to TMVA, merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:9,reliability,fail,failure,9,"The only failure is due to TMVA, merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15386:13,safety,test,test,13,Can we add a test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:13,testability,test,test,13,Can we add a test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:121,energy efficiency,core,core,121,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:25,safety,test,testing,25,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:137,safety,test,test,137,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:15,testability,simpl,simple,15,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:25,testability,test,testing,25,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:62,testability,unit,unit,62,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:137,testability,test,test,137,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:15,usability,simpl,simple,15,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15388:379,availability,error,error,379,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:485,availability,error,error,485,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:925,availability,error,error,925,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1004,availability,Error,Error,1004,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1011,availability,Error,Error,1011,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:362,deployability,patch,patches,362,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:410,deployability,updat,update,410,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:417,deployability,fail,failed,417,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:466,deployability,patch,patches,466,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:513,deployability,contain,contain,513,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:676,deployability,manag,managing-protected-branches,676,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:845,deployability,patch,patches,845,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:883,deployability,patch,patches,883,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:932,deployability,fail,failed,932,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1045,deployability,fail,failed,1045,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:676,energy efficiency,manag,managing-protected-branches,676,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:48,integrability,repositor,repository,48,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:92,integrability,repositor,repository,92,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:612,integrability,repositor,repositories,612,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:625,integrability,configur,configuring-branches-and-merges-in-your-repository,625,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:48,interoperability,repositor,repository,48,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:92,interoperability,repositor,repository,92,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:612,interoperability,repositor,repositories,612,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:665,interoperability,repositor,repository,665,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:625,modifiability,configur,configuring-branches-and-merges-in-your-repository,625,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:379,performance,error,error,379,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:485,performance,error,error,485,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:925,performance,error,error,925,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1004,performance,Error,Error,1004,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1011,performance,Error,Error,1011,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:20,reliability,doe,does,20,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:417,reliability,fail,failed,417,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:932,reliability,fail,failed,932,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1045,reliability,fail,failed,1045,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:362,safety,patch,patches,362,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:379,safety,error,error,379,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:410,safety,updat,update,410,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:466,safety,patch,patches,466,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:485,safety,error,error,485,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:676,safety,manag,managing-protected-branches,676,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:845,safety,patch,patches,845,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:883,safety,patch,patches,883,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:925,safety,error,error,925,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1004,safety,Error,Error,1004,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1011,safety,Error,Error,1011,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:362,security,patch,patches,362,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:410,security,updat,update,410,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:466,security,patch,patches,466,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:547,security,authoriz,authorized,547,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:625,security,configur,configuring-branches-and-merges-in-your-repository,625,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:845,security,patch,patches,845,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:883,security,patch,patches,883,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:909,testability,hook,hook,909,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:167,usability,support,supports,167,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:379,usability,error,error,379,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:485,usability,error,error,485,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:925,usability,error,error,925,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1004,usability,Error,Error,1004,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15388:1011,usability,Error,Error,1011,"The backport action does not mesh well with our repository. As seen in:. ```. Warning: Your repository allows merge commits and rebase merging. However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests. ```. and then later. ```. /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches. remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. . remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. . To https://github.com/root-project/root.git. ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined). error: failed to push some refs to 'https://github.com/root-project/root.git'. Error: Error: The process '/usr/bin/git' failed with exit code 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15388
https://github.com/root-project/root/pull/15393:6,deployability,fail,failing,6,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:254,performance,cach,caching,254,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:6,reliability,fail,failing,6,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:14,safety,test,tests,14,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:61,safety,test,test-friendinfo,61,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:105,safety,test,test-headnode,105,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:147,safety,test,test-ranges,147,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:196,safety,test,test-dist,196,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:243,safety,test,test-graph-caching,243,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:14,testability,test,tests,14,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:56,testability,unit,unit-test-friendinfo,56,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:100,testability,unit,unit-test-headnode,100,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:142,testability,unit,unit-test-ranges,142,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:183,testability,unit,unit-backend-test-dist,183,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:230,testability,unit,unit-backend-test-graph-caching,230,A few failing tests so far:. ```. 2:pyunittests-distrdf-unit-test-friendinfo. 3:pyunittests-distrdf-unit-test-headnode. 8:pyunittests-distrdf-unit-test-ranges. 10:pyunittests-distrdf-unit-backend-test-dist. 11:pyunittests-distrdf-unit-backend-test-graph-caching. 1192:tutorial-dataframe-df007_snapshot-py. 1385:tutorial-tmva-TMVA_CNN_Classification-py. 1386:tutorial-tmva-TMVA_Higgs_Classification-py. 1670:roottest-python-distrdf-backends-test_all. ```. @lmoneta @vepadulano,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:35,availability,failur,failures,35,"A suggestion to maybe fix the TMVA failures: maybe It's the openblas incompatibility with NumPy that we also saw on alma9, which we can about by disabling `tmva-cpu`? * https://github.com/root-project/root/pull/15302. * https://github.com/root-project/root/issues/15309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:35,deployability,fail,failures,35,"A suggestion to maybe fix the TMVA failures: maybe It's the openblas incompatibility with NumPy that we also saw on alma9, which we can about by disabling `tmva-cpu`? * https://github.com/root-project/root/pull/15302. * https://github.com/root-project/root/issues/15309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:161,energy efficiency,cpu,cpu,161,"A suggestion to maybe fix the TMVA failures: maybe It's the openblas incompatibility with NumPy that we also saw on alma9, which we can about by disabling `tmva-cpu`? * https://github.com/root-project/root/pull/15302. * https://github.com/root-project/root/issues/15309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:69,interoperability,incompatib,incompatibility,69,"A suggestion to maybe fix the TMVA failures: maybe It's the openblas incompatibility with NumPy that we also saw on alma9, which we can about by disabling `tmva-cpu`? * https://github.com/root-project/root/pull/15302. * https://github.com/root-project/root/issues/15309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:35,performance,failur,failures,35,"A suggestion to maybe fix the TMVA failures: maybe It's the openblas incompatibility with NumPy that we also saw on alma9, which we can about by disabling `tmva-cpu`? * https://github.com/root-project/root/pull/15302. * https://github.com/root-project/root/issues/15309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:161,performance,cpu,cpu,161,"A suggestion to maybe fix the TMVA failures: maybe It's the openblas incompatibility with NumPy that we also saw on alma9, which we can about by disabling `tmva-cpu`? * https://github.com/root-project/root/pull/15302. * https://github.com/root-project/root/issues/15309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:35,reliability,fail,failures,35,"A suggestion to maybe fix the TMVA failures: maybe It's the openblas incompatibility with NumPy that we also saw on alma9, which we can about by disabling `tmva-cpu`? * https://github.com/root-project/root/pull/15302. * https://github.com/root-project/root/issues/15309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:16,energy efficiency,cpu,cpu,16,I disabled tmva-cpu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:16,performance,cpu,cpu,16,I disabled tmva-cpu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15393:158,testability,understand,understand,158,"About Fedora 40 compression size change, I recently merged this PR that already changed the thresholds:. * https://github.com/root-project/root/pull/14295. I understand now from the last group meeting that it would be better to not change these thresholds, because we want to ensure small compression size. So maybe, that PR needs to be reverted?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15393
https://github.com/root-project/root/pull/15398:33,testability,simpl,simplify,33,"cc: @devajithvs, that might also simplify your migration efforts a little..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:33,usability,simpl,simplify,33,"cc: @devajithvs, that might also simplify your migration efforts a little..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/issues/15399:215,availability,operat,operations,215,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:16,deployability,patch,patch,16,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:36,deployability,log,log,36,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:75,deployability,log,log,75,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:147,deployability,log,log,147,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:16,safety,patch,patch,16,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:36,safety,log,log,36,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:75,safety,log,log,75,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:147,safety,log,log,147,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:16,security,patch,patch,16,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:36,security,log,log,36,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:75,security,log,log,75,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:147,security,log,log,147,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:36,testability,log,log,36,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:75,testability,log,log,75,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:147,testability,log,log,147,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/pull/15402:58,modifiability,pac,package,58,Thanks! That should not be a problem. The `python*-jsmva` package will just be gone and the code is absorbed by `python*-root`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15404:28,usability,user,user,28,What are the changes from a user point of view?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:387,deployability,modul,module,387,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:526,deployability,modul,module,526,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:713,deployability,instal,installing,713,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:742,deployability,modul,module,742,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:557,energy efficiency,current,current,557,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:278,integrability,sub,submodule,278,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:196,interoperability,platform,platforms,196,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:41,modifiability,pac,packaging,41,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:387,modifiability,modul,module,387,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:526,modifiability,modul,module,526,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:609,modifiability,pac,packagers,609,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:645,modifiability,pac,package,645,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:742,modifiability,modul,module,742,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:387,safety,modul,module,387,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:526,safety,modul,module,526,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:742,safety,modul,module,742,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:27,usability,user,user,27,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:345,usability,user,user,345,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:363,usability,user,user,363,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:688,usability,clear,clearer,688,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:26,availability,Failur,Failure,26,Rebased on top of master. Failure on macos14 is because of the known xml2 issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:26,deployability,Fail,Failure,26,Rebased on top of master. Failure on macos14 is because of the known xml2 issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:26,performance,Failur,Failure,26,Rebased on top of master. Failure on macos14 is because of the known xml2 issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/pull/15404:26,reliability,Fail,Failure,26,Rebased on top of master. Failure on macos14 is because of the known xml2 issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/issues/15405:48,deployability,updat,update,48,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:85,deployability,log,logic,85,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:138,interoperability,compatib,compatibility,138,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:48,safety,updat,update,48,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:85,safety,log,logic,85,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:48,security,updat,update,48,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:85,security,log,logic,85,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:85,testability,log,logic,85,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15406:253,safety,test,test,253,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:648,safety,test,test,648,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:253,testability,test,test,253,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:648,testability,test,test,648,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:1430,testability,context,context,1430,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:33,usability,behavi,behavior,33,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:227,usability,User,Users,227,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:622,usability,User,Users,622,"One of the parts/elements of the behavior is that:. ```. cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);. ```. with. ```. name == ""E"" and dc == decl_for(""B""). ```. and with `B`:. ```. NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B. |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E. `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'. `-EnumType 0x156e8b590 'A::E'. `-Enum 0x156e8b4c8 'E'. ```. returns the E decl (i.e. ignores the `UsingShadowDecl`):. ```. (lldb) p R.getFoundDecl()->dump(). EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E. `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'. ```. later in the `TEnum::Get` process:. ```. * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11. frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26. frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60. ```. ```TCling::ClassInfo_Contains``` rejects the enum since:. ```. return declDC->Equals(ctxt);. ```. is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:29,deployability,Updat,Update,29,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:175,deployability,Updat,Update,175,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:40,interoperability,semant,semantic,40,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:29,safety,Updat,Update,29,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:175,safety,Updat,Update,175,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:239,safety,input,input,239,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:29,security,Updat,Update,29,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:175,security,Updat,Update,175,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:239,usability,input,input,239,So there is 2 solutions:. 1. Update the semantic of `TClass::GetListOfEnums` to also include the indirect declaration (relaxing/removing the call to `ClassInfo_Contains`). 2. Update `TEnum::GetEnum` to first do a name normalization on the input (likely the right solution but we need to be careful in regard to autoloading (see `TClass::GetClass`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/pull/15408:138,reliability,doe,does,138,"This LGTM (also in view of https://github.com/root-project/roottest/pull/1118, thanks for the test!), but is now marked as a Draft - what does this mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:94,safety,test,test,94,"This LGTM (also in view of https://github.com/root-project/roottest/pull/1118, thanks for the test!), but is now marked as a Draft - what does this mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:94,testability,test,test,94,"This LGTM (also in view of https://github.com/root-project/roottest/pull/1118, thanks for the test!), but is now marked as a Draft - what does this mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:34,availability,failur,failure,34,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:60,availability,down,down,60,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:121,availability,state,state,121,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:34,deployability,fail,failure,34,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:121,integrability,state,state,121,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:34,performance,failur,failure,34,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:86,performance,lock,lock,86,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:34,reliability,fail,failure,34,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:29,safety,test,test,29,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:86,security,lock,lock,86,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:29,testability,test,test,29,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:124,availability,failur,failure,124,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:112,deployability,fail,fail,112,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:124,deployability,fail,failure,124,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:202,interoperability,format,format,202,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:124,performance,failur,failure,124,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:112,reliability,fail,fail,112,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:124,reliability,fail,failure,124,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15411:31,testability,simpl,simple,31,@linev Please check. This is a simple backport with change in digits rendering in RenderCore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15411
https://github.com/root-project/root/pull/15411:31,usability,simpl,simple,31,@linev Please check. This is a simple backport with change in digits rendering in RenderCore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15411
https://github.com/root-project/root/issues/15413:87,deployability,stack,stacks,87,Hi @dpiparo @lmoneta. Can this still be considered for 6.32? Would be nice for the LCG stacks if we could go to the latest cudnn with cuda 12.4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:44,deployability,build,build,44,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:657,deployability,build,build,657,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:715,deployability,observ,observation,715,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:842,deployability,build,build,842,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1404,deployability,continu,continue,1404,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:326,energy efficiency,core,core,326,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:106,integrability,interfac,interface,106,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1127,integrability,event,event,1127,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1436,integrability,compon,component,1436,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:106,interoperability,interfac,interface,106,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:514,interoperability,Architectur,Architectures,514,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1436,interoperability,compon,component,1436,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:106,modifiability,interfac,interface,106,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:380,modifiability,pac,package,380,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:388,modifiability,maintain,maintainer,388,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:742,modifiability,pac,packagers,742,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1436,modifiability,compon,component,1436,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:940,reliability,doe,doesn,940,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:199,safety,test,tests,199,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:388,safety,maintain,maintainer,388,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1466,safety,compl,complains,1466,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:11,security,assess,assess,11,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:538,security,sign,significant,538,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1466,security,compl,complains,1466,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:199,testability,test,tests,199,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:715,testability,observ,observation,715,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:188,usability,help,help,188,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1279,usability,support,support,1279,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1461,usability,user,user,1461,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change! I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:. https://github.com/root-project/root/pull/6058. Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT? I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:. * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn. * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent. * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:21,integrability,sub,submitted,21,"master done, 6.32 PR submitted, tests running https://github.com/root-project/root/pull/15636",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:32,safety,test,tests,32,"master done, 6.32 PR submitted, tests running https://github.com/root-project/root/pull/15636",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:32,testability,test,tests,32,"master done, 6.32 PR submitted, tests running https://github.com/root-project/root/pull/15636",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/pull/15415:13,safety,accid,accidentally,13,"apologies, I accidentally asked a re-review by @guitargeek :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15415
https://github.com/root-project/root/pull/15415:37,safety,review,review,37,"apologies, I accidentally asked a re-review by @guitargeek :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15415
https://github.com/root-project/root/pull/15415:37,testability,review,review,37,"apologies, I accidentally asked a re-review by @guitargeek :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15415
https://github.com/root-project/root/pull/15416:20,availability,error,error,20,> LGTM. The related error message and disabling is done (correctly in regard to this fix) on `CMakeLists.txt` line 99 to 106. That is correct! I should have maybe explained it in the PR description. Thank you very much for double-checking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:26,integrability,messag,message,26,> LGTM. The related error message and disabling is done (correctly in regard to this fix) on `CMakeLists.txt` line 99 to 106. That is correct! I should have maybe explained it in the PR description. Thank you very much for double-checking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:26,interoperability,messag,message,26,> LGTM. The related error message and disabling is done (correctly in regard to this fix) on `CMakeLists.txt` line 99 to 106. That is correct! I should have maybe explained it in the PR description. Thank you very much for double-checking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:20,performance,error,error,20,> LGTM. The related error message and disabling is done (correctly in regard to this fix) on `CMakeLists.txt` line 99 to 106. That is correct! I should have maybe explained it in the PR description. Thank you very much for double-checking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:20,safety,error,error,20,> LGTM. The related error message and disabling is done (correctly in regard to this fix) on `CMakeLists.txt` line 99 to 106. That is correct! I should have maybe explained it in the PR description. Thank you very much for double-checking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:20,usability,error,error,20,> LGTM. The related error message and disabling is done (correctly in regard to this fix) on `CMakeLists.txt` line 99 to 106. That is correct! I should have maybe explained it in the PR description. Thank you very much for double-checking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:84,availability,down,download,84,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:238,availability,down,downloaded,238,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:160,deployability,build,build,160,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:200,deployability,build,building,200,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:405,deployability,modul,modules,405,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:450,deployability,version,versions,450,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:450,integrability,version,versions,450,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:335,interoperability,specif,specified,335,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:405,modifiability,modul,modules,405,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:450,modifiability,version,versions,450,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:73,performance,Perform,Performing,73,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:414,reliability,Doe,Does,414,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:272,safety,safe,safely,272,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:293,safety,isol,isolated,293,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:405,safety,modul,modules,405,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:293,security,iso,isolated,293,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:293,testability,isol,isolated,293,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:73,usability,Perform,Performing,73,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:161,availability,reliab,reliable,161,"Thank you. Not exactly: in my case I was online, and then went offline. The. build process for ROOT takes several hours on my laptop. I wouldn't call that check reliable. Ideally, it could download the files. during that check or in the beginning of the build process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:189,availability,down,download,189,"Thank you. Not exactly: in my case I was online, and then went offline. The. build process for ROOT takes several hours on my laptop. I wouldn't call that check reliable. Ideally, it could download the files. during that check or in the beginning of the build process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:77,deployability,build,build,77,"Thank you. Not exactly: in my case I was online, and then went offline. The. build process for ROOT takes several hours on my laptop. I wouldn't call that check reliable. Ideally, it could download the files. during that check or in the beginning of the build process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:254,deployability,build,build,254,"Thank you. Not exactly: in my case I was online, and then went offline. The. build process for ROOT takes several hours on my laptop. I wouldn't call that check reliable. Ideally, it could download the files. during that check or in the beginning of the build process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:161,reliability,reliab,reliable,161,"Thank you. Not exactly: in my case I was online, and then went offline. The. build process for ROOT takes several hours on my laptop. I wouldn't call that check reliable. Ideally, it could download the files. during that check or in the beginning of the build process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15417:7,deployability,updat,updated,7,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:72,deployability,configurat,configuration,72,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:72,integrability,configur,configuration,72,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:72,modifiability,configur,configuration,72,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:86,performance,time,time,86,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:7,safety,updat,updated,7,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:44,safety,test,test,44,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:106,safety,test,test,106,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:7,security,updat,updated,7,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:72,security,configur,configuration,72,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:115,security,Crypto,CryptoRandom,115,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:44,testability,test,test,44,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:106,testability,test,test,106,I have updated the commit to also include a test inside the code run at configuration time by cmake (same test as `CryptoRandom` from `TSystemTests.cxx`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15420:21,safety,review,review,21,Thanks a lot for the review! Can you maybe review the corresponding PR in roottest too? Thanks! https://github.com/root-project/roottest/pull/1120,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:43,safety,review,review,43,Thanks a lot for the review! Can you maybe review the corresponding PR in roottest too? Thanks! https://github.com/root-project/roottest/pull/1120,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:21,testability,review,review,21,Thanks a lot for the review! Can you maybe review the corresponding PR in roottest too? Thanks! https://github.com/root-project/roottest/pull/1120,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:43,testability,review,review,43,Thanks a lot for the review! Can you maybe review the corresponding PR in roottest too? Thanks! https://github.com/root-project/roottest/pull/1120,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15421:0,availability,Failur,Failure,0,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:474,availability,Error,Error,474,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:547,availability,error,error,547,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:0,deployability,Fail,Failure,0,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:177,deployability,modul,module,177,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:364,deployability,fail,failed,364,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:504,deployability,build,build,504,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:536,integrability,messag,message,536,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:536,interoperability,messag,message,536,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:177,modifiability,modul,module,177,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:0,performance,Failur,Failure,0,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:474,performance,Error,Error,474,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:547,performance,error,error,547,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:0,reliability,Fail,Failure,0,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:364,reliability,fail,failed,364,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:177,safety,modul,module,177,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:474,safety,Error,Error,474,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:547,safety,error,error,547,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:186,security,session,session,186,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:232,security,Session,Session,232,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:272,security,Session,Session,272,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:281,security,Session,Session,281,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:56,testability,Trace,Traceback,56,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:474,usability,Error,Error,474,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15421:547,usability,error,error,547,"Failure on `alma8` looks unrelated to this PR:. ```txt. Traceback (most recent call last):. File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>. session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(). cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>. runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0. CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15421
https://github.com/root-project/root/pull/15423:76,deployability,modul,modules,76,There are still some outdated mentions left:. ```. $ git grep xrdinc. cmake/modules/RootConfiguration.cmake:set(xrdincdir). config/Makefile.in:XRDINCDIR := @xrdincdir@. config/Makefile.in:XRDINCPRIVATE := @xrdincprivate@. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15423:76,modifiability,modul,modules,76,There are still some outdated mentions left:. ```. $ git grep xrdinc. cmake/modules/RootConfiguration.cmake:set(xrdincdir). config/Makefile.in:XRDINCDIR := @xrdincdir@. config/Makefile.in:XRDINCPRIVATE := @xrdincprivate@. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15423:76,safety,modul,modules,76,There are still some outdated mentions left:. ```. $ git grep xrdinc. cmake/modules/RootConfiguration.cmake:set(xrdincdir). config/Makefile.in:XRDINCDIR := @xrdincdir@. config/Makefile.in:XRDINCPRIVATE := @xrdincprivate@. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/issues/15425:294,integrability,event,events,294,"Not sure if it's a bug or a feature... With TTreeProcessorMP, if the number of files to process is larger than the number of worker processes, the process is invoked once per file. Otherwise entries are divided equally between workers. . To see this, change your code to have 10 files and 1000 events per file:. ```. ULong_t n_files = 10;. ULong_t ev_per_file = 1000;. ```. you'll see:. ```. TParameter<int> ct = 10000. ```. But I might be wrong and @pcanal, @dpiparo, or @guitargeek can correct me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:84,integrability,event,events,84,"But isn't the report about the opposite case, i.e. when there are more workers than events to process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:46,integrability,event,events,46,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:66,integrability,event,event,66,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:201,integrability,event,events,201,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:252,integrability,event,event,252,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:371,integrability,event,events,371,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:523,integrability,event,event,523,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:427,performance,time,times,427,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:557,performance,time,times,557,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:306,safety,compl,complex,306,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:306,security,compl,complex,306,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:334,security,ident,identify,334,"It's about having more threads in a file than events (there's one event per file). As mentioned above, it seems like the process is getting invoked once per thread per file, but if there aren't enough events, the extra threads seem to reprocess an old event. This is what we had noticed with the much more complex code that led us to identify this, which is that certain events were getting processed and histogrammed multiple times in cases like this. We were able to work around this successfully by checking if the same event is being processed multiple times in a row.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:218,availability,Sla,SlaveBegin,218,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:376,availability,Sla,SlaveTerminate,376,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:164,integrability,pub,public,164,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:184,integrability,pub,public,184,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:218,reliability,Sla,SlaveBegin,218,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:376,reliability,Sla,SlaveTerminate,376,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:149,safety,Test,TestSelector,149,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:485,safety,Test,TestSelector,485,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:149,testability,Test,TestSelector,149,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:485,testability,Test,TestSelector,485,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:18,usability,behavi,behaviour,18,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:31,usability,confirm,confirmed,31,"In this case, the behaviour is confirmed:. ```cpp. void fill(){. ROOT::RDataFrame(3).Define(""a"", [](){return 1;}).Snapshot(""t"", ""f.root"");. }. class TestSelector : public TSelector {. public:. TH1F *h;. . virtual void SlaveBegin(TTree*) {. h = new TH1F(""h"", ""h"", 8, -1, 1);. h->SetDirectory(0);. }. virtual bool Process(Long64_t) {. h->Fill(0);. return true;. }. virtual void SlaveTerminate() {. GetOutputList()->Add(h);. }. };. void b(){. //fill();. ROOT::TTreeProcessorMP pool(12);. TestSelector sel;. auto h = pool.Process(""f.root"", sel);. h->At(0)->Print();. }. ```. prints *TH1.Print Name = h, Entries= 11, Total sum= 11*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/pull/15426:43,integrability,messag,message,43,"> Did we warn SPI about this? Yes, I got a message from @guitargeek . We are not setting this option anywhere. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15426
https://github.com/root-project/root/pull/15426:43,interoperability,messag,message,43,"> Did we warn SPI about this? Yes, I got a message from @guitargeek . We are not setting this option anywhere. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15426
https://github.com/root-project/root/issues/15430:63,deployability,releas,release,63,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:208,deployability,releas,release,208,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:242,deployability,patch,patch,242,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:248,deployability,releas,release,248,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:381,deployability,patch,patch,381,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:616,deployability,continu,continue,616,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:264,integrability,event,eventual,264,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:488,interoperability,bind,bindings,488,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:488,modifiability,bind,bindings,488,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:242,safety,patch,patch,242,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:381,safety,patch,patch,381,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:242,security,patch,patch,242,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:381,security,patch,patch,381,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:144,usability,prefer,prefer,144,"I don't know how these tuples end up there. But given that the release of 6.32 is in 20 days, and a lot of the PyROOT code was changed, I would prefer to defer the investigation of that issue until after the release. There will be no 6.30.06 patch release with an eventual fix that you could use before anyway. Is that okay for you? If you want to make things compile, a temporary patch could be to add a check for tuple after this line:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py#L207. ```python. if isinstance(func_new, tuple):. continue. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15434:153,deployability,automat,automatically,153,"Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. By the way, there are `clang-tidy` checks to do this automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:87,energy efficiency,optim,optimize,87,"Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. By the way, there are `clang-tidy` checks to do this automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:87,performance,optimiz,optimize,87,"Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. By the way, there are `clang-tidy` checks to do this automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:153,testability,automat,automatically,153,"Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. By the way, there are `clang-tidy` checks to do this automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:225,deployability,automat,automatically,225,"> Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. Yes, I could. But not before next week (I am quite busy this week). > By the way, there are `clang-tidy` checks to do this automatically. Oh, I didn't know. Which ones do you mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:89,energy efficiency,optim,optimize,89,"> Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. Yes, I could. But not before next week (I am quite busy this week). > By the way, there are `clang-tidy` checks to do this automatically. Oh, I didn't know. Which ones do you mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:89,performance,optimiz,optimize,89,"> Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. Yes, I could. But not before next week (I am quite busy this week). > By the way, there are `clang-tidy` checks to do this automatically. Oh, I didn't know. Which ones do you mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:225,testability,automat,automatically,225,"> Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. Yes, I could. But not before next week (I am quite busy this week). > By the way, there are `clang-tidy` checks to do this automatically. Oh, I didn't know. Which ones do you mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:16,usability,effectiv,effective,16,Note that to be effective this change would also require the addition of a move constructor in `TString`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:57,deployability,automat,automatically,57,"> > By the way, there are `clang-tidy` checks to do this automatically. > . > Oh, I didn't know. Which ones do you mean? This looks like one: https://clang.llvm.org/extra/clang-tidy/checks/modernize/pass-by-value.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:57,testability,automat,automatically,57,"> > By the way, there are `clang-tidy` checks to do this automatically. > . > Oh, I didn't know. Which ones do you mean? This looks like one: https://clang.llvm.org/extra/clang-tidy/checks/modernize/pass-by-value.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:18,usability,effectiv,effective,18,> Note that to be effective this change would also require the addition of a move constructor in `TString`. I think this exists already? https://root.cern.ch/doc/master/classTString.html#a97795e61556ec0ced81e15cdfa26a538. ```cpp. TString::TString(TString&& s). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/pull/15435:70,availability,avail,available,70,I'll try the stricter version now to see if the native openGL is even available:. ```. set(CMAKE_FIND_FRAMEWORK ONLY). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:22,deployability,version,version,22,I'll try the stricter version now to see if the native openGL is even available:. ```. set(CMAKE_FIND_FRAMEWORK ONLY). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:22,integrability,version,version,22,I'll try the stricter version now to see if the native openGL is even available:. ```. set(CMAKE_FIND_FRAMEWORK ONLY). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:22,modifiability,version,version,22,I'll try the stricter version now to see if the native openGL is even available:. ```. set(CMAKE_FIND_FRAMEWORK ONLY). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:70,reliability,availab,available,70,I'll try the stricter version now to see if the native openGL is even available:. ```. set(CMAKE_FIND_FRAMEWORK ONLY). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:70,safety,avail,available,70,I'll try the stricter version now to see if the native openGL is even available:. ```. set(CMAKE_FIND_FRAMEWORK ONLY). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:70,security,availab,available,70,I'll try the stricter version now to see if the native openGL is even available:. ```. set(CMAKE_FIND_FRAMEWORK ONLY). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15437:25,deployability,patch,patch,25,"We've verified that your patch fixes Root with our in-development compiler and STL, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:25,safety,patch,patch,25,"We've verified that your patch fixes Root with our in-development compiler and STL, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:25,security,patch,patch,25,"We've verified that your patch fixes Root with our in-development compiler and STL, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:6,testability,verif,verified,6,"We've verified that your patch fixes Root with our in-development compiler and STL, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15438:16,usability,learn,learning,16,Interesting for learning what would happen.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15438
https://github.com/root-project/root/pull/15443:199,safety,test,test,199,Ok I think this should now be ready to go. This issue explains why the `Constrain(np)` was otherwise needed to get the cms higgs fits to work. Now I think that option should become unnecessary (will test fully once merged into master),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:199,testability,test,test,199,Ok I think this should now be ready to go. This issue explains why the `Constrain(np)` was otherwise needed to get the cms higgs fits to work. Now I think that option should become unnecessary (will test fully once merged into master),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15444:65,availability,down,downcasting,65,"Closing, because this would not be needed anymore once automatic downcasting of smartpointers is implemented:. * https://github.com/root-project/root/issues/16210",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:55,deployability,automat,automatic,55,"Closing, because this would not be needed anymore once automatic downcasting of smartpointers is implemented:. * https://github.com/root-project/root/issues/16210",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:55,testability,automat,automatic,55,"Closing, because this would not be needed anymore once automatic downcasting of smartpointers is implemented:. * https://github.com/root-project/root/issues/16210",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15448:24,energy efficiency,Cool,Cool,24,"> Thanks, works for me! Cool, thanks for trying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15448
https://github.com/root-project/root/pull/15451:64,usability,help,help,64,"See my example in the commit msg, I don't think `explicit` will help here, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:98,availability,error,error,98,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:234,deployability,build,build,234,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:479,deployability,build,build,479,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:115,interoperability,convers,conversion,115,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:311,interoperability,convers,conversion,311,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:621,interoperability,compatib,compatibility,621,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:865,interoperability,compatib,compatibility,865,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:98,performance,error,error,98,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:98,safety,error,error,98,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:9,usability,help,help,9,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:98,usability,error,error,98,"It would help with your example:. ```txt. root [0] TList mylist = new TList(). ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'. TList mylist = new TList(). ^ ~~~~~~~~~~~. /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *. TList(const TList&) = delete;. ^. /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate. explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use. ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:173,deployability,releas,release,173,"Just as a fly-by comment, I don't know if we can retire or in general change the signature of a constructor of a core class like that. It will probably require at least one release cycle with a warning printed whenever it is used. Then I would also agree with @guitargeek that the explicit constructor is the better approach here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:113,energy efficiency,core,core,113,"Just as a fly-by comment, I don't know if we can retire or in general change the signature of a constructor of a core class like that. It will probably require at least one release cycle with a warning printed whenever it is used. Then I would also agree with @guitargeek that the explicit constructor is the better approach here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:81,security,sign,signature,81,"Just as a fly-by comment, I don't know if we can retire or in general change the signature of a constructor of a core class like that. It will probably require at least one release cycle with a warning printed whenever it is used. Then I would also agree with @guitargeek that the explicit constructor is the better approach here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:174,availability,error,error,174,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:224,availability,error,error,224,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:174,performance,error,error,174,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:224,performance,error,error,224,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:174,safety,error,error,174,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:224,safety,error,error,224,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:174,usability,error,error,174,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:224,usability,error,error,224,"What about first deprecating it? ```cpp. [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}. ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:33,availability,error,error,33,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:83,availability,error,error,83,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:1365,deployability,Releas,ReleaseNotes,1365,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:607,interoperability,compatib,compatibility,607,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:33,performance,error,error,33,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:83,performance,error,error,83,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:33,safety,error,error,33,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:83,safety,error,error,83,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:985,security,sign,signature,985,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:33,usability,error,error,33,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:83,usability,error,error,83,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:862,usability,user,user,862,"> `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. No it won't the cases where the TObject is explicitly passed to the constructor would still correctly compile (like in [gui/gui/src/TGTable.cxx](https://github.com/root-project/root/pull/15451/files#diff-b4d685b49ccf5a970cd4c04abfd67249ec82a844dbabc8ba5dfeefdcbf2b496a) touched in this PR). It's only the case in the PR description with the wrong left-hand side type that would not compile anymore with explicit. So by using `explicit` we would keep more compatibility with existing code. However, there are also other reasons why this constructor is dangerous, even if it's `explicit`. Take this code for example:. ```c++. auto n = new TNamed;. auto l1 = new TList;. auto l2 = new TList{l1}; // let's say the user intended a copy here, but forgot to dereference l1. // it will still compile and call this ""dangerous ctor""! ```. The signature is extremely easy to confuse with a copy constructor too. So maybe removing it is indeed better. You can use the ROOT deprecation macro for this (at the end of the declaration before the semicolon) like in this PR for example:. https://github.com/root-project/root/pull/14954. And please add a bullet point here:. https://github.com/root-project/root/blob/master/README/ReleaseNotes/v632/index.md#deprecation-and-removal. Then we will remove it later when the 6.34 development cycle starts (that's what the `R__DEPRECATE` macro is for - there is a mechanism to remind us to remove what we promised to remove in the codebase).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:859,integrability,discover,discovering,859,"This constructor has been deprecated for 24 years :( (We did not have the deprecation macros back then). For your amusement the previous implementation was:. ```. - TList(TObject *parent) : TSeqCollection(parent) { fFirst=fLast=fCache=0; }. ```. I.e. the collection was recording its owner. When (Sept 2000) this back link was removed, the constructor became equivalent to the default constructor. So the constructor is 'wrong' but harmless when used as originally intended (i.e. existing 'correct' code is fine). When used unintentionally (when the explicit removed copy constructor was intended) the bad result should be 'obvious' (missing data). My conclusion is that it needs to be removed (as it is useless and confusing) but there is not urgency (first report in 20 years? :) ) and thus we should go through the normal deprecation mechanism. Thanks for discovering this and creating this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:859,interoperability,discover,discovering,859,"This constructor has been deprecated for 24 years :( (We did not have the deprecation macros back then). For your amusement the previous implementation was:. ```. - TList(TObject *parent) : TSeqCollection(parent) { fFirst=fLast=fCache=0; }. ```. I.e. the collection was recording its owner. When (Sept 2000) this back link was removed, the constructor became equivalent to the default constructor. So the constructor is 'wrong' but harmless when used as originally intended (i.e. existing 'correct' code is fine). When used unintentionally (when the explicit removed copy constructor was intended) the bad result should be 'obvious' (missing data). My conclusion is that it needs to be removed (as it is useless and confusing) but there is not urgency (first report in 20 years? :) ) and thus we should go through the normal deprecation mechanism. Thanks for discovering this and creating this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:859,usability,discov,discovering,859,"This constructor has been deprecated for 24 years :( (We did not have the deprecation macros back then). For your amusement the previous implementation was:. ```. - TList(TObject *parent) : TSeqCollection(parent) { fFirst=fLast=fCache=0; }. ```. I.e. the collection was recording its owner. When (Sept 2000) this back link was removed, the constructor became equivalent to the default constructor. So the constructor is 'wrong' but harmless when used as originally intended (i.e. existing 'correct' code is fine). When used unintentionally (when the explicit removed copy constructor was intended) the bad result should be 'obvious' (missing data). My conclusion is that it needs to be removed (as it is useless and confusing) but there is not urgency (first report in 20 years? :) ) and thus we should go through the normal deprecation mechanism. Thanks for discovering this and creating this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:26,deployability,updat,updated,26,Thx for the discussion! I updated the PR to deprecate the ctor in question for future removal as suggested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:26,safety,updat,updated,26,Thx for the discussion! I updated the PR to deprecate the ctor in question for future removal as suggested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:26,security,updat,updated,26,Thx for the discussion! I updated the PR to deprecate the ctor in question for future removal as suggested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15452:91,deployability,artifact,artifacts,91,"> Can we have a test for this? For the moment we do not have methods to test communication artifacts. . One side is JavaScript, other side is ROOT C++. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:16,safety,test,test,16,"> Can we have a test for this? For the moment we do not have methods to test communication artifacts. . One side is JavaScript, other side is ROOT C++. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:72,safety,test,test,72,"> Can we have a test for this? For the moment we do not have methods to test communication artifacts. . One side is JavaScript, other side is ROOT C++. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:16,testability,test,test,16,"> Can we have a test for this? For the moment we do not have methods to test communication artifacts. . One side is JavaScript, other side is ROOT C++. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:72,testability,test,test,72,"> Can we have a test for this? For the moment we do not have methods to test communication artifacts. . One side is JavaScript, other side is ROOT C++. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:31,safety,test,testing,31,> Is there a plan to introduce testing for this part? There was no concrete plan. . One can try to emulate attack on RWebWindow communication without real http server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:107,security,attack,attack,107,> Is there a plan to introduce testing for this part? There was no concrete plan. . One can try to emulate attack on RWebWindow communication without real http server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:13,testability,plan,plan,13,> Is there a plan to introduce testing for this part? There was no concrete plan. . One can try to emulate attack on RWebWindow communication without real http server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:31,testability,test,testing,31,> Is there a plan to introduce testing for this part? There was no concrete plan. . One can try to emulate attack on RWebWindow communication without real http server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:76,testability,plan,plan,76,> Is there a plan to introduce testing for this part? There was no concrete plan. . One can try to emulate attack on RWebWindow communication without real http server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:99,testability,emul,emulate,99,> Is there a plan to introduce testing for this part? There was no concrete plan. . One can try to emulate attack on RWebWindow communication without real http server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15454:0,usability,Close,Close,0,Close and reopen to reset the merging point,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15454
https://github.com/root-project/root/pull/15458:53,safety,test,test,53,Is there a corresponding roottest PR enabling/adding test for this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:53,testability,test,test,53,Is there a corresponding roottest PR enabling/adding test for this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:55,safety,test,test,55,> Is there a corresponding roottest PR enabling/adding test for this? Added a cling test for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:84,safety,test,test,84,> Is there a corresponding roottest PR enabling/adding test for this? Added a cling test for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:55,testability,test,test,55,> Is there a corresponding roottest PR enabling/adding test for this? Added a cling test for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:84,testability,test,test,84,> Is there a corresponding roottest PR enabling/adding test for this? Added a cling test for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:37,safety,test,test,37,@devajithvs can you try enabling the test in `roottest` that was conditional on the fix: https://github.com/root-project/roottest/pull/1118 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:37,testability,test,test,37,@devajithvs can you try enabling the test in `roottest` that was conditional on the fix: https://github.com/root-project/roottest/pull/1118 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15466:288,deployability,build,builds,288,"Note that you don't have do worry about debugging anything on Linux or Windows:. https://github.com/root-project/root/pull/15426. So at this point it's a macOS-only problem :+1:. Note that LCG packages has the same problem, and didn't solve it yet either. They ship openSSL for the macOS builds, and for Linux they always use distro packages (according to Andre from private chat). But it's low priority for them, because macOS is not a relevant production platform. See https://lcginfo.cern.ch/pkg/openssl/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15466:457,interoperability,platform,platform,457,"Note that you don't have do worry about debugging anything on Linux or Windows:. https://github.com/root-project/root/pull/15426. So at this point it's a macOS-only problem :+1:. Note that LCG packages has the same problem, and didn't solve it yet either. They ship openSSL for the macOS builds, and for Linux they always use distro packages (according to Andre from private chat). But it's low priority for them, because macOS is not a relevant production platform. See https://lcginfo.cern.ch/pkg/openssl/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15466:193,modifiability,pac,packages,193,"Note that you don't have do worry about debugging anything on Linux or Windows:. https://github.com/root-project/root/pull/15426. So at this point it's a macOS-only problem :+1:. Note that LCG packages has the same problem, and didn't solve it yet either. They ship openSSL for the macOS builds, and for Linux they always use distro packages (according to Andre from private chat). But it's low priority for them, because macOS is not a relevant production platform. See https://lcginfo.cern.ch/pkg/openssl/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15466:333,modifiability,pac,packages,333,"Note that you don't have do worry about debugging anything on Linux or Windows:. https://github.com/root-project/root/pull/15426. So at this point it's a macOS-only problem :+1:. Note that LCG packages has the same problem, and didn't solve it yet either. They ship openSSL for the macOS builds, and for Linux they always use distro packages (according to Andre from private chat). But it's low priority for them, because macOS is not a relevant production platform. See https://lcginfo.cern.ch/pkg/openssl/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15466:16,safety,compl,completely,16,The PR has been completely overhauled. It is still a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15466:53,safety,test,test,53,The PR has been completely overhauled. It is still a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15466:16,security,compl,completely,16,The PR has been completely overhauled. It is still a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15466:53,testability,test,test,53,The PR has been completely overhauled. It is still a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15466
https://github.com/root-project/root/pull/15467:27,availability,down,download,27,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:36,availability,error,errors,36,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:82,availability,error,errors,82,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:172,deployability,build,build,172,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:194,deployability,configurat,configuration,194,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:194,integrability,configur,configuration,194,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:194,modifiability,configur,configuration,194,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:230,modifiability,concern,concern,230,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:36,performance,error,errors,36,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:82,performance,error,errors,82,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:178,performance,time,time,178,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:208,performance,time,time,208,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:146,reliability,pra,practical,146,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:36,safety,error,errors,36,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:82,safety,error,errors,82,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:194,security,configur,configuration,194,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:230,testability,concern,concern,230,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:36,usability,error,errors,36,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:82,usability,error,errors,82,"Closing the PR because the download errors are less informative than the existing errors conditional on the connectivity check, and they are less practical: they happen at build time instead of configuration time. Since this is a concern, we might as well go for the solution of optionally disabling the connectivity check. I'll spin off the bugfix with the connection check for clad being at the wrong place to a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15469:87,availability,failur,failures,87,I was just closing and opening to refresh the test results. I'm baffled that there are failures in what seems like a trivial PR!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:87,deployability,fail,failures,87,I was just closing and opening to refresh the test results. I'm baffled that there are failures in what seems like a trivial PR!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:87,performance,failur,failures,87,I was just closing and opening to refresh the test results. I'm baffled that there are failures in what seems like a trivial PR!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:87,reliability,fail,failures,87,I was just closing and opening to refresh the test results. I'm baffled that there are failures in what seems like a trivial PR!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:46,safety,test,test,46,I was just closing and opening to refresh the test results. I'm baffled that there are failures in what seems like a trivial PR!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:46,testability,test,test,46,I was just closing and opening to refresh the test results. I'm baffled that there are failures in what seems like a trivial PR!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:68,usability,intuit,intuition,68,"Maybe we uncovered a problem with the TString move constructor? Any intuition, @pcanal?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:50,deployability,version,version,50,"Rebased, so that the tests run against the latest version. Maybe it''s getting better?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:50,integrability,version,version,50,"Rebased, so that the tests run against the latest version. Maybe it''s getting better?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:50,modifiability,version,version,50,"Rebased, so that the tests run against the latest version. Maybe it''s getting better?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:21,safety,test,tests,21,"Rebased, so that the tests run against the latest version. Maybe it''s getting better?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:21,testability,test,tests,21,"Rebased, so that the tests run against the latest version. Maybe it''s getting better?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:178,availability,failur,failure,178,"> It's implementation is odd looking :(, so yeah I think this is the issue ... let me do a quick checks. and it actually seems to be working ... so now I'll try to reproduce the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:178,deployability,fail,failure,178,"> It's implementation is odd looking :(, so yeah I think this is the issue ... let me do a quick checks. and it actually seems to be working ... so now I'll try to reproduce the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:178,performance,failur,failure,178,"> It's implementation is odd looking :(, so yeah I think this is the issue ... let me do a quick checks. and it actually seems to be working ... so now I'll try to reproduce the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:178,reliability,fail,failure,178,"> It's implementation is odd looking :(, so yeah I think this is the issue ... let me do a quick checks. and it actually seems to be working ... so now I'll try to reproduce the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:20,availability,failur,failure,20,I can reproduce the failure locally.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:20,deployability,fail,failure,20,I can reproduce the failure locally.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:20,performance,failur,failure,20,I can reproduce the failure locally.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:20,reliability,fail,failure,20,I can reproduce the failure locally.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:267,integrability,topic,topic,267,"I can add those comments to my PR. I am wondering, whether TNamed is the only affected class? If not, then this warning should be put in some central place instead of scattered around here? If I get this correctly, it could also affect user classes? I have opened [a topic on the forum](https://root-forum.cern.ch/t/using-defaulted-ctor-on-tobject-derived-classes/59548) about this to discuss this outside this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:236,usability,user,user,236,"I can add those comments to my PR. I am wondering, whether TNamed is the only affected class? If not, then this warning should be put in some central place instead of scattered around here? If I get this correctly, it could also affect user classes? I have opened [a topic on the forum](https://root-forum.cern.ch/t/using-defaulted-ctor-on-tobject-derived-classes/59548) about this to discuss this outside this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:100,deployability,manag,manage,100,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:431,deployability,updat,updated,431,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:100,energy efficiency,manag,manage,100,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:100,safety,manag,manage,100,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:271,safety,detect,detection,271,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:347,safety,avoid,avoid,347,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:431,safety,updat,updated,431,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:271,security,detect,detection,271,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:431,security,updat,updated,431,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:362,usability,tool,tool,362,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:402,usability,clear,clear,402,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:572,usability,document,documentation,572,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:. ```. TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300. ```. where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:195,energy efficiency,optim,optimizations,195,For the `TObject` documentation I would add something along the line of:. ```. Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:195,performance,optimiz,optimizations,195,For the `TObject` documentation I would add something along the line of:. ```. Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:214,safety,prevent,prevents,214,For the `TObject` documentation I would add something along the line of:. ```. Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:248,safety,detect,detection,248,For the `TObject` documentation I would add something along the line of:. ```. Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:214,security,preven,prevents,214,For the `TObject` documentation I would add something along the line of:. ```. Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:248,security,detect,detection,248,For the `TObject` documentation I would add something along the line of:. ```. Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:18,usability,document,documentation,18,For the `TObject` documentation I would add something along the line of:. ```. Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:501,deployability,resourc,resources,501,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:205,energy efficiency,optim,optimizations,205,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:436,energy efficiency,current,current,436,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:501,energy efficiency,resourc,resources,501,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:643,modifiability,maintain,maintainable,643,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:205,performance,optimiz,optimizations,205,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:501,performance,resourc,resources,501,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:514,performance,perform,perform,514,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:224,safety,prevent,prevents,224,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:258,safety,detect,detection,258,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:501,safety,resourc,resources,501,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:643,safety,maintain,maintainable,643,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:224,security,preven,prevents,224,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:258,security,detect,detection,258,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:501,testability,resourc,resources,501,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:20,usability,document,documentation,20,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:399,usability,clear,clear,399,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:514,usability,perform,perform,514,"> For the `TObject` documentation I would add something along the line of:. > . > ```. > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly. > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15470:170,modifiability,concern,concerned,170,"Thanks a lot for these improvements. Besides the approval of @couet , I would solicit the approval of @guitargeek , since RooFit documentation is touched. As far as I am concerned, if they agree with the changes, I am in favour of merging them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15470:170,testability,concern,concerned,170,"Thanks a lot for these improvements. Besides the approval of @couet , I would solicit the approval of @guitargeek , since RooFit documentation is touched. As far as I am concerned, if they agree with the changes, I am in favour of merging them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15470:129,usability,document,documentation,129,"Thanks a lot for these improvements. Besides the approval of @couet , I would solicit the approval of @guitargeek , since RooFit documentation is touched. As far as I am concerned, if they agree with the changes, I am in favour of merging them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15472:42,availability,failur,failure,42,There was some random/spurrious unrelated failure on WIndows in ./roottest/./root/meta/tclass/execReadTmplt.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:42,deployability,fail,failure,42,There was some random/spurrious unrelated failure on WIndows in ./roottest/./root/meta/tclass/execReadTmplt.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:42,performance,failur,failure,42,There was some random/spurrious unrelated failure on WIndows in ./roottest/./root/meta/tclass/execReadTmplt.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:42,reliability,fail,failure,42,There was some random/spurrious unrelated failure on WIndows in ./roottest/./root/meta/tclass/execReadTmplt.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/issues/15473:62,deployability,fail,fails,62,"Hi @jmcarcell , how is the linker related to the command that fails for you? That is the invocation of rootcling, the generator of dictionaries. Could you confirm that the problem is there also if you do not export the LDFLAGS env variable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:231,modifiability,variab,variable,231,"Hi @jmcarcell , how is the linker related to the command that fails for you? That is the invocation of rootcling, the generator of dictionaries. Could you confirm that the problem is there also if you do not export the LDFLAGS env variable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:62,reliability,fail,fails,62,"Hi @jmcarcell , how is the linker related to the command that fails for you? That is the invocation of rootcling, the generator of dictionaries. Could you confirm that the problem is there also if you do not export the LDFLAGS env variable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:49,usability,command,command,49,"Hi @jmcarcell , how is the linker related to the command that fails for you? That is the invocation of rootcling, the generator of dictionaries. Could you confirm that the problem is there also if you do not export the LDFLAGS env variable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:155,usability,confirm,confirm,155,"Hi @jmcarcell , how is the linker related to the command that fails for you? That is the invocation of rootcling, the generator of dictionaries. Could you confirm that the problem is there also if you do not export the LDFLAGS env variable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:69,deployability,build,building,69,"I have no idea why that's happening but it's definitely that because building with `LDFLAGS` empty (so using `/usr/bin/ld`) works fine. I just checked and using `lld` works fine, I'll add to the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:192,availability,fault,faults,192,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:168,deployability,fail,fail,168,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:192,energy efficiency,fault,faults,192,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:192,performance,fault,faults,192,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:168,reliability,fail,fail,168,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:192,reliability,fault,faults,192,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:162,safety,test,tests,162,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:192,safety,fault,faults,192,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:162,testability,test,tests,162,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:0,usability,Close,Closed,0,Closed by #15689 and it's backport to 6.32.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:51,integrability,sub,submitted,51,We should apply the suggested fix in the bugreport submitted to the mold linker.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:16,deployability,build,build,16,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:47,deployability,releas,released,47,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:289,deployability,version,version,289,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:839,deployability,build,build,839,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:289,integrability,version,version,289,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:289,modifiability,version,version,289,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1033,performance,time,times,1033,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:137,safety,prevent,prevent,137,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:137,security,preven,prevent,137,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:860,testability,verif,verified,860,"I just tried to build master with mold 2.32.0 (released last week) and it worked fine. Also, for some reason the CMakeLists check didn't prevent me from using mold as a linker, so I think it's defective. We should either remove it or fix it, and if we fix it we want to check for the mold version, since there's no point in disallowing mold >= 2.32. Here is my cmake cmdline:. ```. cmake -Ddev=on -Dtesting=on -Dccache=on -Droot7=on -Dbuiltin_davix=off -During=on -DCMAKE_BUILD_TYPE=debug -Dtmva=on -Droofit=on -Dbuiltin_pcre=off -Dbuiltin_zstd=on -Dbuiltin_lz4=off -Dbuiltin_lzma=off -Dbuiltin_xxhash=off -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_MODULE_LINKER_FLAGS='-fuse-ld=mold' -DCMAKE_EXPORT_COMPILE_COMMANDS=on -G Ninja ../../root. ```. I then built with . ```. mold -run cmake --build . -j32. ```. I verified that mold was indeed called instead of the default linker by doing `watch -n 0.5 pgrep mold` and `watch -n 0.5 pgrep lld`: the first one showed some output several times during compilation, the second didn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:127,availability,restor,restoring,127,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:71,deployability,version,version,71,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:140,energy efficiency,optim,optimal,140,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:71,integrability,version,version,71,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:71,modifiability,version,version,71,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:127,reliability,restor,restoring,127,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:39,testability,simpl,simple,39,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:39,usability,simpl,simple,39,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:148,usability,user,user,148,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:153,usability,experien,experience,153,"@silverweed could you please propose a simple pr checking for the mold version? I know it's perhaps a niche use case, but also restoring an optimal user experience for it seems rather cheap...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15474:155,deployability,updat,updated,155,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:224,integrability,event,events,224,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:242,reliability,doe,does,242,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:155,safety,updat,updated,155,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:170,safety,input,input,170,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:155,security,updat,updated,155,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:102,usability,interact,interactive,102,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:170,usability,input,input,170,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:207,usability,interact,interactive,207,How you start python - with or without `-i` flag? Graphics (normal or web) can normally works only in interactive python mode. In such case canvas will be updated while `input()` is waiting for key. In none-interactive mode events processing does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:74,modifiability,concern,concerning,74,I create separate issue https://github.com/root-project/root/issues/15498 concerning `gPad` in this script. For me python creates second canvas - without real need.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:74,testability,concern,concerning,74,I create separate issue https://github.com/root-project/root/issues/15498 concerning `gPad` in this script. For me python creates second canvas - without real need.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:17,testability,understand,understand,17,"Thanks. I do not understand. I proposed a simple reproducer that illustrates a bad user experience, very bad, that makes the system unusable. What is the strategy to fix this bug?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:42,testability,simpl,simple,42,"Thanks. I do not understand. I proposed a simple reproducer that illustrates a bad user experience, very bad, that makes the system unusable. What is the strategy to fix this bug?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:42,usability,simpl,simple,42,"Thanks. I do not understand. I proposed a simple reproducer that illustrates a bad user experience, very bad, that makes the system unusable. What is the strategy to fix this bug?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:83,usability,user,user,83,"Thanks. I do not understand. I proposed a simple reproducer that illustrates a bad user experience, very bad, that makes the system unusable. What is the strategy to fix this bug?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:88,usability,experien,experience,88,"Thanks. I do not understand. I proposed a simple reproducer that illustrates a bad user experience, very bad, that makes the system unusable. What is the strategy to fix this bug?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:194,integrability,event,events,194,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:426,integrability,event,events,426,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:610,integrability,event,event,610,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:269,performance,time,time,269,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:60,reliability,doe,does,60,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:32,safety,input,input,32,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:913,security,sign,signals,913,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:32,usability,input,input,32,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:143,usability,interact,interactive,143,"Again, workaround with calling `input()` function in python does not work - neither with web not with normal ROOT graphics. Only when enabling interactive python mode `python - i` one gets ROOT events processing working. This problem well known and I discussed it some time ago with @vepadulano. . To make it working one need to provide special `TCanvas` method which only can be used in python and which properly handle ROOT events processing. Like `show` method in mathplotlib. Naively TCanvas::Show() can look like:. ```. def TCanvas_Show(self) :. # really display canvas. self._OriginalDraw() . // process event until key pressed or Ctrl-C pressed. while (not_key_press() and not_ctrl_c_pressed()):. gROOT.ProcessEvents(). ```. Most probably it can be introduced in `_pythonization/_drawables.py`. . But I am not an python/PyROOT expert and have no idea how it can be properly programmed - including keyboard/signals handling. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/pull/15476:241,deployability,updat,update,241,"@gwmyers sorry for the late reply and thank you so much for this contribution :smile: ! I agree with the implementation, I took the liberty of modifying locally your changes also including a test. I would like to push them to your branch to update this PR if you are okay with it, let me know :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:191,safety,test,test,191,"@gwmyers sorry for the late reply and thank you so much for this contribution :smile: ! I agree with the implementation, I took the liberty of modifying locally your changes also including a test. I would like to push them to your branch to update this PR if you are okay with it, let me know :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:241,safety,updat,update,241,"@gwmyers sorry for the late reply and thank you so much for this contribution :smile: ! I agree with the implementation, I took the liberty of modifying locally your changes also including a test. I would like to push them to your branch to update this PR if you are okay with it, let me know :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:143,security,modif,modifying,143,"@gwmyers sorry for the late reply and thank you so much for this contribution :smile: ! I agree with the implementation, I took the liberty of modifying locally your changes also including a test. I would like to push them to your branch to update this PR if you are okay with it, let me know :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:241,security,updat,update,241,"@gwmyers sorry for the late reply and thank you so much for this contribution :smile: ! I agree with the implementation, I took the liberty of modifying locally your changes also including a test. I would like to push them to your branch to update this PR if you are okay with it, let me know :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:191,testability,test,test,191,"@gwmyers sorry for the late reply and thank you so much for this contribution :smile: ! I agree with the implementation, I took the liberty of modifying locally your changes also including a test. I would like to push them to your branch to update this PR if you are okay with it, let me know :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:66,deployability,updat,updates,66,"Hi @vepadulano , excellent! Thanks! Please feel free to push your updates to my branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:66,safety,updat,updates,66,"Hi @vepadulano , excellent! Thanks! Please feel free to push your updates to my branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:66,security,updat,updates,66,"Hi @vepadulano , excellent! Thanks! Please feel free to push your updates to my branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:48,integrability,coupl,couple,48,"A few more changes were needed, also touching a couple of tests in roottest, so I opened another PR to follow up this one. Let's see what the CI has to say over there :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:48,modifiability,coupl,couple,48,"A few more changes were needed, also touching a couple of tests in roottest, so I opened another PR to follow up this one. Let's see what the CI has to say over there :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:58,safety,test,tests,58,"A few more changes were needed, also touching a couple of tests in roottest, so I opened another PR to follow up this one. Let's see what the CI has to say over there :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:48,testability,coupl,couple,48,"A few more changes were needed, also touching a couple of tests in roottest, so I opened another PR to follow up this one. Let's see what the CI has to say over there :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:58,testability,test,tests,58,"A few more changes were needed, also touching a couple of tests in roottest, so I opened another PR to follow up this one. Let's see what the CI has to say over there :+1: .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15477:80,availability,error,errors,80,"I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:80,performance,error,errors,80,"I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:80,safety,error,errors,80,"I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:80,usability,error,errors,80,"I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:82,availability,error,errors,82,"> I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ? Ah thanks for pointing this out! It skipped my attention and I recently created exactly the [same bug report](. https://github.com/root-project/root/issues/15399) which is already closed with a fix by https://github.com/root-project/root/pull/15400 so I guess we can close that one and open a new issue to remind ourselves to investigate a better approach for the JIT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:82,performance,error,errors,82,"> I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ? Ah thanks for pointing this out! It skipped my attention and I recently created exactly the [same bug report](. https://github.com/root-project/root/issues/15399) which is already closed with a fix by https://github.com/root-project/root/pull/15400 so I guess we can close that one and open a new issue to remind ourselves to investigate a better approach for the JIT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:82,safety,error,errors,82,"> I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ? Ah thanks for pointing this out! It skipped my attention and I recently created exactly the [same bug report](. https://github.com/root-project/root/issues/15399) which is already closed with a fix by https://github.com/root-project/root/pull/15400 so I guess we can close that one and open a new issue to remind ourselves to investigate a better approach for the JIT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:82,usability,error,errors,82,"> I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ? Ah thanks for pointing this out! It skipped my attention and I recently created exactly the [same bug report](. https://github.com/root-project/root/issues/15399) which is already closed with a fix by https://github.com/root-project/root/pull/15400 so I guess we can close that one and open a new issue to remind ourselves to investigate a better approach for the JIT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:324,usability,close,closed,324,"> I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ? Ah thanks for pointing this out! It skipped my attention and I recently created exactly the [same bug report](. https://github.com/root-project/root/issues/15399) which is already closed with a fix by https://github.com/root-project/root/pull/15400 so I guess we can close that one and open a new issue to remind ourselves to investigate a better approach for the JIT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:411,usability,close,close,411,"> I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ? Ah thanks for pointing this out! It skipped my attention and I recently created exactly the [same bug report](. https://github.com/root-project/root/issues/15399) which is already closed with a fix by https://github.com/root-project/root/pull/15400 so I guess we can close that one and open a new issue to remind ourselves to investigate a better approach for the JIT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/issues/15479:702,availability,slo,slower,702,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:773,availability,slo,slow,773,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:354,deployability,automat,automatic,354,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:565,deployability,releas,release-notes,565,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:588,energy efficiency,cpu,cpu-likelihood-evaluation-backend-by-default,588,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:364,interoperability,convers,conversion,364,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:805,interoperability,share,shared,805,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:827,interoperability,share,share,827,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:588,performance,cpu,cpu-likelihood-evaluation-backend-by-default,588,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:86,reliability,doe,does,86,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:284,reliability,doe,doesn,284,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:702,reliability,slo,slower,702,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:773,reliability,slo,slow,773,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:507,safety,compl,completely,507,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:507,security,compl,completely,507,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:238,testability,context,contexts,238,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:354,testability,automat,automatic,354,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:299,usability,help,help,299,"Hi @yuhao-wang-nju, thanks for your post! 1. This is by design (see #15153). 2. Where does the doc say that? I think cppyy pythonizes the `cppyy.gbl.std.string` such that it *behaves* like a Python `str`, therefore it can be used in many contexts where one would use ` str`. But this doesn't always help. The type is different after all, and there is no automatic conversion for the reasons outlined in #15153. You will have to do this yourself with `str()` around the `std::string`. 3. The evaluation was [completely replaced in 6.32](https://root.cern/doc/master/release-notes.html#new-cpu-likelihood-evaluation-backend-by-default). Probably you have one of the corner cases where the new backend is slower and I need to debug this. Is it also possible to reproduce this slow fit with the workspace you shared? Maybe you can share the full script? Thanks a lot! Related PR: #14237",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:341,deployability,contain,contained,341,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me! For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:. `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'. `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:671,energy efficiency,Model,ModelConfig,671,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me! For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:. `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'. `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:67,integrability,messag,message,67,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me! For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:. `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'. `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:67,interoperability,messag,message,67,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me! For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:. `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'. `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:885,performance,time,time,885,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me! For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:. `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'. `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:671,security,Model,ModelConfig,671,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me! For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:. `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'. `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:538,usability,command,command,538,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me! For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:. `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'. `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:60,availability,slo,slowdown,60,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:19,deployability,releas,release,19,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:102,deployability,updat,updates,102,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:60,reliability,slo,slowdown,60,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:31,safety,test,tested,31,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:102,safety,updat,updates,102,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:102,security,updat,updates,102,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:31,testability,test,tested,31,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:136,usability,close,close,136,"After the official release, we tested and found there is no slowdown of the fit. Thanks a lot for the updates and reply! I think we can close the issue now;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15481:398,availability,error,error,398,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:548,availability,error,error,548,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:693,availability,error,error,693,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:857,availability,error,error,857,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:52,deployability,releas,release,52,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:275,deployability,patch,patches,275,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:353,deployability,patch,patches,353,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:503,deployability,patch,patches,503,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:647,deployability,patch,patches,647,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:811,deployability,patch,patches,811,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:398,performance,error,error,398,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:548,performance,error,error,548,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:693,performance,error,error,693,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:857,performance,error,error,857,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:181,reliability,doe,doesn,181,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:275,safety,patch,patches,275,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:353,safety,patch,patches,353,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:398,safety,error,error,398,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:503,safety,patch,patches,503,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:548,safety,error,error,548,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:647,safety,patch,patches,647,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:693,safety,error,error,693,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:811,safety,patch,patches,811,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:857,safety,error,error,857,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:275,security,patch,patches,275,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:353,security,patch,patches,353,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:503,security,patch,patches,503,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:573,security,ident,identifier,573,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:647,security,patch,patches,647,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:718,security,ident,identifier,718,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:811,security,patch,patches,811,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:882,security,ident,identifier,882,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:73,testability,understand,understand,73,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:139,testability,verif,verified,139,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:2,usability,person,personally,2,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:398,usability,error,error,398,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:548,usability,error,error,548,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:693,usability,error,error,693,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:857,usability,error,error,857,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:. ```. 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C... 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression. 1079: t02 t;. 1079: ^. 1079: ;. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'. 1079: t02 t;. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'. 1079: TObject o = **t.getVal();. 1079: ^. 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'. 1079: TObject * const * op = t.getVal();. 1079: ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:138,availability,failur,failure,138,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:168,availability,fault,fault,168,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:138,deployability,fail,failure,138,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:168,energy efficiency,fault,fault,168,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:118,interoperability,platform,platform,118,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:138,performance,failur,failure,138,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:168,performance,fault,fault,168,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:138,reliability,fail,failure,138,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:168,reliability,fault,fault,168,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:77,safety,test,test,77,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:168,safety,fault,fault,168,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:77,testability,test,test,77,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/pull/15486:186,deployability,updat,update,186,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15486:156,safety,review,review,156,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15486:186,safety,updat,update,186,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15486:272,safety,test,test,272,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15486:186,security,updat,update,186,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15486:156,testability,review,review,156,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15486:272,testability,test,test,272,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15486:277,testability,coverag,coverage,277,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15486
https://github.com/root-project/root/pull/15489:17,safety,review,review,17,"@pcanal, can you review please? Since you were also involved in the discussions in #15451.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15489
https://github.com/root-project/root/pull/15489:17,testability,review,review,17,"@pcanal, can you review please? Since you were also involved in the discussions in #15451.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15489
https://github.com/root-project/root/pull/15490:60,deployability,configurat,configuration,60,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:379,deployability,configurat,configuration,379,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:60,integrability,configur,configuration,60,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:379,integrability,configur,configuration,379,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:60,modifiability,configur,configuration,60,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:379,modifiability,configur,configuration,379,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:429,modifiability,pac,package,429,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:451,reliability,doe,doesn,451,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:25,safety,test,test,25,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:179,safety,test,test,179,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:537,safety,test,test,537,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:730,safety,test,tests,730,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:60,security,configur,configuration,60,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:379,security,configur,configuration,379,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:25,testability,test,test,25,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:98,testability,understand,understand,98,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:179,testability,test,test,179,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:537,testability,test,test,537,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:730,testability,test,tests,730,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:756,usability,user,users,756,"> Why we cannot have the test directory use the common ROOT configuration? Good question, I don't understand why it is like that. I think it grew a bit chaotically, actually the `test` in included in the main CMakeLists via `ROOT_ADD_TEST_SUBDIRECTORY`:. https://github.com/root-project/root/blob/master/CMakeLists.txt#L443. So I was wrong, apparently it is included in the main configuration, but then is tries to find the ROOT package itself, which doesn't make sense as Sergey notes:. https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L16. What happens if you do that, especially when you already have ROOT on your system? Maybe the situation can be improved by not doing `find_package(ROOT)`. But since the tests are not relevant to users, it's not so important to improve this. Anyway, since you don't have a strong opinion, I'll go ahead and merge this. Thanks! It's just so much easier for RooFit development if all the C++ code is in the `roofit` directory :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:34,availability,error,error,34,Just one fixup for an indentation error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:34,performance,error,error,34,Just one fixup for an indentation error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:34,safety,error,error,34,Just one fixup for an indentation error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:34,usability,error,error,34,Just one fixup for an indentation error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15491:35,availability,avail,available,35,Does that run with the clad that’s available in master?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:0,reliability,Doe,Does,0,Does that run with the clad that’s available in master?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:35,reliability,availab,available,35,Does that run with the clad that’s available in master?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:35,safety,avail,available,35,Does that run with the clad that’s available in master?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:35,security,availab,available,35,Does that run with the clad that’s available in master?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:70,availability,failur,failures,70,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:70,deployability,fail,failures,70,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:373,energy efficiency,model,models,373,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:70,performance,failur,failures,70,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:70,reliability,fail,failures,70,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:186,reliability,doe,doesn,186,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:4,safety,test,tests,4,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:208,safety,test,test,208,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:342,safety,avoid,avoid,342,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:373,security,model,models,373,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:4,testability,test,tests,4,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:208,testability,test,test,208,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:213,testability,coverag,coverage,213,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:304,usability,support,supported,304,"The tests that are added in this PR work with Cl, but there are still failures because of this:. * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:72,availability,failur,failures,72,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:552,availability,slo,slow,552,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:72,deployability,fail,failures,72,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:473,energy efficiency,model,models,473,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:72,performance,failur,failures,72,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:72,reliability,fail,failures,72,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:286,reliability,doe,doesn,286,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:552,reliability,slo,slow,552,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:6,safety,test,tests,6,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:308,safety,test,test,308,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:442,safety,avoid,avoid,442,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:514,safety,avoid,avoid,514,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:473,security,model,models,473,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:6,testability,test,tests,6,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:108,testability,Regress,Regression,108,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:308,testability,test,test,308,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:313,testability,coverag,coverage,313,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:122,usability,support,support,122,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:404,usability,support,supported,404,"> The tests that are added in this PR work with Cl, but there are still failures because of this:. > . > * [Regression in support of functions with unknown definition vgvassilev/clad#890](https://github.com/vgvassilev/clad/issues/890). > . > . > It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models? This should work but we *should* avoid num diff fallback because it is slow and can introduce numerical instabilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:19,safety,avoid,avoid,19,"Ok, I think we can avoid it by inlining one or two more functions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:43,safety,accid,accidentally,43,Re-opened (clicked wrong button and closed accidentally),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:36,usability,close,closed,36,Re-opened (clicked wrong button and closed accidentally),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/issues/15494:12,availability,failur,failure,12,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:261,availability,failur,failure,261,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:12,deployability,fail,failure,12,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:261,deployability,fail,failure,261,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:12,performance,failur,failure,12,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:261,performance,failur,failure,261,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:304,performance,time,time,304,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:12,reliability,fail,failure,12,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:261,reliability,fail,failure,261,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:237,usability,close,close,237,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. . In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:28,performance,time,times,28,I was running the test 1000 times in a loop and never hit the problem once. Maybe it was just a bad day on the GitHub actions runners. I would suggest to close this issue. Is that okay for you @egpbos? Thanks for documenting this though!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:18,safety,test,test,18,I was running the test 1000 times in a loop and never hit the problem once. Maybe it was just a bad day on the GitHub actions runners. I would suggest to close this issue. Is that okay for you @egpbos? Thanks for documenting this though!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:18,testability,test,test,18,I was running the test 1000 times in a loop and never hit the problem once. Maybe it was just a bad day on the GitHub actions runners. I would suggest to close this issue. Is that okay for you @egpbos? Thanks for documenting this though!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:154,usability,close,close,154,I was running the test 1000 times in a loop and never hit the problem once. Maybe it was just a bad day on the GitHub actions runners. I would suggest to close this issue. Is that okay for you @egpbos? Thanks for documenting this though!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:213,usability,document,documenting,213,I was running the test 1000 times in a loop and never hit the problem once. Maybe it was just a bad day on the GitHub actions runners. I would suggest to close this issue. Is that okay for you @egpbos? Thanks for documenting this though!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:22,deployability,log,logs,22,"Yep, let's close! The logs of old runs like this are lost anyway and are not very informative in any case. The chances of it being something weird having to do with GitHub Actions runner particulars is also non-negligible. I will put it on my own todo list to look a bit more into this at some point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:22,safety,log,logs,22,"Yep, let's close! The logs of old runs like this are lost anyway and are not very informative in any case. The chances of it being something weird having to do with GitHub Actions runner particulars is also non-negligible. I will put it on my own todo list to look a bit more into this at some point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:22,security,log,logs,22,"Yep, let's close! The logs of old runs like this are lost anyway and are not very informative in any case. The chances of it being something weird having to do with GitHub Actions runner particulars is also non-negligible. I will put it on my own todo list to look a bit more into this at some point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:22,testability,log,logs,22,"Yep, let's close! The logs of old runs like this are lost anyway and are not very informative in any case. The chances of it being something weird having to do with GitHub Actions runner particulars is also non-negligible. I will put it on my own todo list to look a bit more into this at some point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:11,usability,close,close,11,"Yep, let's close! The logs of old runs like this are lost anyway and are not very informative in any case. The chances of it being something weird having to do with GitHub Actions runner particulars is also non-negligible. I will put it on my own todo list to look a bit more into this at some point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15498:8,usability,confirm,confirm,8,"Just to confirm, this only happens when running ROOT from Python right? An equivalent C++ code would work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:372,energy efficiency,Draw,Draw,372,"Yes, similar C++ code works as expected:. ```. {. gROOT->SetWebDisplay("""");. auto c = new TCanvas();. if (gPad). printf(""gPad name %s editable %d\n"", gPad->GetName(), gPad->IsEditable());. else. printf(""gPad is not there - why?\n"");. auto h = new TH1D("""","""",64, -4,4);. h->FillRandom(""gaus"");. // this is a problem - histogram do not ""see"" gPad and creates new canvas. h->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:48,energy efficiency,Draw,Draw,48,I just not understand how gPad can differ in `h.Draw`. . Are there any special pythonization for it? Or is there other thread? `gPad` is thread-local variable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:150,modifiability,variab,variable,150,I just not understand how gPad can differ in `h.Draw`. . Are there any special pythonization for it? Or is there other thread? `gPad` is thread-local variable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:11,testability,understand,understand,11,I just not understand how gPad can differ in `h.Draw`. . Are there any special pythonization for it? Or is there other thread? `gPad` is thread-local variable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:23,usability,help,help,23,@couet we need perhaps help,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:135,availability,consist,consistent,135,I do not think Olivier can help here. Something wired with pythonization here. . At the moment when `h.Draw()` is called `gPad` is not consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:103,energy efficiency,Draw,Draw,103,I do not think Olivier can help here. Something wired with pythonization here. . At the moment when `h.Draw()` is called `gPad` is not consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:27,usability,help,help,27,I do not think Olivier can help here. Something wired with pythonization here. . At the moment when `h.Draw()` is called `gPad` is not consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:135,usability,consist,consistent,135,I do not think Olivier can help here. Something wired with pythonization here. . At the moment when `h.Draw()` is called `gPad` is not consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:50,availability,sli,slightly,50,"Starting to investigate, just for reference, this slightly modified repro. ```python. import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas. h.Draw(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). input(""Press Enter to exit""). ```. Prints correctly . ```. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9581. gPad name c1 editable True. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1_n2. gPad name c1 editable True. ```. So `gPad` appears to be there even after the call to `TH1::Draw`. It's somehow within that call that it is not recognised/found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:412,energy efficiency,Draw,Draw,412,"Starting to investigate, just for reference, this slightly modified repro. ```python. import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas. h.Draw(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). input(""Press Enter to exit""). ```. Prints correctly . ```. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9581. gPad name c1 editable True. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1_n2. gPad name c1 editable True. ```. So `gPad` appears to be there even after the call to `TH1::Draw`. It's somehow within that call that it is not recognised/found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:884,energy efficiency,Draw,Draw,884,"Starting to investigate, just for reference, this slightly modified repro. ```python. import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas. h.Draw(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). input(""Press Enter to exit""). ```. Prints correctly . ```. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9581. gPad name c1 editable True. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1_n2. gPad name c1 editable True. ```. So `gPad` appears to be there even after the call to `TH1::Draw`. It's somehow within that call that it is not recognised/found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:50,reliability,sli,slightly,50,"Starting to investigate, just for reference, this slightly modified repro. ```python. import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas. h.Draw(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). input(""Press Enter to exit""). ```. Prints correctly . ```. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9581. gPad name c1 editable True. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1_n2. gPad name c1 editable True. ```. So `gPad` appears to be there even after the call to `TH1::Draw`. It's somehow within that call that it is not recognised/found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:554,safety,input,input,554,"Starting to investigate, just for reference, this slightly modified repro. ```python. import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas. h.Draw(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). input(""Press Enter to exit""). ```. Prints correctly . ```. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9581. gPad name c1 editable True. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1_n2. gPad name c1 editable True. ```. So `gPad` appears to be there even after the call to `TH1::Draw`. It's somehow within that call that it is not recognised/found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:59,security,modif,modified,59,"Starting to investigate, just for reference, this slightly modified repro. ```python. import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas. h.Draw(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). input(""Press Enter to exit""). ```. Prints correctly . ```. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9581. gPad name c1 editable True. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1_n2. gPad name c1 editable True. ```. So `gPad` appears to be there even after the call to `TH1::Draw`. It's somehow within that call that it is not recognised/found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:554,usability,input,input,554,"Starting to investigate, just for reference, this slightly modified repro. ```python. import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas. h.Draw(). if ROOT.gPad:. print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()). else:. print(""gPad is not there - why?""). input(""Press Enter to exit""). ```. Prints correctly . ```. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9581. gPad name c1 editable True. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1_n2. gPad name c1 editable True. ```. So `gPad` appears to be there even after the call to `TH1::Draw`. It's somehow within that call that it is not recognised/found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:80,energy efficiency,draw,draw,80,"> It's somehow within that call that it is not recognised/found. Yes, histogram draw do not ""see"" `gPad`. Can it be that `TH1::Draw()` method called from other thread?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:127,energy efficiency,Draw,Draw,127,"> It's somehow within that call that it is not recognised/found. Yes, histogram draw do not ""see"" `gPad`. Can it be that `TH1::Draw()` method called from other thread?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:49,energy efficiency,Draw,Draw,49,"There are 13 threads running at the moment `TH1::Draw` is reached . ```. Id Target Id Frame . * 1 Thread 0x7ffff7ec4740 (LWP 2762011) ""python"" TH1::Draw (this=0x55555c45d3e0, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 2 Thread 0x7fffcee006c0 (LWP 2762119) ""python"" 0x00007ffff76f7163 in clock_nanosleep@GLIBC_2.2.5 () from /lib64/libc.so.6. 3 Thread 0x7fffcce006c0 (LWP 2762143) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 4 Thread 0x7fffc7e006c0 (LWP 2762144) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 5 Thread 0x7fffc74006c0 (LWP 2762145) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 6 Thread 0x7fffc6a006c0 (LWP 2762146) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 7 Thread 0x7fffc60006c0 (LWP 2762147) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 8 Thread 0x7fffc56006c0 (LWP 2762148) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 9 Thread 0x7fffc4c006c0 (LWP 2762149) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 10 Thread 0x7fffbfe006c0 (LWP 2762150) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 11 Thread 0x7fffbf4006c0 (LWP 2762151) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 12 Thread 0x7fffbea006c0 (LWP 2762152) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 13 Thread 0x7fffbe0006c0 (LWP 2762153) ""civetweb-master"" 0x00007ffff7725e3d in poll () from /lib64/libc.so.6. ````",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:148,energy efficiency,Draw,Draw,148,"There are 13 threads running at the moment `TH1::Draw` is reached . ```. Id Target Id Frame . * 1 Thread 0x7ffff7ec4740 (LWP 2762011) ""python"" TH1::Draw (this=0x55555c45d3e0, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 2 Thread 0x7fffcee006c0 (LWP 2762119) ""python"" 0x00007ffff76f7163 in clock_nanosleep@GLIBC_2.2.5 () from /lib64/libc.so.6. 3 Thread 0x7fffcce006c0 (LWP 2762143) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 4 Thread 0x7fffc7e006c0 (LWP 2762144) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 5 Thread 0x7fffc74006c0 (LWP 2762145) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 6 Thread 0x7fffc6a006c0 (LWP 2762146) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 7 Thread 0x7fffc60006c0 (LWP 2762147) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 8 Thread 0x7fffc56006c0 (LWP 2762148) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 9 Thread 0x7fffc4c006c0 (LWP 2762149) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 10 Thread 0x7fffbfe006c0 (LWP 2762150) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 11 Thread 0x7fffbf4006c0 (LWP 2762151) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 12 Thread 0x7fffbea006c0 (LWP 2762152) ""civetweb-worker"" 0x00007ffff76a9169 in __futex_abstimed_wait_common () from /lib64/libc.so.6. 13 Thread 0x7fffbe0006c0 (LWP 2762153) ""civetweb-master"" 0x00007ffff7725e3d in poll () from /lib64/libc.so.6. ````",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:97,modifiability,variab,variable,97,Question if it is same thread as when TCanvas is created and gPad is set. . gPad is thread-local variable,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:151,deployability,build,build,151,"It does not seem to be the case, which makes the issue even weirder. ```. Thread 1 ""python"" hit Breakpoint 1.1, TCanvas::TCanvas (this=0x55555b6ce330, build=true). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:147. 147	TCanvas::TCanvas(Bool_t build) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $1 = 1. (gdb) c. Continuing. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9375. [New Thread 0x7fffcce006c0 (LWP 2795576)]. [New Thread 0x7fffc7e006c0 (LWP 2795577)]. [New Thread 0x7fffc74006c0 (LWP 2795578)]. [New Thread 0x7fffc6a006c0 (LWP 2795579)]. [New Thread 0x7fffc60006c0 (LWP 2795580)]. [New Thread 0x7fffc56006c0 (LWP 2795581)]. [New Thread 0x7fffc4c006c0 (LWP 2795582)]. [New Thread 0x7fffbfe006c0 (LWP 2795583)]. [New Thread 0x7fffbf4006c0 (LWP 2795584)]. [New Thread 0x7fffbea006c0 (LWP 2795585)]. [New Thread 0x7fffbe0006c0 (LWP 2795586)]. [Detaching after vfork from child process 2795587]. gPad name c1 editable True. Thread 1 ""python"" hit Breakpoint 2, TH1::Draw (this=0x55555b695c10, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 3070	 TString opt1 = option; opt1.ToLower();. (gdb) p $_thread. $2 = 1. (gdb) c. Continuing. Thread 1 ""python"" hit Breakpoint 1.3, TCanvas::TCanvas (this=0x55555c52e8c0, name=0x55555c63c110 ""c1_n2"", title=0x55555c63c110 ""c1_n2"", form=1). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:269. 269	TCanvas::TCanvas(const char *name, const char *title, Int_t form) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $3 = 1. (gdb) n. 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) . 186	 Bool_t GetCanvasPreferGL() const {return fCanvasPreferGL;}. (gdb) . 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) n. 274	 Constructor(name, title, form);. (gdb) . [Detaching after vfork from child process 2802535]. TCanvas::MakeDefCanvas () at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:1523. 1523	 ::Info(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:272,deployability,build,build,272,"It does not seem to be the case, which makes the issue even weirder. ```. Thread 1 ""python"" hit Breakpoint 1.1, TCanvas::TCanvas (this=0x55555b6ce330, build=true). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:147. 147	TCanvas::TCanvas(Bool_t build) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $1 = 1. (gdb) c. Continuing. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9375. [New Thread 0x7fffcce006c0 (LWP 2795576)]. [New Thread 0x7fffc7e006c0 (LWP 2795577)]. [New Thread 0x7fffc74006c0 (LWP 2795578)]. [New Thread 0x7fffc6a006c0 (LWP 2795579)]. [New Thread 0x7fffc60006c0 (LWP 2795580)]. [New Thread 0x7fffc56006c0 (LWP 2795581)]. [New Thread 0x7fffc4c006c0 (LWP 2795582)]. [New Thread 0x7fffbfe006c0 (LWP 2795583)]. [New Thread 0x7fffbf4006c0 (LWP 2795584)]. [New Thread 0x7fffbea006c0 (LWP 2795585)]. [New Thread 0x7fffbe0006c0 (LWP 2795586)]. [Detaching after vfork from child process 2795587]. gPad name c1 editable True. Thread 1 ""python"" hit Breakpoint 2, TH1::Draw (this=0x55555b695c10, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 3070	 TString opt1 = option; opt1.ToLower();. (gdb) p $_thread. $2 = 1. (gdb) c. Continuing. Thread 1 ""python"" hit Breakpoint 1.3, TCanvas::TCanvas (this=0x55555c52e8c0, name=0x55555c63c110 ""c1_n2"", title=0x55555c63c110 ""c1_n2"", form=1). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:269. 269	TCanvas::TCanvas(const char *name, const char *title, Int_t form) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $3 = 1. (gdb) n. 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) . 186	 Bool_t GetCanvasPreferGL() const {return fCanvasPreferGL;}. (gdb) . 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) n. 274	 Constructor(name, title, form);. (gdb) . [Detaching after vfork from child process 2802535]. TCanvas::MakeDefCanvas () at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:1523. 1523	 ::Info(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:342,deployability,Continu,Continuing,342,"It does not seem to be the case, which makes the issue even weirder. ```. Thread 1 ""python"" hit Breakpoint 1.1, TCanvas::TCanvas (this=0x55555b6ce330, build=true). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:147. 147	TCanvas::TCanvas(Bool_t build) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $1 = 1. (gdb) c. Continuing. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9375. [New Thread 0x7fffcce006c0 (LWP 2795576)]. [New Thread 0x7fffc7e006c0 (LWP 2795577)]. [New Thread 0x7fffc74006c0 (LWP 2795578)]. [New Thread 0x7fffc6a006c0 (LWP 2795579)]. [New Thread 0x7fffc60006c0 (LWP 2795580)]. [New Thread 0x7fffc56006c0 (LWP 2795581)]. [New Thread 0x7fffc4c006c0 (LWP 2795582)]. [New Thread 0x7fffbfe006c0 (LWP 2795583)]. [New Thread 0x7fffbf4006c0 (LWP 2795584)]. [New Thread 0x7fffbea006c0 (LWP 2795585)]. [New Thread 0x7fffbe0006c0 (LWP 2795586)]. [Detaching after vfork from child process 2795587]. gPad name c1 editable True. Thread 1 ""python"" hit Breakpoint 2, TH1::Draw (this=0x55555b695c10, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 3070	 TString opt1 = option; opt1.ToLower();. (gdb) p $_thread. $2 = 1. (gdb) c. Continuing. Thread 1 ""python"" hit Breakpoint 1.3, TCanvas::TCanvas (this=0x55555c52e8c0, name=0x55555c63c110 ""c1_n2"", title=0x55555c63c110 ""c1_n2"", form=1). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:269. 269	TCanvas::TCanvas(const char *name, const char *title, Int_t form) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $3 = 1. (gdb) n. 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) . 186	 Bool_t GetCanvasPreferGL() const {return fCanvasPreferGL;}. (gdb) . 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) n. 274	 Constructor(name, title, form);. (gdb) . [Detaching after vfork from child process 2802535]. TCanvas::MakeDefCanvas () at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:1523. 1523	 ::Info(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:1234,deployability,Continu,Continuing,1234,", TCanvas::TCanvas (this=0x55555b6ce330, build=true). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:147. 147	TCanvas::TCanvas(Bool_t build) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $1 = 1. (gdb) c. Continuing. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9375. [New Thread 0x7fffcce006c0 (LWP 2795576)]. [New Thread 0x7fffc7e006c0 (LWP 2795577)]. [New Thread 0x7fffc74006c0 (LWP 2795578)]. [New Thread 0x7fffc6a006c0 (LWP 2795579)]. [New Thread 0x7fffc60006c0 (LWP 2795580)]. [New Thread 0x7fffc56006c0 (LWP 2795581)]. [New Thread 0x7fffc4c006c0 (LWP 2795582)]. [New Thread 0x7fffbfe006c0 (LWP 2795583)]. [New Thread 0x7fffbf4006c0 (LWP 2795584)]. [New Thread 0x7fffbea006c0 (LWP 2795585)]. [New Thread 0x7fffbe0006c0 (LWP 2795586)]. [Detaching after vfork from child process 2795587]. gPad name c1 editable True. Thread 1 ""python"" hit Breakpoint 2, TH1::Draw (this=0x55555b695c10, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 3070	 TString opt1 = option; opt1.ToLower();. (gdb) p $_thread. $2 = 1. (gdb) c. Continuing. Thread 1 ""python"" hit Breakpoint 1.3, TCanvas::TCanvas (this=0x55555c52e8c0, name=0x55555c63c110 ""c1_n2"", title=0x55555c63c110 ""c1_n2"", form=1). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:269. 269	TCanvas::TCanvas(const char *name, const char *title, Int_t form) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $3 = 1. (gdb) n. 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) . 186	 Bool_t GetCanvasPreferGL() const {return fCanvasPreferGL;}. (gdb) . 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) n. 274	 Constructor(name, title, form);. (gdb) . [Detaching after vfork from child process 2802535]. TCanvas::MakeDefCanvas () at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:1523. 1523	 ::Info(""TCanvas::MakeDefCanvas"","" created default TCanvas with name %s"", cdef.Data());. (gdb) p $_thread. $4 = 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:1024,energy efficiency,Draw,Draw,1024," case, which makes the issue even weirder. ```. Thread 1 ""python"" hit Breakpoint 1.1, TCanvas::TCanvas (this=0x55555b6ce330, build=true). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:147. 147	TCanvas::TCanvas(Bool_t build) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $1 = 1. (gdb) c. Continuing. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9375. [New Thread 0x7fffcce006c0 (LWP 2795576)]. [New Thread 0x7fffc7e006c0 (LWP 2795577)]. [New Thread 0x7fffc74006c0 (LWP 2795578)]. [New Thread 0x7fffc6a006c0 (LWP 2795579)]. [New Thread 0x7fffc60006c0 (LWP 2795580)]. [New Thread 0x7fffc56006c0 (LWP 2795581)]. [New Thread 0x7fffc4c006c0 (LWP 2795582)]. [New Thread 0x7fffbfe006c0 (LWP 2795583)]. [New Thread 0x7fffbf4006c0 (LWP 2795584)]. [New Thread 0x7fffbea006c0 (LWP 2795585)]. [New Thread 0x7fffbe0006c0 (LWP 2795586)]. [Detaching after vfork from child process 2795587]. gPad name c1 editable True. Thread 1 ""python"" hit Breakpoint 2, TH1::Draw (this=0x55555b695c10, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 3070	 TString opt1 = option; opt1.ToLower();. (gdb) p $_thread. $2 = 1. (gdb) c. Continuing. Thread 1 ""python"" hit Breakpoint 1.3, TCanvas::TCanvas (this=0x55555c52e8c0, name=0x55555c63c110 ""c1_n2"", title=0x55555c63c110 ""c1_n2"", form=1). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:269. 269	TCanvas::TCanvas(const char *name, const char *title, Int_t form) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $3 = 1. (gdb) n. 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) . 186	 Bool_t GetCanvasPreferGL() const {return fCanvasPreferGL;}. (gdb) . 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) n. 274	 Constructor(name, title, form);. (gdb) . [Detaching after vfork from child process 2802535]. TCanvas::MakeDefCanvas () at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:1523. 1523	 ::Info(""TCanvas::MakeDefCanvas"",""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:3,reliability,doe,does,3,"It does not seem to be the case, which makes the issue even weirder. ```. Thread 1 ""python"" hit Breakpoint 1.1, TCanvas::TCanvas (this=0x55555b6ce330, build=true). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:147. 147	TCanvas::TCanvas(Bool_t build) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $1 = 1. (gdb) c. Continuing. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9375. [New Thread 0x7fffcce006c0 (LWP 2795576)]. [New Thread 0x7fffc7e006c0 (LWP 2795577)]. [New Thread 0x7fffc74006c0 (LWP 2795578)]. [New Thread 0x7fffc6a006c0 (LWP 2795579)]. [New Thread 0x7fffc60006c0 (LWP 2795580)]. [New Thread 0x7fffc56006c0 (LWP 2795581)]. [New Thread 0x7fffc4c006c0 (LWP 2795582)]. [New Thread 0x7fffbfe006c0 (LWP 2795583)]. [New Thread 0x7fffbf4006c0 (LWP 2795584)]. [New Thread 0x7fffbea006c0 (LWP 2795585)]. [New Thread 0x7fffbe0006c0 (LWP 2795586)]. [Detaching after vfork from child process 2795587]. gPad name c1 editable True. Thread 1 ""python"" hit Breakpoint 2, TH1::Draw (this=0x55555b695c10, option=0x7fffdfd1d000 """"). at /home/vpadulan/Programs/rootproject/rootsrc/hist/hist/src/TH1.cxx:3070. 3070	 TString opt1 = option; opt1.ToLower();. (gdb) p $_thread. $2 = 1. (gdb) c. Continuing. Thread 1 ""python"" hit Breakpoint 1.3, TCanvas::TCanvas (this=0x55555c52e8c0, name=0x55555c63c110 ""c1_n2"", title=0x55555c63c110 ""c1_n2"", form=1). at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:269. 269	TCanvas::TCanvas(const char *name, const char *title, Int_t form) : TPad(), fDoubleBuffer(0). (gdb) p $_thread. $3 = 1. (gdb) n. 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) . 186	 Bool_t GetCanvasPreferGL() const {return fCanvasPreferGL;}. (gdb) . 272	 fUseGL = gStyle->GetCanvasPreferGL();. (gdb) n. 274	 Constructor(name, title, form);. (gdb) . [Detaching after vfork from child process 2802535]. TCanvas::MakeDefCanvas () at /home/vpadulan/Programs/rootproject/rootsrc/graf2d/gpad/src/TCanvas.cxx:1523. 1523	 ::Info(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:124,energy efficiency,core,core,124,The apparent reason is that at this line https://github.com/root-project/root/blob/2ee1281e6dfa7bb82a650608442e75f8dfb4c6a7/core/thread/src/TThread.cxx#L896. `TThread::SelfId()` returns 140737352845120. fgMainId returns 140736664176320. So somehow they are different even though gdb says it's the same thread,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:46,safety,detect,detect,46,Looks like `TThread` is not able to correctly detect python thread id? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:46,security,detect,detect,46,Looks like `TThread` is not able to correctly detect python thread id? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:46,safety,detect,detect,46,"> Looks like TThread is not able to correctly detect python thread id? I don't know. TThread is called by ROOT internals anyway, so it's not like it should ""detect"" an external thread id of sorts. I tried stepping through gdb in all occurences of usage of TThread but it's too much noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:157,safety,detect,detect,157,"> Looks like TThread is not able to correctly detect python thread id? I don't know. TThread is called by ROOT internals anyway, so it's not like it should ""detect"" an external thread id of sorts. I tried stepping through gdb in all occurences of usage of TThread but it's too much noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:46,security,detect,detect,46,"> Looks like TThread is not able to correctly detect python thread id? I don't know. TThread is called by ROOT internals anyway, so it's not like it should ""detect"" an external thread id of sorts. I tried stepping through gdb in all occurences of usage of TThread but it's too much noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:157,security,detect,detect,157,"> Looks like TThread is not able to correctly detect python thread id? I don't know. TThread is called by ROOT internals anyway, so it's not like it should ""detect"" an external thread id of sorts. I tried stepping through gdb in all occurences of usage of TThread but it's too much noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:245,safety,safe,safety,245,> Or python executes different script lines from different threads? It smells like this is the problem. (But oddly on the surface the example at https://github.com/root-project/root/issues/15498#issue-2293017347 seems to not turn on ROOT thread safety)>,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:143,safety,safe,safety,143,"> (But oddly on the surface the example at https://github.com/root-project/root/issues/15498#issue-2293017347 seems to not turn on ROOT thread safety)>. Interesting comment! In fact, just writing `ROOT.EnableThreadSafety()` at the beginning of the program makes the example run properly on my machine (i.e. only one canvas shows up). @linev can you confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:349,usability,confirm,confirm,349,"> (But oddly on the surface the example at https://github.com/root-project/root/issues/15498#issue-2293017347 seems to not turn on ROOT thread safety)>. Interesting comment! In fact, just writing `ROOT.EnableThreadSafety()` at the beginning of the program makes the example run properly on my machine (i.e. only one canvas shows up). @linev can you confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:33,availability,sli,slightly,33,~~Now I see similar problem with slightly modified ROOT macro from DF tutorials -`df027_SQliteDependencyOverVersion.C `~~. ~~When web graphics enabled - `gPad` is not that it should be. . All histograms drawn on main canvas instead of sub-pads.~~. Edited - this problem has different nature and not connected with `gPad`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:203,energy efficiency,draw,drawn,203,~~Now I see similar problem with slightly modified ROOT macro from DF tutorials -`df027_SQliteDependencyOverVersion.C `~~. ~~When web graphics enabled - `gPad` is not that it should be. . All histograms drawn on main canvas instead of sub-pads.~~. Edited - this problem has different nature and not connected with `gPad`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:235,integrability,sub,sub-pads,235,~~Now I see similar problem with slightly modified ROOT macro from DF tutorials -`df027_SQliteDependencyOverVersion.C `~~. ~~When web graphics enabled - `gPad` is not that it should be. . All histograms drawn on main canvas instead of sub-pads.~~. Edited - this problem has different nature and not connected with `gPad`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:33,reliability,sli,slightly,33,~~Now I see similar problem with slightly modified ROOT macro from DF tutorials -`df027_SQliteDependencyOverVersion.C `~~. ~~When web graphics enabled - `gPad` is not that it should be. . All histograms drawn on main canvas instead of sub-pads.~~. Edited - this problem has different nature and not connected with `gPad`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:42,security,modif,modified,42,~~Now I see similar problem with slightly modified ROOT macro from DF tutorials -`df027_SQliteDependencyOverVersion.C `~~. ~~When web graphics enabled - `gPad` is not that it should be. . All histograms drawn on main canvas instead of sub-pads.~~. Edited - this problem has different nature and not connected with `gPad`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:365,energy efficiency,load,load,365,"@vepadulano . Actually, it is enough to call `TThread::SelfId()` method to make macro working. Without it `libThread` will be initialized from other thread - and internal `TThread::fgMainId` will be set wrongly. Looks like it is main reason why `gPad` will not work properly after that. . Probably I can make workaround for `TWebCanvas` - but may be one can always load and initialize threads library already with `import ROOT`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:365,performance,load,load,365,"@vepadulano . Actually, it is enough to call `TThread::SelfId()` method to make macro working. Without it `libThread` will be initialized from other thread - and internal `TThread::fgMainId` will be set wrongly. Looks like it is main reason why `gPad` will not work properly after that. . Probably I can make workaround for `TWebCanvas` - but may be one can always load and initialize threads library already with `import ROOT`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/pull/15499:3,availability,failur,failure,3,CI failure (roottest-python-basic-datatype) is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:3,deployability,fail,failure,3,CI failure (roottest-python-basic-datatype) is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:3,performance,failur,failure,3,CI failure (roottest-python-basic-datatype) is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:3,reliability,fail,failure,3,CI failure (roottest-python-basic-datatype) is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:64,interoperability,format,formatting,64,"Thank you very much for the improvements, and also for the code formatting!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15500:9,testability,context,context,9,In which context is this needed/useful?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15500
https://github.com/root-project/root/pull/15500:38,safety,review,review,38,For RBatchGenerator. @vepadulano will review the code and say if it is needed. Apologies for not providing the context.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15500
https://github.com/root-project/root/pull/15500:38,testability,review,review,38,For RBatchGenerator. @vepadulano will review the code and say if it is needed. Apologies for not providing the context.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15500
https://github.com/root-project/root/pull/15500:111,testability,context,context,111,For RBatchGenerator. @vepadulano will review the code and say if it is needed. Apologies for not providing the context.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15500
https://github.com/root-project/root/pull/15500:364,integrability,batch,batch,364,"Thank you @kristupaspranc for this addition! Indeed in the RBatchGenerator this information is nice to have. It turns out that a similar approach improves also the code for distributed RDataFrame, I opened a PR https://github.com/root-project/root/pull/15554 that I believe respects functionally the same goal as this one. In your case you could just check in the batch generator code for `if (GetDataSourceLabel(df) == ""TTreeDS"")`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15500
https://github.com/root-project/root/pull/15500:173,interoperability,distribut,distributed,173,"Thank you @kristupaspranc for this addition! Indeed in the RBatchGenerator this information is nice to have. It turns out that a similar approach improves also the code for distributed RDataFrame, I opened a PR https://github.com/root-project/root/pull/15554 that I believe respects functionally the same goal as this one. In your case you could just check in the batch generator code for `if (GetDataSourceLabel(df) == ""TTreeDS"")`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15500
https://github.com/root-project/root/pull/15500:364,performance,batch,batch,364,"Thank you @kristupaspranc for this addition! Indeed in the RBatchGenerator this information is nice to have. It turns out that a similar approach improves also the code for distributed RDataFrame, I opened a PR https://github.com/root-project/root/pull/15554 that I believe respects functionally the same goal as this one. In your case you could just check in the batch generator code for `if (GetDataSourceLabel(df) == ""TTreeDS"")`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15500
https://github.com/root-project/root/pull/15501:98,deployability,contain,contains,98,"Hi @vgvassilev, thanks for the initiative! I notices that so far, the `CladDerivator.h` file only contains templated functions, but the new pullbacks in this PR are not. And they are quite big, so I'm not sure if inlining is worth it? Should we introduce a `CladDerivator.cxx` for them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:37,deployability,build,build,37,We will have a problem if we need to build hessians because we will need to provide the higher order propagators ourselves.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:19,energy efficiency,reduc,reduce,19,I suspect we could reduce the code of the landau pullback quite a lot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:21,energy efficiency,reduc,reduce,21,"> I suspect we could reduce the code of the landau pullback quite a lot. I'm not sure there is still room for much improvement: I have already simplified a lot in my initial PR. Maybe we can merge it, and if you and @vaithak feel like simplifying the pullbacks manually, you can do so in a follow-up PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:143,testability,simpl,simplified,143,"> I suspect we could reduce the code of the landau pullback quite a lot. I'm not sure there is still room for much improvement: I have already simplified a lot in my initial PR. Maybe we can merge it, and if you and @vaithak feel like simplifying the pullbacks manually, you can do so in a follow-up PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:235,testability,simpl,simplifying,235,"> I suspect we could reduce the code of the landau pullback quite a lot. I'm not sure there is still room for much improvement: I have already simplified a lot in my initial PR. Maybe we can merge it, and if you and @vaithak feel like simplifying the pullbacks manually, you can do so in a follow-up PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:143,usability,simpl,simplified,143,"> I suspect we could reduce the code of the landau pullback quite a lot. I'm not sure there is still room for much improvement: I have already simplified a lot in my initial PR. Maybe we can merge it, and if you and @vaithak feel like simplifying the pullbacks manually, you can do so in a follow-up PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:235,usability,simpl,simplifying,235,"> I suspect we could reduce the code of the landau pullback quite a lot. I'm not sure there is still room for much improvement: I have already simplified a lot in my initial PR. Maybe we can merge it, and if you and @vaithak feel like simplifying the pullbacks manually, you can do so in a follow-up PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:16,usability,progress,progress,16,"Yes, let's make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15502:153,energy efficiency,current,currently,153,"No, that one is not fixed, and in fact I can't reproduce it locally. But it is very easy to circumvent: just done use `std::min` and `std::max`, like we currently do:. https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Detail/MathFuncs.h#L547. I tried in this PR to use the `std::` functions just to see what happens, but it didn't work. It's not a blocker though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:161,energy efficiency,current,currently,161,"> No, that one is not fixed, and in fact I can't reproduce it locally. > . > But it is very easy to circumvent: just done use `std::min` and `std::max`, like we currently do: https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Detail/MathFuncs.h#L547. > . > I tried in this PR to use the `std::` functions just to see what happens, but it didn't work. It's not a blocker though. Do we have a bug report for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:48,availability,failur,failures,48,I have repurposed this PR to fix the current CI failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:48,deployability,fail,failures,48,I have repurposed this PR to fix the current CI failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:37,energy efficiency,current,current,37,I have repurposed this PR to fix the current CI failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:48,performance,failur,failures,48,I have repurposed this PR to fix the current CI failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:48,reliability,fail,failures,48,I have repurposed this PR to fix the current CI failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:13,deployability,updat,update,13,FYI the clad update also introduces an unused parameter warning due to https://github.com/root-project/root/blob/baf092324e6e2a9301daff36a780cd064b232c2d/hist/hist/src/TFormula.cxx#L3161 . I don't know if you want to include the fix in this PR or I will just open a separate one,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:46,modifiability,paramet,parameter,46,FYI the clad update also introduces an unused parameter warning due to https://github.com/root-project/root/blob/baf092324e6e2a9301daff36a780cd064b232c2d/hist/hist/src/TFormula.cxx#L3161 . I don't know if you want to include the fix in this PR or I will just open a separate one,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:13,safety,updat,update,13,FYI the clad update also introduces an unused parameter warning due to https://github.com/root-project/root/blob/baf092324e6e2a9301daff36a780cd064b232c2d/hist/hist/src/TFormula.cxx#L3161 . I don't know if you want to include the fix in this PR or I will just open a separate one,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:13,security,updat,update,13,FYI the clad update also introduces an unused parameter warning due to https://github.com/root-project/root/blob/baf092324e6e2a9301daff36a780cd064b232c2d/hist/hist/src/TFormula.cxx#L3161 . I don't know if you want to include the fix in this PR or I will just open a separate one,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/issues/15503:124,deployability,stack,stack,124,"Hint: we need to call this function with `vector2rvec=false`, this means properly propagating the argument through the call stack. https://github.com/root-project/root/blob/5612a4d774a86ab57840ebcfcb9156ca56585285/tree/dataframe/src/RDFUtils.cxx#L222-L223",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15503
https://github.com/root-project/root/issues/15503:0,usability,Hint,Hint,0,"Hint: we need to call this function with `vector2rvec=false`, this means properly propagating the argument through the call stack. https://github.com/root-project/root/blob/5612a4d774a86ab57840ebcfcb9156ca56585285/tree/dataframe/src/RDFUtils.cxx#L222-L223",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15503
https://github.com/root-project/root/pull/15508:18,deployability,build,build,18,"> The incremental build might need a refresh to properly see the new cftios header files. Good point! I asked the CI to do a clean build, and now it worked!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:131,deployability,build,build,131,"> The incremental build might need a refresh to properly see the new cftios header files. Good point! I asked the CI to do a clean build, and now it worked!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:81,usability,Close,Close,81,"Argh, clicked the wrong button again. Please GitHub, increase the space between ""Close with comment"" and ""Comment"" :laughing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:25,deployability,build,build,25,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:217,deployability,depend,depended,217,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:217,integrability,depend,depended,217,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:205,interoperability,platform,platform,205,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:217,modifiability,depend,depended,217,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:0,reliability,Doe,Doesn,0,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:217,safety,depend,depended,217,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:217,testability,depend,depended,217,"Doesn't have setting the build type the same effect, which is what I do right now? ```. CMAKE_ARGS -G ${CMAKE_GENERATOR}. -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. ```. I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:83,availability,error,errors,83,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:251,availability,error,error,251,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:265,availability,error,error,265,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:77,deployability,build,build,77,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:191,deployability,build,build,191,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:452,deployability,Version,Version,452,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:601,deployability,Version,Version,601,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:1465,deployability,build,build,1465,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:1506,deployability,build,build,1506,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:1541,deployability,build,build,1541,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:715,energy efficiency,Power,PowerStation,715,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:452,integrability,Version,Version,452,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:601,integrability,Version,Version,601,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:452,modifiability,Version,Version,452,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:601,modifiability,Version,Version,601,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:83,performance,error,errors,83,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:251,performance,error,error,251,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:265,performance,error,error,265,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:958,performance,I/O,I/O,958,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:83,safety,error,errors,83,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:251,safety,error,error,251,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:265,safety,error,error,265,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:782,safety,test,test,782,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:1734,safety,avoid,avoid,1734,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:782,testability,test,test,782,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:83,usability,error,errors,83,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:251,usability,error,error,251,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:265,usability,error,error,265,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:695,usability,UX,UX,695,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:741,usability,Visual,Visual,741,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:796,usability,UX,UX,796,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:. ```. (compiling source file '../BUILTIN_CFITSIO/eval_y.c'). . C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]. (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'). ```. This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:. https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:27,deployability,build,build,27,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:237,deployability,depend,depended,237,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:237,integrability,depend,depended,237,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:225,interoperability,platform,platform,225,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:237,modifiability,depend,depended,237,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:2,reliability,Doe,Doesn,2,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:237,safety,depend,depended,237,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:237,testability,depend,depended,237,"> Doesn't have setting the build type the same effect, which is what I do right now? > . > ```. > CMAKE_ARGS -G ${CMAKE_GENERATOR}. > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}. > ```. > . > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:122,deployability,build,builds,122,"And BTW, I'm working on removing the custom `winrtdebug` flag, but too busy with many other tasks. And then all the Debug builds will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:134,deployability,fail,fail,134,"And BTW, I'm working on removing the custom `winrtdebug` flag, but too busy with many other tasks. And then all the Debug builds will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:134,reliability,fail,fail,134,"And BTW, I'm working on removing the custom `winrtdebug` flag, but too busy with many other tasks. And then all the Debug builds will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:37,usability,custom,custom,37,"And BTW, I'm working on removing the custom `winrtdebug` flag, but too busy with many other tasks. And then all the Debug builds will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:59,integrability,wrap,wrapper,59,"I'm making another attempt, just not compiling the fortran wrapper because we don't need it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:59,interoperability,wrapper,wrapper,59,"I'm making another attempt, just not compiling the fortran wrapper because we don't need it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15510:12,deployability,build,build,12,In the last build one parenthesis in the file was missing. With the last PR it was fixed and improved the code in other areas where the code was horrible,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15510
https://github.com/root-project/root/issues/15511:11,availability,down,down,11,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:329,availability,Down,Downstream,329,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:16,deployability,version,version,16,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1502,energy efficiency,Measur,MeasuredMass,1502,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:16,integrability,version,version,16,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:16,modifiability,version,version,16,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:63,safety,test,test,63,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:63,testability,test,test,63,"A stripped down version of the header that segfaults:. ```. // test.h. #include ""LoKi/Particles.h"". using EQUALTO = LoKi::EqualToValue<const LHCb::Particle*>;. const auto TRTYPE = LoKi::Particles::TrackType{};. // Remove ANY of the lines below and the segfault disappears. const auto ISDOWN = EQUALTO{TRTYPE, LHCb::Track::Types::Downstream};. const auto ISLONG = EQUALTO{TRTYPE, LHCb::Track::Types::Long};. const auto MUONBDT_CATBOOST = LoKi::Particles::MuonMVA2{};. const auto ISMUONPID = LoKi::Particles::IsMuon{};. const auto ISMUONLOOSE = LoKi::Particles::IsMuonLoose{};. const auto ISMUONTIGHT = LoKi::Particles::IsMuonTight{};. const auto ISUP = EQUALTO{TRTYPE, LHCb::Track::Types::Upstream};. const auto KEY = LoKi::Particles::Key{};. const auto M = LoKi::Particles::Mass{};. const auto LV01 = LoKi::Particles::DecayAngle{1};. const auto LV02 = LoKi::Particles::DecayAngle{2};. const auto LV03 = LoKi::Particles::DecayAngle{3};. const auto LV04 = LoKi::Particles::DecayAngle{4};. const auto M0 = LoKi::Particles::Mass{};. const auto M1 = LoKi::Particles::InvariantMass{1};. const auto M12 = LoKi::Particles::InvariantMass{1, 2};. const auto M13 = LoKi::Particles::InvariantMass{1, 3};. const auto M14 = LoKi::Particles::InvariantMass{1, 4};. const auto M2 = LoKi::Particles::InvariantMass{2};. const auto M23 = LoKi::Particles::InvariantMass{2, 3};. const auto M24 = LoKi::Particles::InvariantMass{2, 4};. const auto M34 = LoKi::Particles::InvariantMass{3, 4};. const auto MM = LoKi::Particles::MeasuredMass{};. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:196,deployability,stack,stack,196,"I met a similar situation here. I am using LCG_103. . ```. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6. #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:442,deployability,Stack,StackTrace,442,"I met a similar situation here. I am using LCG_103. . ```. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6. #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:491,deployability,releas,releases,491,"I met a similar situation here. I am using LCG_103. . ```. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6. #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:683,deployability,releas,releases,683,"I met a similar situation here. I am using LCG_103. . ```. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6. #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:860,deployability,releas,releases,860,"I met a similar situation here. I am using LCG_103. . ```. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6. #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1492,deployability,releas,releases,1492,"ses/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ==================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1913,deployability,stack,stack,1913,"Core.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2369,deployability,stack,stack,2369,"anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ==============================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3078,deployability,releas,releases,3078,"exit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2238,integrability,sub,submit,2238," (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? ()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2016,modifiability,variab,variable,2016,"0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:929,security,sign,signal,929,"I met a similar situation here. I am using LCG_103. . ```. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6. #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:202,testability,trace,trace,202,"I met a similar situation here. I am using LCG_103. . ```. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f62c74d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007f62c744b243 in do_system () from /lib64/libc.so.6. #2 0x00007f62c570fb69 in TUnixSystem::StackTrace() () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #3 0x00007f62c5edf463 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libcppyy_backend3_9.so. #4 0x00007f62c570f391 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1919,testability,trace,trace,1919,"o. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2375,testability,trace,trace,2375,"ous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ====================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1839,usability,hint,hint,1839,"cb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2053,usability,help,help,2053,"0007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2111,usability,prefer,preferably,2111,"1 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2132,usability,command,command,2132," in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2285,usability,prefer,preferably,2285,"f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2307,usability,command,command,2307," #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2451,usability,help,help,2451,"exit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f62be7d56fe in ?? (). #7 0x00007ffce112d920 in ?? (). #8 0x00007f62be7dc429 in ?? (). #9 0x00007ffce112d950 in ?? (). #10 0x00007f62be7d26b0 in ?? (). #11 0x00007f62bacd3180 in ?? (). #12 0x00007ffce112d940 in ?? (). #13 0x00007ffce112d9a0 in ?? (). #14 0x00007f62be7d985d in ?? (). #15 0x000000000214fc80 in ?? (). #16 0x00007f62be7d26b0 in ?? (). #17 0x000000001d59e690 in ?? (). #18 0x00007f62bf3940ec in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-opt/lib/libCling.so. #19 0x00007ffce112d940 in ?? (). #20 0x00007f62bacd5778 in ?? (). #21 0x00007f62bacd5740 in ?? (). #22 0x0000000016991e30 in ?? (). #23 0x00007f62be7d298d in ?? (). #24 0x0000000000000000 in ?? (). ===========================================================. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4188,availability,ERROR,ERROR,4188," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4205,availability,error,errors,4205," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:500,energy efficiency,alloc,allocs,500,"> Can you run valgrind using the root suppression file? Hi, here is the result. Do note that I do not know valgrind very well. I ran this:. ```. valgrind -v --leak-check=full --show-leak-kinds=all --suppressions=/afs/cern. ch/work/r/ruide/valgrind-root.supp ls -l ./run gaudirun.py /afs/cern.ch/work/r/ruide/private/starterkit/ntuple_o. ptions.py. ```. The result looks like this:. ```. ==930722== HEAP SUMMARY:. ==930722== in use at exit: 20,459 bytes in 11 blocks. ==930722== total heap usage: 754 allocs, 743 frees, 93,819 bytes allocated. ==930722== . ==930722== Searching for pointers to 11 not-freed blocks. ==930722== Checked 132,624 bytes. ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 1 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x1164DF: ??? (in /usr/bin/ls). ==930722== by 0x11657C: ??? (in /usr/bin/ls). ==930722== by 0x1178C7: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 2 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11661F: ??? (in /usr/bin/ls). ==930722== by 0x117A3E: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 48 bytes in 1 blocks are still reachable in loss record 3 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115ECB: ??? (in /usr/bin/ls). ==930722== by 0x10E074: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:532,energy efficiency,alloc,allocated,532,"> Can you run valgrind using the root suppression file? Hi, here is the result. Do note that I do not know valgrind very well. I ran this:. ```. valgrind -v --leak-check=full --show-leak-kinds=all --suppressions=/afs/cern. ch/work/r/ruide/valgrind-root.supp ls -l ./run gaudirun.py /afs/cern.ch/work/r/ruide/private/starterkit/ntuple_o. ptions.py. ```. The result looks like this:. ```. ==930722== HEAP SUMMARY:. ==930722== in use at exit: 20,459 bytes in 11 blocks. ==930722== total heap usage: 754 allocs, 743 frees, 93,819 bytes allocated. ==930722== . ==930722== Searching for pointers to 11 not-freed blocks. ==930722== Checked 132,624 bytes. ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 1 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x1164DF: ??? (in /usr/bin/ls). ==930722== by 0x11657C: ??? (in /usr/bin/ls). ==930722== by 0x1178C7: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 2 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11661F: ??? (in /usr/bin/ls). ==930722== by 0x117A3E: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 48 bytes in 1 blocks are still reachable in loss record 3 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115ECB: ??? (in /usr/bin/ls). ==930722== by 0x10E074: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4188,performance,ERROR,ERROR,4188," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4205,performance,error,errors,4205," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4188,safety,ERROR,ERROR,4188," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4205,safety,error,errors,4205," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:716,security,loss,loss,716,"> Can you run valgrind using the root suppression file? Hi, here is the result. Do note that I do not know valgrind very well. I ran this:. ```. valgrind -v --leak-check=full --show-leak-kinds=all --suppressions=/afs/cern. ch/work/r/ruide/valgrind-root.supp ls -l ./run gaudirun.py /afs/cern.ch/work/r/ruide/private/starterkit/ntuple_o. ptions.py. ```. The result looks like this:. ```. ==930722== HEAP SUMMARY:. ==930722== in use at exit: 20,459 bytes in 11 blocks. ==930722== total heap usage: 754 allocs, 743 frees, 93,819 bytes allocated. ==930722== . ==930722== Searching for pointers to 11 not-freed blocks. ==930722== Checked 132,624 bytes. ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 1 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x1164DF: ??? (in /usr/bin/ls). ==930722== by 0x11657C: ??? (in /usr/bin/ls). ==930722== by 0x1178C7: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 2 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11661F: ??? (in /usr/bin/ls). ==930722== by 0x117A3E: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 48 bytes in 1 blocks are still reachable in loss record 3 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115ECB: ??? (in /usr/bin/ls). ==930722== by 0x10E074: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1112,security,loss,loss,1112,"d very well. I ran this:. ```. valgrind -v --leak-check=full --show-leak-kinds=all --suppressions=/afs/cern. ch/work/r/ruide/valgrind-root.supp ls -l ./run gaudirun.py /afs/cern.ch/work/r/ruide/private/starterkit/ntuple_o. ptions.py. ```. The result looks like this:. ```. ==930722== HEAP SUMMARY:. ==930722== in use at exit: 20,459 bytes in 11 blocks. ==930722== total heap usage: 754 allocs, 743 frees, 93,819 bytes allocated. ==930722== . ==930722== Searching for pointers to 11 not-freed blocks. ==930722== Checked 132,624 bytes. ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 1 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x1164DF: ??? (in /usr/bin/ls). ==930722== by 0x11657C: ??? (in /usr/bin/ls). ==930722== by 0x1178C7: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 2 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11661F: ??? (in /usr/bin/ls). ==930722== by 0x117A3E: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 48 bytes in 1 blocks are still reachable in loss record 3 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115ECB: ??? (in /usr/bin/ls). ==930722== by 0x10E074: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722== by 0x4892ADB: lgetfilecon (in /usr/lib64/libselinux.so.1). ==930722== by 0x117464: ??? (in /usr/bin/ls). ==93072",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1462,security,loss,loss,1462,"s. ==930722== total heap usage: 754 allocs, 743 frees, 93,819 bytes allocated. ==930722== . ==930722== Searching for pointers to 11 not-freed blocks. ==930722== Checked 132,624 bytes. ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 1 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x1164DF: ??? (in /usr/bin/ls). ==930722== by 0x11657C: ??? (in /usr/bin/ls). ==930722== by 0x1178C7: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 2 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11661F: ??? (in /usr/bin/ls). ==930722== by 0x117A3E: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 48 bytes in 1 blocks are still reachable in loss record 3 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115ECB: ??? (in /usr/bin/ls). ==930722== by 0x10E074: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722== by 0x4892ADB: lgetfilecon (in /usr/lib64/libselinux.so.1). ==930722== by 0x117464: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==93072",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1766,security,loss,loss,1766,(vg_replace_malloc.c:442). ==930722== by 0x1164DF: ??? (in /usr/bin/ls). ==930722== by 0x11657C: ??? (in /usr/bin/ls). ==930722== by 0x1178C7: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 24 bytes in 1 blocks are still reachable in loss record 2 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11661F: ??? (in /usr/bin/ls). ==930722== by 0x117A3E: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 48 bytes in 1 blocks are still reachable in loss record 3 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115ECB: ??? (in /usr/bin/ls). ==930722== by 0x10E074: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722== by 0x4892ADB: lgetfilecon (in /usr/lib64/libselinux.so.1). ==930722== by 0x117464: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==93072,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2286,security,loss,loss,2286,722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 48 bytes in 1 blocks are still reachable in loss record 3 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115ECB: ??? (in /usr/bin/ls). ==930722== by 0x10E074: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722== by 0x4892ADB: lgetfilecon (in /usr/lib64/libselinux.so.1). ==930722== by 0x117464: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==93072,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2636,security,loss,loss,2636,"722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 54 bytes in 2 blocks are still reachable in loss record 4 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x494C12E: strdup (in /usr/lib64/libc.so.6). ==930722== by 0x48929FF: selinux_raw_to_trans_context (in /usr/lib64/libselinux.so.1). ==930722== by 0x4892ADB: lgetfilecon (in /usr/lib64/libselinux.so.1). ==930722== by 0x117464: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reacha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2986,security,loss,loss,2986,"). ==930722== by 0x4892ADB: lgetfilecon (in /usr/lib64/libselinux.so.1). ==930722== by 0x117464: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirect",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3337,security,loss,loss,3337," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3645,security,loss,loss,3645," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4219,testability,context,contexts,4219," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4188,usability,ERROR,ERROR,4188," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4205,usability,error,errors,4205," blocks are still reachable in loss record 5 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10E549: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 56 bytes in 1 blocks are still reachable in loss record 6 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x115DF9: ??? (in /usr/bin/ls). ==930722== by 0x10D1A2: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 69 bytes in 2 blocks are still reachable in loss record 7 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x11666E: ??? (in /usr/bin/ls). ==930722== by 0x116CAF: ??? (in /usr/bin/ls). ==930722== by 0x10D35A: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 128 bytes in 1 blocks are still reachable in loss record 8 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x113989: ??? (in /usr/bin/ls). ==930722== by 0x10D2A6: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== 20,000 bytes in 1 blocks are still reachable in loss record 9 of 9. ==930722== at 0x484480F: malloc (vg_replace_malloc.c:442). ==930722== by 0x115DC8: ??? (in /usr/bin/ls). ==930722== by 0x10D310: ??? (in /usr/bin/ls). ==930722== by 0x48D958F: (below main) (in /usr/lib64/libc.so.6). ==930722== . ==930722== LEAK SUMMARY:. ==930722== definitely lost: 0 bytes in 0 blocks. ==930722== indirectly lost: 0 bytes in 0 blocks. ==930722== possibly lost: 0 bytes in 0 blocks. ==930722== still reachable: 20,459 bytes in 11 blocks. ==930722== suppressed: 0 bytes in 0 blocks. ==930722== . ==930722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:85,usability,command,command,85,There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:673,availability,error,error,673,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:123,deployability,stack,stack,123,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:405,deployability,build,build,405,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:450,deployability,build,build,450,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:495,energy efficiency,core,core,495,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:673,performance,error,error,673,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:617,safety,test,test,617,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:642,safety,test,test,642,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:673,safety,error,error,673,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:695,safety,compl,complains,695,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:695,security,compl,complains,695,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:129,testability,trace,trace,129,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:617,testability,test,test,617,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:642,testability,test,test,642,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:673,usability,error,error,673,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line. ```. #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=. 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436. ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:119,availability,error,error,119,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:161,availability,down,down,161,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:227,availability,error,error,227,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:657,availability,error,error,657,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1628,availability,error,error,1628,"nt/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2833,availability,error,error,2833,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2857,availability,operat,operator,2857,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2892,availability,operat,operator,2892,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3161,availability,operat,operator,3161,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3698,availability,error,error,3698,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:53,deployability,patch,patches,53,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:438,deployability,patch,patches,438,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:456,deployability,Instal,InstallArea,456,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:566,deployability,patch,patches,566,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:584,deployability,Instal,InstallArea,584,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:823,deployability,patch,patches,823,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:841,deployability,Instal,InstallArea,841,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1017,deployability,patch,patches,1017,"dev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1035,deployability,Instal,InstallArea,1035,"s/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1151,deployability,patch,patches,1151,"ipped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1169,deployability,Instal,InstallArea,1169,"le (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1287,deployability,patch,patches,1287," input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1305,deployability,Instal,InstallArea,1305,"n file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1538,deployability,patch,patches,1538,".ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1556,deployability,Instal,InstallArea,1556,"un2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1799,deployability,patch,patches,1799,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1817,deployability,Instal,InstallArea,1817,"patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1993,deployability,patch,patches,1993,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/night",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2011,deployability,Instal,InstallArea,2011,"patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2127,deployability,patch,patches,2127,"nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2145,deployability,Instal,InstallArea,2145,"patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2263,deployability,patch,patches,2263,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2281,deployability,Instal,InstallArea,2281,"patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2613,deployability,patch,patches,2613,"le.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess ==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2631,deployability,Instal,InstallArea,2631,"definition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The for",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2741,deployability,patch,patches,2741,"10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2759,deployability,Instal,InstallArea,2759,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3012,deployability,patch,patches,3012,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3030,deployability,Instal,InstallArea,3030,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3249,deployability,build,build,3249,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3294,deployability,build,build,3294,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3679,deployability,fail,failed,3679,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:140,energy efficiency,load,loading,140,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3339,energy efficiency,core,core,3339,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:233,integrability,messag,message,233,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:628,integrability,Event,Event,628,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:885,integrability,Event,Event,885,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1079,integrability,Event,Event,1079,"as removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1349,integrability,Event,Event,1349,"dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1440,integrability,Event,Event,1440,"es/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1600,integrability,Event,Event,1600,"v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1697,integrability,pub,public,1697," . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1861,integrability,Event,Event,1861,"l9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2055,integrability,Event,Event,2055,"l9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2325,integrability,Event,Event,2325,"l9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2416,integrability,Event,Event,2416,"ite here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2803,integrability,Event,Event,2803,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3074,integrability,Event,Event,3074,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:233,interoperability,messag,message,233,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:119,performance,error,error,119,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:140,performance,load,loading,140,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:227,performance,error,error,227,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:657,performance,error,error,657,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:926,performance,time,times,926,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1392,performance,time,times,1392,"/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1628,performance,error,error,1628,"nt/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1902,performance,time,times,1902,"h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2368,performance,time,times,2368," included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:22",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2833,performance,error,error,2833,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3698,performance,error,error,3698,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:67,reliability,doe,doesn,67,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3679,reliability,fail,failed,3679,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3732,reliability,pra,pragma,3732,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:53,safety,patch,patches,53,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:119,safety,error,error,119,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:185,safety,test,test,185,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:227,safety,error,error,227,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:438,safety,patch,patches,438,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:566,safety,patch,patches,566,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:657,safety,error,error,657,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:823,safety,patch,patches,823,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1017,safety,patch,patches,1017,"dev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1151,safety,patch,patches,1151,"ipped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1287,safety,patch,patches,1287," input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1538,safety,patch,patches,1538,".ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1628,safety,error,error,1628,"nt/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1799,safety,patch,patches,1799,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1993,safety,patch,patches,1993,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/night",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2127,safety,patch,patches,2127,"nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2263,safety,patch,patches,2263,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2613,safety,patch,patches,2613,"le.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess ==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2741,safety,patch,patches,2741,"10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2833,safety,error,error,2833,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3012,safety,patch,patches,3012,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3698,safety,error,error,3698,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:53,security,patch,patches,53,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:438,security,patch,patches,438,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:566,security,patch,patches,566,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:823,security,patch,patches,823,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1017,security,patch,patches,1017,"dev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1151,security,patch,patches,1151,"ipped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1287,security,patch,patches,1287," input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallAre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1538,security,patch,patches,1538,".ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1799,security,patch,patches,1799,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1993,security,patch,patches,1993,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/night",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2127,security,patch,patches,2127,"nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2263,security,patch,patches,2263,"nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2613,security,patch,patches,2613,"le.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess ==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2741,security,patch,patches,2741,"10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3012,security,patch,patches,3012,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:185,testability,test,test,185,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3575,testability,Assert,Assertion,3575,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:119,usability,error,error,119,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:227,usability,error,error,227,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:345,usability,user,user,345,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:657,usability,error,error,657,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```. Processing temp.h... . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1628,usability,error,error,1628,"nt/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . static const CLID CLID_ProtoParticle = 803; . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . ... ...SKIPPED LINES. ... /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2520,usability,user,user,2520,"tlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . class ProtoParticle final : public KeyedObject<int> { . ^ . input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2833,usability,error,error,2833,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3698,usability,error,error,3698,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . times, additional include site here . #include ""Event/ProtoParticle.h"" . ^ . In file included from input_line_8:1: . In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . ^ . root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . ```. The error seems weird because I see `#pragma once` in `ProtoParticle.h`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:70,availability,fault,fault,70,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:198,availability,error,error,198,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:240,availability,down,down,240,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:306,availability,error,error,306,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:752,availability,error,error,752,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1749,availability,error,error,1749,"error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2980,availability,error,error,2980,"lude/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again lat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3004,availability,operat,operator,3004,"h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3041,availability,operat,operator,3041,"l include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3316,availability,operat,operator,3316,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3867,availability,error,error,3867,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:132,deployability,patch,patches,132,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:531,deployability,patch,patches,531,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:549,deployability,Instal,InstallArea,549,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:661,deployability,patch,patches,661,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:679,deployability,Instal,InstallArea,679,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:924,deployability,patch,patches,924,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:942,deployability,Instal,InstallArea,942,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1120,deployability,patch,patches,1120,"cb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1138,deployability,Instal,InstallArea,1138,"` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/Inst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1258,deployability,patch,patches,1258,"t test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1276,deployability,Instal,InstallArea,1276,"d I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/Inst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1394,deployability,patch,patches,1394," > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1412,deployability,Instal,InstallArea,1412,"from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/Inst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1659,deployability,patch,patches,1659,"tches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1677,deployability,Instal,InstallArea,1677,"allArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1926,deployability,patch,patches,1926,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1944,deployability,Instal,InstallArea,1944,"rea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2122,deployability,patch,patches,2122,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2140,deployability,Instal,InstallArea,2140,"rea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2260,deployability,patch,patches,2260,"s/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2278,deployability,Instal,InstallArea,2278,"rea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2396,deployability,patch,patches,2396,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2414,deployability,Instal,InstallArea,2414,"rea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2758,deployability,patch,patches,2758,"nition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2776,deployability,Instal,InstallArea,2776,"icle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == com",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2888,deployability,patch,patches,2888,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2906,deployability,Instal,InstallArea,2906,"ies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3165,deployability,patch,patches,3165,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3183,deployability,Instal,InstallArea,3183,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3408,deployability,build,build,3408,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3453,deployability,build,build,3453,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3840,deployability,fail,failed,3840,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:70,energy efficiency,fault,fault,70,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:219,energy efficiency,load,loading,219,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3498,energy efficiency,core,core,3498,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:312,integrability,messag,message,312,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:723,integrability,Event,Event,723,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:986,integrability,Event,Event,986,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1182,integrability,Event,Event,1182,"eproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1456,integrability,Event,Event,1456,"2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1551,integrability,Event,Event,1551,"llArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1721,integrability,Event,Event,1721,"vent/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1820,integrability,pub,public,1820,"ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoK",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1988,integrability,Event,Event,1988,"/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: rede",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2184,integrability,Event,Event,2184,"/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/Inst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2458,integrability,Event,Event,2458,"/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2553,integrability,Event,Event,2553,"/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2950,integrability,Event,Event,2950,"ea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3227,integrability,Event,Event,3227,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:312,interoperability,messag,message,312,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:70,performance,fault,fault,70,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:198,performance,error,error,198,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:219,performance,load,loading,219,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:306,performance,error,error,306,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:752,performance,error,error,752,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1027,performance,time,times,1027,"I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1501,performance,time,times,1501,"ern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1749,performance,error,error,1749,"error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2029,performance,time,times,2029,", additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2503,performance,time,times,2503,", additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/met",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2980,performance,error,error,2980,"lude/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again lat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3867,performance,error,error,3867,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:70,reliability,fault,fault,70,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:146,reliability,doe,doesn,146,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3840,reliability,fail,failed,3840,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3901,reliability,pra,pragma,3901,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:70,safety,fault,fault,70,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:132,safety,patch,patches,132,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:198,safety,error,error,198,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:264,safety,test,test,264,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:306,safety,error,error,306,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:531,safety,patch,patches,531,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:661,safety,patch,patches,661,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:752,safety,error,error,752,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:924,safety,patch,patches,924,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1120,safety,patch,patches,1120,"cb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1258,safety,patch,patches,1258,"t test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1394,safety,patch,patches,1394," > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1659,safety,patch,patches,1659,"tches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1749,safety,error,error,1749,"error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1926,safety,patch,patches,1926,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2122,safety,patch,patches,2122,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2260,safety,patch,patches,2260,"s/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2396,safety,patch,patches,2396,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2758,safety,patch,patches,2758,"nition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2888,safety,patch,patches,2888,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2980,safety,error,error,2980,"lude/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again lat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3165,safety,patch,patches,3165,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3867,safety,error,error,3867,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:132,security,patch,patches,132,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:531,security,patch,patches,531,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:661,security,patch,patches,661,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:924,security,patch,patches,924,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1120,security,patch,patches,1120,"cb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1258,security,patch,patches,1258,"t test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1394,security,patch,patches,1394," > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1659,security,patch,patches,1659,"tches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1926,security,patch,patches,1926,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2122,security,patch,patches,2122,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2260,security,patch,patches,2260,"s/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2396,security,patch,patches,2396,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2758,security,patch,patches,2758,"nition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2888,security,patch,patches,2888,"cbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3165,security,patch,patches,3165,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:264,testability,test,test,264,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3736,testability,Assert,Assertion,3736,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:198,usability,error,error,198,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:306,usability,error,error,306,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:436,usability,user,user,436,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:752,usability,error,error,752,". Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. > . > ```. > Processing temp.h... . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1749,usability,error,error,1749,"error: redefinition of 'CLID_ProtoParticle' . > static const CLID CLID_ProtoParticle = 803; . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > ... > ...SKIPPED LINES. > ... > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2663,usability,user,user,2663,"s/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' . > class ProtoParticle final : public KeyedObject<int> { . > ^ . > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2980,usability,error,error,2980,"lude/Event/ProtoParticle.h' included multiple times, additional include site here . > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again lat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3867,usability,error,error,3867,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4074,usability,command,command,4074,"/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple . > times, additional include site here . > #include ""Event/ProtoParticle.h"" . > ^ . > In file included from input_line_8:1: . > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: . > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here . > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { . > ^ . > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg. > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. . > ```. > . > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later! > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:15,deployability,updat,update,15,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:163,reliability,pra,pragma,163,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:15,safety,updat,update,15,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:92,safety,test,test,92,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:333,safety,test,test,333,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:15,security,updat,update,15,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:92,testability,test,test,92,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:333,testability,test,test,333,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:278,usability,interact,interactive,278,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:570,usability,user,user-attachments,570,"I have a small update, but no good news. When trying to reproduce the segfault with a `root test.C` I get stuck in problems that seem related to bad handling of `#pragma once` and include guards. If I solve the include guards problems then I still get the segfault both via the interactive `#include <LoKi/ParticleCuts.h>` and `root test.C`. I prepared small ""reproducer"" that should work on any RHEL9 equivalent machine with CVMFS and the [HEP_OSlibs](https://gitlab.cern.ch/linuxsupport/rpms/HEP_OSlibs) meta-rpm. . See attached [root-15511.tar.gz](https://github.com/user-attachments/files/15805345/root-15511.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:471,availability,error,error,471,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:180,deployability,releas,releases,180,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:320,deployability,releas,releases,320,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1200,deployability,depend,depends,1200,"-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1438,deployability,releas,releases,1438,"=652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1729,deployability,releas,releases,1729,"---------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1969,deployability,releas,releases,1969,"ds/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2260,deployability,releas,releases,2260,"::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Modul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2500,deployability,releas,releases,2500," ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/relea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2718,deployability,releas,releases,2718,"ib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2846,deployability,Modul,Module,2846,"ction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2931,deployability,releas,releases,2931,") (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3085,deployability,Modul,Module,3085,"ock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3126,deployability,releas,releases,3126,"l::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3259,deployability,Modul,Module,3259,"leases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x407",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3300,deployability,releas,releases,3300,"-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x40704B0C: ??? ==652727== by 0x40700094: ??? =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3499,deployability,releas,releases,3499,"eases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x40704B0C: ??? ==652727== by 0x40700094: ??? ==652727== by 0x406FFF1F: ??? ==652727== by 0x8DEE881: (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3683,deployability,releas,releases,3683,"in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x40704B0C: ??? ==652727== by 0x40700094: ??? ==652727== by 0x406FFF1F: ??? ==652727== by 0x8DEE881: (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E65F2: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4098,deployability,releas,releases,4098,"fs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x40704B0C: ??? ==652727== by 0x40700094: ??? ==652727== by 0x406FFF1F: ??? ==652727== by 0x8DEE881: (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E65F2: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeType",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4476,deployability,releas,releases,4476,"cb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x40704B0C: ??? ==652727== by 0x40700094: ??? ==652727== by 0x406FFF1F: ??? ==652727== by 0x8DEE881: (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E65F2: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4675,deployability,releas,releases,4675,"lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x40704B0C: ??? ==652727== by 0x40700094: ??? ==652727== by 0x406FFF1F: ??? ==652727== by 0x8DEE881: (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E65F2: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:4859,deployability,releas,releases,4859,", cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x40704B0C: ??? ==652727== by 0x40700094: ??? ==652727== by 0x406FFF1F: ??? ==652727== by 0x8DEE881: (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E65F2: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:5274,deployability,releas,releases,5274,"727== by 0x40700094: ??? ==652727== by 0x406FFF1F: ??? ==652727== by 0x8DEE881: (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E65F2: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:5483,deployability,releas,releases,5483,"OT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E65F2: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:5793,deployability,releas,releases,5793,"nsaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ---------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6076,deployability,releas,releases,6076," llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. |",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6308,deployability,releas,releases,6308,"-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. =================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6420,deployability,stack,stack,6420,":CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6707,deployability,stack,stack,6707,"ilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7422,deployability,stack,stack,7422,"'d, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSeg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7737,deployability,releas,releases,7737,":. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7825,deployability,build,build,7825,"--------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7870,deployability,build,build,7870,"ps://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7989,deployability,Stack,StackTrace,7989,"03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8020,deployability,build,build,8020,"eads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/Termina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8065,deployability,build,build,8065," 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8251,deployability,build,build,8251,">. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/texti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8296,deployability,build,build,8296,"=======================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal ha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8449,deployability,build,build,8449,"==========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8494,deployability,build,build,8494,"=============. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8623,deployability,build,build,8623,".6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8668,deployability,build,build,8668,"c (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8897,deployability,build,build,8897,"c/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8942,deployability,build,build,8942,"2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9140,deployability,build,build,9140,"1. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9185,deployability,build,build,9185,"atchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9495,deployability,patch,patches,9495,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9513,deployability,Instal,InstallArea,9513,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9700,deployability,patch,patches,9700,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9718,deployability,Instal,InstallArea,9718,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9836,deployability,modul,module-,9836,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9998,deployability,releas,releases,9998,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:10201,deployability,releas,releases,10201,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2816,energy efficiency,optim,optimizeGlobalCtorsList,2816,"valuator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::Poi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:5673,energy efficiency,alloc,allocator,5673,"eases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:5975,energy efficiency,alloc,allocator,5975,"mitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F9D97: cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77643DB: cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7915,energy efficiency,core,core,7915,"Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/worksp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8110,energy efficiency,core,core,8110,"cense', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8341,energy efficiency,core,core,8341,"===========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoK",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8539,energy efficiency,core,core,8539,"4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8713,energy efficiency,core,core,8713,"/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Ph",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8987,energy efficiency,core,core,8987,"StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9230,energy efficiency,core,core,9230,"tionViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1200,integrability,depend,depends,1200,"-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6600,integrability,wrap,wrapper,6600,"ternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6600,interoperability,wrapper,wrapper,6600,"ternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1200,modifiability,depend,depends,1200,"-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2846,modifiability,Modul,Module,2846,"ction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3085,modifiability,Modul,Module,3085,"ock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3259,modifiability,Modul,Module,3259,"leases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x407",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9836,modifiability,modul,module-,9836,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:464,performance,memor,memory,464,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:471,performance,error,error,471,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2816,performance,optimiz,optimizeGlobalCtorsList,2816,"valuator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::Poi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:471,safety,error,error,471,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:477,safety,detect,detector,477,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1200,safety,depend,depends,1200,"-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2846,safety,Modul,Module,2846,"ction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3085,safety,Modul,Module,3085,"ock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3259,safety,Modul,Module,3259,"leases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94CD322: EvaluateStaticConstructor(llvm::Function*, llvm::DataLayout const&, llvm::TargetLibraryInfo*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9D2A88: llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x94D4887: (anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xB392769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77E6523: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7763697: cling::Interpreter::executeTransaction(cling::Transaction&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x77F6B49: cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== . ==652727== Invalid read of size 8. ==652727== at 0x40703A7E: ??? ==652727== by 0x407",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9495,safety,patch,patches,9495,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9700,safety,patch,patches,9700,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9836,safety,modul,module-,9836,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:477,security,detect,detector,477,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:865,security,Team,Team,865,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6917,security,Team,Team,6917,"_cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8882,security,sign,signum,8882,"ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9125,security,sign,signum,9125,"xSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9290,security,sign,signal,9290,"ne/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::Fu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9495,security,patch,patches,9495,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9700,security,patch,patches,9700,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402. #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602. #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114. #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880. #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (). #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so. ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1200,testability,depend,depends,1200,"-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:6713,testability,trace,trace,6713,"nOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7428,testability,trace,trace,7428,"lloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007ff1c1e5e16c in TUnixSystem::DispatchSignals (this=0xf5b500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631. #5 0x00007ff1c1e560e0 in SigHandler (sig=kSigSegmentat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:464,usability,memor,memory,464,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:471,usability,error,error,471,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:652,usability,Command,Command,652,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1035,usability,help,help,1035,"l report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:. ```. $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>"". ==652727== Memcheck, a memory error detector. ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al. ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info. ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>. ==652727== . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s). ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7087,usability,help,help,7087,"/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so). ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd. ==652727== . *** Break *** segmentation violation. ```. (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:. ```. $ CLING_DEBUG=1 root.exe . ------------------------------------------------------------------. | Welcome to ROOT 6.30/04 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |. | From heads/master@tags/v6-30-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6. #1 0x00007ff1c124b243 in do_system () from /lib64/libc.so.6. #2 0x00007ff1c1e59eb2 in TUnixSystem::Exec (this=0xf5b500, shellcmd=0x880a600 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 576550 1>&2"") at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007ff1c1e5a753 in TUnixSystem::StackTrace (this=0xf5b500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1771,availability,consist,consistent,1771," %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2174,deployability,version,versions,2174," %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2174,integrability,version,versions,2174," %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:75,modifiability,variab,variables,75,"Okay, never mind, this is a Cling issue: If there are more than 16 `const` variables with non-trivial constructors, their execution order may be scrambled:. ```c++. extern ""C"" int printf(const char*, ...);. struct A {. int val;. A(int v) : val(v) {. printf(""A(%d), this = %p\n"", val, this);. }. ~A() {. printf(""~A(%d), this = %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2174,modifiability,version,versions,2174," %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2292,modifiability,variab,variables,2292," %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2225,testability,understand,understand,2225," %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1771,usability,consist,consistent,1771," %p\n"", val, this);. }. };. const A a1(1);. const A a2(2);. const A a3(3);. const A a4(4);. const A a5(5);. const A a6(6);. const A a7(7);. const A a8(8);. const A a9(9);. const A a10(10);. const A a11(11);. const A a12(12);. const A a13(13);. const A a14(14);. const A a15(15);. const A a16(16);. const A a17(17);. ```. This should print from 1 to 17, but for example `master` gives:. ```. A(9), this = 0x7f9f2174e088. A(17), this = 0x7f9f2174e108. A(16), this = 0x7f9f2174e0f8. A(15), this = 0x7f9f2174e0e8. A(14), this = 0x7f9f2174e0d8. A(13), this = 0x7f9f2174e0c8. A(12), this = 0x7f9f2174e0b8. A(11), this = 0x7f9f2174e0a8. A(10), this = 0x7f9f2174e098. A(1), this = 0x7f9f2174e008. A(8), this = 0x7f9f2174e078. A(7), this = 0x7f9f2174e068. A(6), this = 0x7f9f2174e058. A(5), this = 0x7f9f2174e048. A(4), this = 0x7f9f2174e038. A(3), this = 0x7f9f2174e028. A(2), this = 0x7f9f2174e018. ~A(2), this = 0x7f9f2174e018. ~A(3), this = 0x7f9f2174e028. ~A(4), this = 0x7f9f2174e038. ~A(5), this = 0x7f9f2174e048. ~A(6), this = 0x7f9f2174e058. ~A(7), this = 0x7f9f2174e068. ~A(8), this = 0x7f9f2174e078. ~A(1), this = 0x7f9f2174e008. ~A(10), this = 0x7f9f2174e098. ~A(11), this = 0x7f9f2174e0a8. ~A(12), this = 0x7f9f2174e0b8. ~A(13), this = 0x7f9f2174e0c8. ~A(14), this = 0x7f9f2174e0d8. ~A(15), this = 0x7f9f2174e0e8. ~A(16), this = 0x7f9f2174e0f8. ~A(17), this = 0x7f9f2174e108. ~A(9), this = 0x7f9f2174e088. ```. (at least destruction order is consistent). For the LHCb headers, this causes problems because some constructor calls reference other global `const` objects and the scrambled order means they are not constructed yet. This seems to be caused by https://github.com/root-project/root/pull/13614, which was meant to fix https://github.com/root-project/root/issues/13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:135,deployability,version,versions,135,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:677,deployability,version,versions,677,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:135,integrability,version,versions,135,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:547,integrability,sub,submitted,547,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:677,integrability,version,versions,677,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:135,modifiability,version,versions,135,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:253,modifiability,variab,variables,253,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:441,modifiability,variab,variables,441,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:677,modifiability,version,versions,677,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:186,testability,understand,understand,186,"> This seems to be caused by #13614, which was meant to fix #13429, and therefore affects v6.28/08, where it was backported, and later versions (all v6.30, v6.32, `master`). I'll try to understand why the order starts changing with more than 16 `const` variables and work on a fix next. It turns out there should be a `llvm::stable_sort` instead of `llvm::sort` to preserve order between constructors with the same priority. With 16 `const` variables, we are lucky - maybe because it switches to a different sorting algorithm below a threshold? I submitted an upstream LLVM fix: https://github.com/llvm/llvm-project/pull/95532 and will work on applying it to all affected ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:24,deployability,releas,release,24,"As requested by LHCb, a release for the 6.30 branch including the fix was provided today: https://root-forum.cern.ch/t/root-6-30-08-is-out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/pull/15513:283,testability,understand,understand,283,"Thank you for the initiative! You're also replacing `__MAKECINT__` with `__MAKECLING__`, but I'm not sure we should do this. In the guide, it reads that the `__MAKECINT__` macro is deprecated:. documentation/users-guide/Cling.md. Maybe @pcanal can confirm, but from that paragraph I understand that the replacement for `__MAKECING__` in `__ROOTCLING__`, and not `__MAKECLING__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15513
https://github.com/root-project/root/pull/15513:132,usability,guid,guide,132,"Thank you for the initiative! You're also replacing `__MAKECINT__` with `__MAKECLING__`, but I'm not sure we should do this. In the guide, it reads that the `__MAKECINT__` macro is deprecated:. documentation/users-guide/Cling.md. Maybe @pcanal can confirm, but from that paragraph I understand that the replacement for `__MAKECING__` in `__ROOTCLING__`, and not `__MAKECLING__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15513
https://github.com/root-project/root/pull/15513:194,usability,document,documentation,194,"Thank you for the initiative! You're also replacing `__MAKECINT__` with `__MAKECLING__`, but I'm not sure we should do this. In the guide, it reads that the `__MAKECINT__` macro is deprecated:. documentation/users-guide/Cling.md. Maybe @pcanal can confirm, but from that paragraph I understand that the replacement for `__MAKECING__` in `__ROOTCLING__`, and not `__MAKECLING__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15513
https://github.com/root-project/root/pull/15513:208,usability,user,users-guide,208,"Thank you for the initiative! You're also replacing `__MAKECINT__` with `__MAKECLING__`, but I'm not sure we should do this. In the guide, it reads that the `__MAKECINT__` macro is deprecated:. documentation/users-guide/Cling.md. Maybe @pcanal can confirm, but from that paragraph I understand that the replacement for `__MAKECING__` in `__ROOTCLING__`, and not `__MAKECLING__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15513
https://github.com/root-project/root/pull/15513:248,usability,confirm,confirm,248,"Thank you for the initiative! You're also replacing `__MAKECINT__` with `__MAKECLING__`, but I'm not sure we should do this. In the guide, it reads that the `__MAKECINT__` macro is deprecated:. documentation/users-guide/Cling.md. Maybe @pcanal can confirm, but from that paragraph I understand that the replacement for `__MAKECING__` in `__ROOTCLING__`, and not `__MAKECLING__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15513
https://github.com/root-project/root/issues/15517:387,deployability,version,version,387,"Weird, it seems ok. I do not see this problem on my mac:. ```. % root --web=off. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 02 2024, 08:25:19 |. | From heads/save-C-fix@v6-31-01-1828-g0d282dd4a6 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try .help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TBrowser b. (TBrowser &) Name: Browser Title: ROOT Object Browser. root [1] . ```. and the icon folder is the same as yours:. ```. % cd $ROOTSYS/icons. couet@oliviers-mbp icons % ls arrow_*.xpm. arrow_down.xpm		arrow_right.xpm		arrow_up.xpm. arrow_left.xpm		arrow_right2.xpm. ```. As TBrowser is a GUI class, may be @bellenot might have some idea about these missing icons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:387,integrability,version,version,387,"Weird, it seems ok. I do not see this problem on my mac:. ```. % root --web=off. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 02 2024, 08:25:19 |. | From heads/save-C-fix@v6-31-01-1828-g0d282dd4a6 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try .help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TBrowser b. (TBrowser &) Name: Browser Title: ROOT Object Browser. root [1] . ```. and the icon folder is the same as yours:. ```. % cd $ROOTSYS/icons. couet@oliviers-mbp icons % ls arrow_*.xpm. arrow_down.xpm		arrow_right.xpm		arrow_up.xpm. arrow_left.xpm		arrow_right2.xpm. ```. As TBrowser is a GUI class, may be @bellenot might have some idea about these missing icons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:387,modifiability,version,version,387,"Weird, it seems ok. I do not see this problem on my mac:. ```. % root --web=off. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 02 2024, 08:25:19 |. | From heads/save-C-fix@v6-31-01-1828-g0d282dd4a6 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try .help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TBrowser b. (TBrowser &) Name: Browser Title: ROOT Object Browser. root [1] . ```. and the icon folder is the same as yours:. ```. % cd $ROOTSYS/icons. couet@oliviers-mbp icons % ls arrow_*.xpm. arrow_down.xpm		arrow_right.xpm		arrow_up.xpm. arrow_left.xpm		arrow_right2.xpm. ```. As TBrowser is a GUI class, may be @bellenot might have some idea about these missing icons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:222,security,Team,Team,222,"Weird, it seems ok. I do not see this problem on my mac:. ```. % root --web=off. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 02 2024, 08:25:19 |. | From heads/save-C-fix@v6-31-01-1828-g0d282dd4a6 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try .help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TBrowser b. (TBrowser &) Name: Browser Title: ROOT Object Browser. root [1] . ```. and the icon folder is the same as yours:. ```. % cd $ROOTSYS/icons. couet@oliviers-mbp icons % ls arrow_*.xpm. arrow_down.xpm		arrow_right.xpm		arrow_up.xpm. arrow_left.xpm		arrow_right2.xpm. ```. As TBrowser is a GUI class, may be @bellenot might have some idea about these missing icons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:431,usability,help,help,431,"Weird, it seems ok. I do not see this problem on my mac:. ```. % root --web=off. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 02 2024, 08:25:19 |. | From heads/save-C-fix@v6-31-01-1828-g0d282dd4a6 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try .help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TBrowser b. (TBrowser &) Name: Browser Title: ROOT Object Browser. root [1] . ```. and the icon folder is the same as yours:. ```. % cd $ROOTSYS/icons. couet@oliviers-mbp icons % ls arrow_*.xpm. arrow_down.xpm		arrow_right.xpm		arrow_up.xpm. arrow_left.xpm		arrow_right2.xpm. ```. As TBrowser is a GUI class, may be @bellenot might have some idea about these missing icons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:110,modifiability,pac,packages,110,Maybe related: https://github.com/root-project/root/issues/14247. Maybe removing the systemwide libAfterimage packages helps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:119,usability,help,helps,119,Maybe related: https://github.com/root-project/root/issues/14247. Maybe removing the systemwide libAfterimage packages helps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/pull/15521:36,deployability,automat,automatic,36,"I think the backport tag is for the automatic backports, which I'm not sure if it works already. In any case, you have opened a manual backport PR, so it's not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15521
https://github.com/root-project/root/pull/15521:36,testability,automat,automatic,36,"I think the backport tag is for the automatic backports, which I'm not sure if it works already. In any case, you have opened a manual backport PR, so it's not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15521
https://github.com/root-project/root/pull/15523:51,deployability,build,build,51,"While looking through the files, I noticed that we build exactly `v6.26/16` and not the latest `v6-26-00-patches` - is this intentional?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15523
https://github.com/root-project/root/pull/15523:105,deployability,patch,patches,105,"While looking through the files, I noticed that we build exactly `v6.26/16` and not the latest `v6-26-00-patches` - is this intentional?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15523
https://github.com/root-project/root/pull/15523:105,safety,patch,patches,105,"While looking through the files, I noticed that we build exactly `v6.26/16` and not the latest `v6-26-00-patches` - is this intentional?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15523
https://github.com/root-project/root/pull/15523:105,security,patch,patches,105,"While looking through the files, I noticed that we build exactly `v6.26/16` and not the latest `v6-26-00-patches` - is this intentional?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15523
https://github.com/root-project/root/pull/15527:77,deployability,releas,release,77,"Thanks! I'll take care of backporting this, since it should be fixed for the release. Then packagers don't have to do hacks to avoid the flood of warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15527
https://github.com/root-project/root/pull/15527:91,modifiability,pac,packagers,91,"Thanks! I'll take care of backporting this, since it should be fixed for the release. Then packagers don't have to do hacks to avoid the flood of warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15527
https://github.com/root-project/root/pull/15527:127,safety,avoid,avoid,127,"Thanks! I'll take care of backporting this, since it should be fixed for the release. Then packagers don't have to do hacks to avoid the flood of warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15527
https://github.com/root-project/root/pull/15527:118,security,hack,hacks,118,"Thanks! I'll take care of backporting this, since it should be fixed for the release. Then packagers don't have to do hacks to avoid the flood of warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15527
https://github.com/root-project/root/issues/15534:52,interoperability,specif,specific,52,"I cannot reproduce it on Linux, it could be a macOS specific issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:7,deployability,contain,contains,7,"The PR contains a test that demonstrates that user code can produce empty variants, which the I/O system needs to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:94,performance,I/O,I/O,94,"The PR contains a test that demonstrates that user code can produce empty variants, which the I/O system needs to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:18,safety,test,test,18,"The PR contains a test that demonstrates that user code can produce empty variants, which the I/O system needs to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:18,testability,test,test,18,"The PR contains a test that demonstrates that user code can produce empty variants, which the I/O system needs to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:46,usability,user,user,46,"The PR contains a test that demonstrates that user code can produce empty variants, which the I/O system needs to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:523,energy efficiency,optim,optimization,523,"Several fixes are up in the PR, however there is something strange about `std::variant<std::optional<int>>`. On macOS, this type has a size of 16 (and not 12 as one would expect, with 8 bytes for the int + bool struct of the optional plus 4 bytes for the index member). Moreover, the additional 4 bytes come from padding at the beginning of the variant type. Clang's `dump-record-layouts` gives the following, where I cannot explain why the `__impl` member starts at an offset of 4. Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? ```. *** Dumping AST Record Layout. 0 | class std::variant<class std::optional<int> >. 0 | struct std::__sfinae_ctor_base<true, true> (base) (empty). 0 | struct std::__sfinae_assign_base<true, true> (base) (empty). 4 | class std::__variant_detail::__impl<class std::optional<int> > __impl. 4 | class std::__variant_detail::__copy_assignment<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__move_assignment<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__assignment<struct std::__variant_detail::__traits<class std::optional<int> > > (base). 4 | class std::__variant_detail::__copy_constructor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__move_constructor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__ctor<struct std::__variant_detail::__traits<class std::optional<int> > > (base). 4 | class std::__variant_detail::__dtor<struct std::__va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:586,modifiability,inherit,inheritance,586,"Several fixes are up in the PR, however there is something strange about `std::variant<std::optional<int>>`. On macOS, this type has a size of 16 (and not 12 as one would expect, with 8 bytes for the int + bool struct of the optional plus 4 bytes for the index member). Moreover, the additional 4 bytes come from padding at the beginning of the variant type. Clang's `dump-record-layouts` gives the following, where I cannot explain why the `__impl` member starts at an offset of 4. Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? ```. *** Dumping AST Record Layout. 0 | class std::variant<class std::optional<int> >. 0 | struct std::__sfinae_ctor_base<true, true> (base) (empty). 0 | struct std::__sfinae_assign_base<true, true> (base) (empty). 4 | class std::__variant_detail::__impl<class std::optional<int> > __impl. 4 | class std::__variant_detail::__copy_assignment<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__move_assignment<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__assignment<struct std::__variant_detail::__traits<class std::optional<int> > > (base). 4 | class std::__variant_detail::__copy_constructor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__move_constructor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__ctor<struct std::__variant_detail::__traits<class std::optional<int> > > (base). 4 | class std::__variant_detail::__dtor<struct std::__va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:523,performance,optimiz,optimization,523,"Several fixes are up in the PR, however there is something strange about `std::variant<std::optional<int>>`. On macOS, this type has a size of 16 (and not 12 as one would expect, with 8 bytes for the int + bool struct of the optional plus 4 bytes for the index member). Moreover, the additional 4 bytes come from padding at the beginning of the variant type. Clang's `dump-record-layouts` gives the following, where I cannot explain why the `__impl` member starts at an offset of 4. Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? ```. *** Dumping AST Record Layout. 0 | class std::variant<class std::optional<int> >. 0 | struct std::__sfinae_ctor_base<true, true> (base) (empty). 0 | struct std::__sfinae_assign_base<true, true> (base) (empty). 4 | class std::__variant_detail::__impl<class std::optional<int> > __impl. 4 | class std::__variant_detail::__copy_assignment<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__move_assignment<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__assignment<struct std::__variant_detail::__traits<class std::optional<int> > > (base). 4 | class std::__variant_detail::__copy_constructor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__move_constructor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__ctor<struct std::__variant_detail::__traits<class std::optional<int> > > (base). 4 | class std::__variant_detail::__dtor<struct std::__va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:2946,usability,Command,CommandLineTools,2946,"ass std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__move_constructor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__ctor<struct std::__variant_detail::__traits<class std::optional<int> > > (base). 4 | class std::__variant_detail::__dtor<struct std::__variant_detail::__traits<class std::optional<int> >, std::__variant_detail::_Trait::_TriviallyAvailable> (base). 4 | class std::__variant_detail::__base<std::__variant_detail::_Trait::_TriviallyAvailable, class std::optional<int> > (base). 4 | union std::__variant_detail::__union<std::__variant_detail::_Trait::_TriviallyAvailable, 0, class std::optional<int> > __data. 4 | char __dummy. 4 | struct std::__variant_detail::__alt<0, class std::optional<int> > __head. 4 | class std::optional<int> __value. 4 | struct std::__optional_move_assign_base<int, true> (base). 4 | struct std::__optional_copy_assign_base<int, true> (base). 4 | struct std::__optional_move_base<int, true> (base). 4 | struct std::__optional_copy_base<int, true> (base). 4 | struct std::__optional_storage_base<int, false> (base). 4 | struct std::__optional_destruct_base<int, true> (base). 4 | union std::__optional_destruct_base<int, true>::(anonymous at /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/optional:258:5) . 4 | char __null_state_. 4 | std::__optional_destruct_base<int, true>::value_type __val_. 8 | _Bool __engaged_. 4 | struct std::__sfinae_ctor_base<true, true> (base) (empty). 4 | struct std::__sfinae_assign_base<true, true> (base) (empty). 4 | union std::__variant_detail::__union<std::__variant_detail::_Trait::_TriviallyAvailable, 1> __tail (empty). 12 | std::__variant_detail::__base<std::__variant_detail::_Trait::_TriviallyAvailable, class std::optional<int> >::__index_t __index. | [sizeof=16, dsize=16, align=4,. | nvsize=16, nvalign=4]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:1146,deployability,contain,containers,1146,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:42,energy efficiency,optim,optimization,42,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:434,energy efficiency,optim,optimize,434,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:1419,interoperability,specif,specific,1419,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:105,modifiability,inherit,inheritance,105,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:346,modifiability,inherit,inherit,346,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:1000,modifiability,inherit,inherit,1000,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:42,performance,optimiz,optimization,42,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:434,performance,optimiz,optimize,434,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:991,reliability,doe,does,991,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:1045,reliability,doe,doesn,1045,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:1749,reliability,doe,does,1749,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:601,testability,simpl,simplified,601,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:601,usability,simpl,simplified,601,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`? So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is. ```c++. class Empty {};. class Inner : private Empty {. int i;. };. class Outer1 {. Inner i;. };. class Outer2 : private Empty {. Inner i;. };. static_assert(sizeof(Outer1) == 4);. static_assert(sizeof(Outer2) == 8);. ```. (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:300,availability,sli,slightly,300,"Nice investigation! > ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?). As a slightly larger type `std::variant<std::optional<int>, std::optional<float>>`, I think it does make sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:225,reliability,doe,does,225,"Nice investigation! > ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?). As a slightly larger type `std::variant<std::optional<int>, std::optional<float>>`, I think it does make sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:300,reliability,sli,slightly,300,"Nice investigation! > ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?). As a slightly larger type `std::variant<std::optional<int>, std::optional<float>>`, I think it does make sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:390,reliability,doe,does,390,"Nice investigation! > ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?). As a slightly larger type `std::variant<std::optional<int>, std::optional<float>>`, I think it does make sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/pull/15536:57,deployability,build,build,57,"Except it doesn't work yet, as now also shown by a clean build in the CI; there are some issues left to be fixed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15536
https://github.com/root-project/root/pull/15536:10,reliability,doe,doesn,10,"Except it doesn't work yet, as now also shown by a clean build in the CI; there are some issues left to be fixed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15536
https://github.com/root-project/root/pull/15536:0,safety,Except,Except,0,"Except it doesn't work yet, as now also shown by a clean build in the CI; there are some issues left to be fixed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15536
https://github.com/root-project/root/pull/15536:59,deployability,build,build,59,"> Except it doesn't work yet, as now also shown by a clean build in the CI; there are some issues left to be fixed. Annoying... llvm does not allow people to get away easily :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15536
https://github.com/root-project/root/pull/15536:12,reliability,doe,doesn,12,"> Except it doesn't work yet, as now also shown by a clean build in the CI; there are some issues left to be fixed. Annoying... llvm does not allow people to get away easily :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15536
https://github.com/root-project/root/pull/15536:133,reliability,doe,does,133,"> Except it doesn't work yet, as now also shown by a clean build in the CI; there are some issues left to be fixed. Annoying... llvm does not allow people to get away easily :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15536
https://github.com/root-project/root/pull/15536:2,safety,Except,Except,2,"> Except it doesn't work yet, as now also shown by a clean build in the CI; there are some issues left to be fixed. Annoying... llvm does not allow people to get away easily :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15536
https://github.com/root-project/root/issues/15537:67,availability,error,error,67,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:113,availability,error,error,113,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:67,performance,error,error,67,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:113,performance,error,error,113,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:16,reliability,doe,does,16,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:67,safety,error,error,67,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:113,safety,error,error,113,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:67,usability,error,error,67,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:113,usability,error,error,113,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:30,availability,error,error,30,Upgrading the warning into an error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:0,deployability,Upgrad,Upgrading,0,Upgrading the warning into an error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:0,modifiability,Upgrad,Upgrading,0,Upgrading the warning into an error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:30,performance,error,error,30,Upgrading the warning into an error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:30,safety,error,error,30,Upgrading the warning into an error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:30,usability,error,error,30,Upgrading the warning into an error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/pull/15542:34,deployability,build,build,34,I propose we enable the Ubuntu 24 build together with the PR that fixes it https://github.com/root-project/root/pull/15415,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15542
https://github.com/root-project/root/pull/15543:11,safety,test,test,11,There is a test already in `testHistFactory`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:28,safety,test,testHistFactory,28,There is a test already in `testHistFactory`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:11,testability,test,test,11,There is a test already in `testHistFactory`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:28,testability,test,testHistFactory,28,There is a test already in `testHistFactory`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/issues/15549:89,availability,error,error,89,"I've run cmake ../root in the source once, and it will create some file, cause the cmake error later wherever the building dir is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/issues/15549:114,deployability,build,building,114,"I've run cmake ../root in the source once, and it will create some file, cause the cmake error later wherever the building dir is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/issues/15549:89,performance,error,error,89,"I've run cmake ../root in the source once, and it will create some file, cause the cmake error later wherever the building dir is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/issues/15549:89,safety,error,error,89,"I've run cmake ../root in the source once, and it will create some file, cause the cmake error later wherever the building dir is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/issues/15549:89,usability,error,error,89,"I've run cmake ../root in the source once, and it will create some file, cause the cmake error later wherever the building dir is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/pull/15563:0,reliability,Doe,Doesn,0,Doesn't https://github.com/root-project/cling/issues/430 require a simpler fix by adding libSerialization to the list of linked libraries?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:67,testability,simpl,simpler,67,Doesn't https://github.com/root-project/cling/issues/430 require a simpler fix by adding libSerialization to the list of linked libraries?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:67,usability,simpl,simpler,67,Doesn't https://github.com/root-project/cling/issues/430 require a simpler fix by adding libSerialization to the list of linked libraries?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:27,deployability,build,building,27,"Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:298,deployability,version,version,298,"Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:298,integrability,version,version,298,"Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:82,interoperability,conflict,conflict,82,"Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:202,interoperability,share,shared,202,"Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:298,modifiability,version,version,298,"Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:76,safety,avoid,avoid,76,"Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:29,deployability,build,building,29,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:300,deployability,version,version,300,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:402,deployability,build,building,402,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:300,integrability,version,version,300,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:84,interoperability,conflict,conflict,84,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:204,interoperability,share,shared,204,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:300,modifiability,version,version,300,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:449,modifiability,reu,reuses,449,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:721,modifiability,pac,package,721,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:78,safety,avoid,avoid,78,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:596,usability,user,users,596,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:781,usability,user,users,781,"> Note: We are intentionally building `LLVM` and `Clang` as static library to avoid conflict with other uses of the `LLVM` and `Clang` libraries (i.e. by keeping the usage as internal as possible). Using shared library will require all other usage of those libraries within a process to be using our version of `LLVM` and `Clang`, this has shown to be an impossible requirement. For Guix purposes, I'm building a `llvm-cling` variant of `llvm` that reuses most of its definition but uses the Cling's llvm-project sources instead. `clang-cling-runtime` and `clang-cling` then `cling` are the only users. I suppose if a project wanted to link to both LLVM and Cling (libcling) it'd be a problem, but we don't have any such package at the moment, and it wouldn't be too difficult for users to work within a `guix shell llvm-cling cling cmake` environment, say, to make it possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:221,interoperability,share,shared,221,"> Doesn't [root-project/cling#430](https://github.com/root-project/cling/issues/430) require a simpler fix by adding libSerialization to the list of linked libraries? That wouldn't be sufficient at least for linking to a shared library LLVM.so. When LLVM is built this way (`-DLLVM_BUILD_LLVM_DYLIB=ON`, which is what LLVM recommends over `BUILD_SHARED_LIBS=ON` these days, the many lib*.so of LLVM are all gone and everything is in a single `LLVM.so` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2,reliability,Doe,Doesn,2,"> Doesn't [root-project/cling#430](https://github.com/root-project/cling/issues/430) require a simpler fix by adding libSerialization to the list of linked libraries? That wouldn't be sufficient at least for linking to a shared library LLVM.so. When LLVM is built this way (`-DLLVM_BUILD_LLVM_DYLIB=ON`, which is what LLVM recommends over `BUILD_SHARED_LIBS=ON` these days, the many lib*.so of LLVM are all gone and everything is in a single `LLVM.so` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:95,testability,simpl,simpler,95,"> Doesn't [root-project/cling#430](https://github.com/root-project/cling/issues/430) require a simpler fix by adding libSerialization to the list of linked libraries? That wouldn't be sufficient at least for linking to a shared library LLVM.so. When LLVM is built this way (`-DLLVM_BUILD_LLVM_DYLIB=ON`, which is what LLVM recommends over `BUILD_SHARED_LIBS=ON` these days, the many lib*.so of LLVM are all gone and everything is in a single `LLVM.so` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:95,usability,simpl,simpler,95,"> Doesn't [root-project/cling#430](https://github.com/root-project/cling/issues/430) require a simpler fix by adding libSerialization to the list of linked libraries? That wouldn't be sufficient at least for linking to a shared library LLVM.so. When LLVM is built this way (`-DLLVM_BUILD_LLVM_DYLIB=ON`, which is what LLVM recommends over `BUILD_SHARED_LIBS=ON` these days, the many lib*.so of LLVM are all gone and everything is in a single `LLVM.so` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:57,deployability,continu,continue,57,"> For Guix purposes, ... For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:91,deployability,build,build,91,"> For Guix purposes, ... For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:65,deployability,continu,continue,65,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:99,deployability,build,build,99,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:208,deployability,depend,dependencies,208,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:291,deployability,build,build,291,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:322,deployability,build,build,322,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:208,integrability,depend,dependencies,208,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:140,interoperability,share,shared,140,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:208,modifiability,depend,dependencies,208,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:203,performance,time,time,203,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:180,safety,detect,detecting,180,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:208,safety,depend,dependencies,208,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:180,security,detect,detecting,180,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:208,testability,depend,dependencies,208,"> > For Guix purposes, ... > . > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:161,deployability,manag,managed,161,"> libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to *build*, but it wouldn't *run*, so this PR is still necessary/useful to build Cling using shared libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:210,deployability,build,build,210,"> libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to *build*, but it wouldn't *run*, so this PR is still necessary/useful to build Cling using shared libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:281,deployability,build,build,281,"> libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to *build*, but it wouldn't *run*, so this PR is still necessary/useful to build Cling using shared libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:161,energy efficiency,manag,managed,161,"> libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to *build*, but it wouldn't *run*, so this PR is still necessary/useful to build Cling using shared libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:299,interoperability,share,shared,299,"> libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to *build*, but it wouldn't *run*, so this PR is still necessary/useful to build Cling using shared libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:161,safety,manag,managed,161,"> libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to *build*, but it wouldn't *run*, so this PR is still necessary/useful to build Cling using shared libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:77,deployability,continu,continue,77,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:111,deployability,build,build,111,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:226,deployability,depend,dependencies,226,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:309,deployability,build,build,309,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:340,deployability,build,build,340,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:405,energy efficiency,current,current,405,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:226,integrability,depend,dependencies,226,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:158,interoperability,share,shared,158,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:226,modifiability,depend,dependencies,226,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:221,performance,time,time,221,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:198,safety,detect,detecting,198,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:226,safety,depend,dependencies,226,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:198,security,detect,detecting,198,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:226,testability,depend,dependencies,226,"> > > For Guix purposes, ... > > . > > . > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. > . > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:169,deployability,manag,managed,169,"> > libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. > . > You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to _build_, but it wouldn't _run_, so this PR is still necessary/useful to build Cling using shared libraries. Are you building cling standalone or you are building root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:289,deployability,build,build,289,"> > libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. > . > You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to _build_, but it wouldn't _run_, so this PR is still necessary/useful to build Cling using shared libraries. Are you building cling standalone or you are building root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:333,deployability,build,building,333,"> > libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. > . > You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to _build_, but it wouldn't _run_, so this PR is still necessary/useful to build Cling using shared libraries. Are you building cling standalone or you are building root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:370,deployability,build,building,370,"> > libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. > . > You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to _build_, but it wouldn't _run_, so this PR is still necessary/useful to build Cling using shared libraries. Are you building cling standalone or you are building root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:169,energy efficiency,manag,managed,169,"> > libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. > . > You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to _build_, but it wouldn't _run_, so this PR is still necessary/useful to build Cling using shared libraries. Are you building cling standalone or you are building root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:307,interoperability,share,shared,307,"> > libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. > . > You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to _build_, but it wouldn't _run_, so this PR is still necessary/useful to build Cling using shared libraries. Are you building cling standalone or you are building root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:169,safety,manag,managed,169,"> > libclangSerialization is not part of llvm but clang and won’t be part of llvm.so. > . > You're right, I answered too quickly. But rereading my original report I had managed to add link directives and get cling to _build_, but it wouldn't _run_, so this PR is still necessary/useful to build Cling using shared libraries. Are you building cling standalone or you are building root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:54,deployability,build,building,54,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:282,deployability,contain,contains,282,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:366,deployability,version,versioning,366,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:424,deployability,build,building,424,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:645,deployability,depend,dependencies,645,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:690,deployability,depend,dependent,690,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:246,energy efficiency,load,loads,246,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:366,integrability,version,versioning,366,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:645,integrability,depend,dependencies,645,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:690,integrability,depend,dependent,690,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:122,interoperability,share,shared,122,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:438,interoperability,share,shared,438,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:477,interoperability,share,shared,477,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:366,modifiability,version,versioning,366,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:645,modifiability,depend,dependencies,645,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:690,modifiability,depend,dependent,690,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:246,performance,load,loads,246,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:645,safety,depend,dependencies,645,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:690,safety,depend,dependent,690,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:645,testability,depend,dependencies,645,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:690,testability,depend,dependent,690,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:10,deployability,build,building,10,> Are you building cling standalone or you are building root? Standalone.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:47,deployability,build,building,47,> Are you building cling standalone or you are building root? Standalone.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5717,availability,mainten,maintenance,5717," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:151,deployability,version,version,151,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:175,deployability,releas,release,175,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:362,deployability,build,build,362,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:414,deployability,version,version,414,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:623,deployability,version,version,623,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:675,deployability,version,version,675,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:763,deployability,patch,patches,763,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:779,deployability,patch,patches,779,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:820,deployability,patch,patch,820,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:950,deployability,version,version,950,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:967,deployability,version,version,967,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1246,deployability,instal,install,1246,"ent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (ori",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1569,deployability,version,version,1569,"vm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1586,deployability,version,version,1586,"mmit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1859,deployability,instal,install,1859," (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2222,deployability,version,version,2222,"rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-vers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2370,deployability,version,version,2370,"output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2414,deployability,version,version,2414,"ts (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2504,deployability,Patch,Patch,2504,"ase clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2588,deployability,patch,patches,2588,"n llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2604,deployability,patch,patches,2604,"(source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2638,deployability,patch,patch,2638,"g)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2651,deployability,build,build-system,2651," (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of what",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2670,deployability,build,build-system,2670,"d-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2706,deployability,build,build-type,2706,"). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerInclude",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2718,deployability,Releas,Release,2718,"es phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2737,deployability,build,build,2737,"rd-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2793,deployability,fail,fail,2793,"ck 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2925,deployability,build,build-inputs,2925," 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2977,deployability,modul,module,2977,"file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3120,deployability,build,build-inputs,3120,"ace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3222,deployability,version,version,3222,"ion ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3263,deployability,VERSION,VERSION,3263,"fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-pack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3298,deployability,VERSION,VERSION,3298,"https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3346,deployability,version,version,3346," (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3380,deployability,patch,patch-paths,3380,"le-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3619,deployability,build,build,3619,"-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3929,deployability,fail,fails,3929,"nputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4099,deployability,log,logic,4099,"earch-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4348,deployability,version,version,4348,"n))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4803,deployability,instal,install,4803,"in/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5564,deployability,build,building,5564," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:6092,deployability,build,build,6092," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1288,energy efficiency,reduc,reduces,1288,"nGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-referen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1901,energy efficiency,reduc,reduces,1901,"inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4845,energy efficiency,reduc,reduces,4845,"lerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should so",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5611,energy efficiency,reduc,reduce,5611," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5710,energy efficiency,reduc,reduce,5710," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:151,integrability,version,version,151,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:414,integrability,version,version,414,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:623,integrability,version,version,623,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:675,integrability,version,version,675,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:950,integrability,version,version,950,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:967,integrability,version,version,967,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1040,integrability,sub,substitute-keyword-arguments,1040,"x package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1569,integrability,version,version,1569,"vm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1586,integrability,version,version,1586,"mmit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1659,integrability,sub,substitute-keyword-arguments,1659,""" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2181,integrability,pub,public,2181,"ge-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2222,integrability,version,version,2222,"rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-vers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2370,integrability,version,version,2370,"output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2414,integrability,version,version,2414,"ts (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2510,integrability,sub,submitted,2510,"g-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2844,integrability,configur,configure-flags,2844,"after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's Compiler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3222,integrability,version,version,3222,"ion ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3263,integrability,VERSION,VERSION,3263,"fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-pack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3298,integrability,VERSION,VERSION,3298,"https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3346,integrability,version,version,3346," (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3438,integrability,sub,substitute,3438,"""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4348,integrability,version,version,4348,"n))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4532,integrability,sub,substitute,4532,"he default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4692,integrability,sub,substitute,4692,"ompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5173,integrability,complian,compliant,5173," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1115,interoperability,standard,standard-phases,1115,"ling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1734,interoperability,standard,standard-phases,1734,"65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2623,interoperability,share,shared-library,2623,"e llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3181,interoperability,standard,standard-phases,3181,"ling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3325,interoperability,format,format,3325,"oject/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (str",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3738,interoperability,format,format,3738,"d as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5164,interoperability,standard,standard,5164," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5543,interoperability,distribut,distribution,5543," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5578,interoperability,share,shared,5578," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:56,modifiability,pac,package,56,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:151,modifiability,version,version,151,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:370,modifiability,pac,package,370,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:378,modifiability,inherit,inherit,378,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:414,modifiability,version,version,414,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:460,modifiability,inherit,inherit,460,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:469,modifiability,pac,package-source,469,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:623,modifiability,version,version,623,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:675,modifiability,version,version,675,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:897,modifiability,pac,package,897,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:905,modifiability,inherit,inherit,905,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:950,modifiability,version,version,950,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:959,modifiability,pac,package-version,959,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:998,modifiability,pac,package-source,998,"ndalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1070,modifiability,pac,package-arguments,1070," Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1422,modifiability,pac,package-inputs,1422,"40318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1524,modifiability,pac,package,1524,"nce. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1532,modifiability,inherit,inherit,1532,"l ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1569,modifiability,version,version,1569,"vm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1578,modifiability,pac,package-version,1578," (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1617,modifiability,pac,package-source,1617,"ersion)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1689,modifiability,pac,package-arguments,1689,"se32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2059,modifiability,pac,package-propagated-inputs,2059,"ckage-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-app",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2196,modifiability,pac,package,2196,"ambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2222,modifiability,version,version,2222,"rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-vers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2370,modifiability,version,version,2370,"output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2414,modifiability,version,version,2414,"ts (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2844,modifiability,configur,configure-flags,2844,"after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's Compiler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2977,modifiability,modul,module,2977,"file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3222,modifiability,version,version,3222,"ion ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3263,modifiability,VERSION,VERSION,3263,"fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-pack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3298,modifiability,VERSION,VERSION,3298,"https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3346,modifiability,version,version,3346," (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4263,modifiability,pac,package-input,4263,"""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4340,modifiability,pac,package-version,4340,"rsion))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5635,modifiability,inherit,inherit,5635," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5663,modifiability,pac,package,5663," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5825,modifiability,pac,package,5825," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5618,performance,disk,disk,5618," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2793,reliability,fail,fail,2793,"ck 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3929,reliability,fail,fails,3929,"nputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5717,reliability,mainten,maintenance,5717," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:763,safety,patch,patches,763,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:779,safety,patch,patches,779,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:820,safety,patch,patch,820,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1399,safety,input,inputs,1399,"m-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1414,safety,input,inputs,1414,"sion ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name ver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1430,safety,input,inputs,1430,"8-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2035,safety,input,inputs,2035," (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2051,safety,input,inputs,2051,"word-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell execu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2078,safety,input,inputs,2078,"uments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2504,safety,Patch,Patch,2504,"ase clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2588,safety,patch,patches,2588,"n llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2604,safety,patch,patches,2604,"(source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2638,safety,patch,patch,2638,"g)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2766,safety,test,tests,2766,"#$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludeP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2787,safety,test,tests,2787,"'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-inp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2815,safety,test,test-target,2815,"bda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2913,safety,input,input-file,2913,"by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2931,safety,input,inputs,2931,"0 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2977,safety,modul,module,2977,"file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3108,safety,input,input-file,3108,"cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3126,safety,input,inputs,3126," ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3380,safety,patch,patch-paths,3380,"le-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3409,safety,input,inputs,3409,"e version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3787,safety,input,input-file,3787," fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3798,safety,input,inputs,3798,"t of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4099,safety,log,logic,4099,"earch-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4271,safety,input,input,4271,"(call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4450,safety,test,tests,4450,"b/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4705,safety,test,test,4705,"ludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which shou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4964,safety,input,inputs,4964,"ve to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4999,safety,input,inputs,4999,"an. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5173,safety,compl,compliant,5173," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:763,security,patch,patches,763,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:779,security,patch,patches,779,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:820,security,patch,patch,820,"> Standalone. If I may elaborate, this is what the Guix package definitions for Cling look like:. ```scheme. (define llvm-cling. ;; To determine which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1136,security,modif,modify-phases,1136,"e which version of LLVM a given release of Cling should use,. ;; consult the. ;; https://raw.githubusercontent.com/root-project/cling/master/LastKnownGoodLLVMSVNRevision.txt. ;; file. (let ((base llvm-15)) ;for a DYLIB build. (package/inherit base. (name ""llvm-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1407,security,modif,modify-inputs,1407,"version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1755,security,modif,modify-phases,1755,"(patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2044,security,modif,modify-inputs,2044,"keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2504,security,Patch,Patch,2504,"ase clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2588,security,patch,patches,2588,"n llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2604,security,patch,patches,2604,"(source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2638,security,patch,patch,2638,"g)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2844,security,configur,configure-flags,2844,"after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's Compiler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3166,security,modif,modify-phases,3166,"(define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3380,security,patch,patch-paths,3380,"le-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4099,security,log,logic,4099,"earch-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5173,security,compl,compliant,5173," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:6041,security,control,control,6041," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:6054,security,sandbox,sandbox,6054," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2766,testability,test,tests,2766,"#$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludeP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2787,testability,test,tests,2787,"'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-inp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2815,testability,test,test-target,2815,"bda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4099,testability,log,logic,4099,"earch-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4450,testability,test,tests,4450,"b/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4705,testability,test,test,4705,"ludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which shou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:6041,testability,control,control,6041," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1399,usability,input,inputs,1399,"m-cling""). (version ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1414,usability,input,inputs,1414,"sion ""13-20240318-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name ver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1430,usability,input,inputs,1430,"8-01""). (source. (origin. (inherit (package-source base)). (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/llvm-project""). (commit (string-append ""cling-llvm"" version)))). (file-name (git-file-name ""llvm-cling"" version)). (sha256. (base32. ""1zh6yp8px9hla7v9i67a6anbph140f8ixxbsz65aj7fizksjs1h3"")). (patches (search-patches ""clang-cling-13-libc-search-path.patch""))))))). (define clang-cling-runtime. (let ((base clang-runtime-13)). (package/inherit base. (name ""clang-cling-runtime""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2035,usability,input,inputs,2035," (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2051,usability,input,inputs,2051,"word-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell execu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2078,usability,input,inputs,2078,"uments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""compiler-rt""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 22 MiB to 4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (inputs (modify-inputs (package-inputs base). (replace ""llvm"" llvm-cling)))))). (define clang-cling. (let ((base clang-13)). (package/inherit base. (name ""clang-cling""). (version (package-version llvm-cling)). (source (package-source llvm-cling)). (arguments. (substitute-keyword-arguments (package-arguments base). ((#:phases phases '%standard-phases). #~(modify-phases #$phases. (add-after 'unpack 'change-directory. (lambda _. (chdir ""clang""))). (add-after 'install 'delete-static-libraries. ;; This reduces the size by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2913,usability,input,input-file,2913,"by half, from 220 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:2931,usability,input,inputs,2931,"0 MiB to 112 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$"")))))))). (propagated-inputs. (modify-inputs (package-propagated-inputs base). (replace ""llvm"" llvm-cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3108,usability,input,input-file,3108,"cling). (replace ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3126,usability,input,inputs,3126," ""clang-runtime"" clang-cling-runtime)))))). (define-public cling. (package. (name ""cling""). (version ""1.0""). (source (origin. (method git-fetch). (uri (git-reference. (url ""https://github.com/root-project/cling""). (commit (string-append ""v"" version)))). (file-name (git-file-name name version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3409,usability,input,inputs,3409,"e version)). (sha256. (base32. ""17n66wf5yg1xjc94d6yb8g2gydjz0b8cj4a2pn6xrygdvhh09vv1"")). ;; Patch submitted upstream here:. ;; https://github.com/root-project/cling/pull/433. (patches (search-patches ""cling-use-shared-library.patch"")))). (build-system cmake-build-system). (arguments. (list. #:build-type ""Release"" ;keep the build as lean as possible. #:tests? #f ;FIXME: 78 tests fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3787,usability,input,input-file,3787," fail (out of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:3798,usability,input,inputs,3798,"t of ~200). #:test-target ""check-cling"". #:configure-flags. #~(list (string-append ""-DCLING_CXX_PATH="". (search-input-file %build-inputs ""bin/g++"")). ;; XXX: The AddLLVM.cmake module expects LLVM_EXTERNAL_LIT to. ;; be a Python script, not a shell executable. (string-append ""-DLLVM_EXTERNAL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4086,usability,shortcut,shortcut,4086,"AL_LIT="". (search-input-file %build-inputs ""bin/.lit-real""))). #:phases. #~(modify-phases %standard-phases. (add-after 'unpack 'set-version. (lambda _. (make-file-writable ""VERSION""). (call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4271,usability,input,input,4271,"(call-with-output-file ""VERSION"". (lambda (port). (format port ""~a~%"" #$version))))). (add-after 'unpack 'patch-paths. (lambda* (#:key inputs #:allow-other-keys). (substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4434,usability,command,command,4434,"substitute* ""lib/Interpreter/CIFactory.cpp"". ((""\\bsed\\b""). (which ""sed"")). ;; This ensures that the default C++ library used by Cling is. ;; that of the compiler that was used to build it, rather. ;; than that of whatever g++ happens to be on PATH. ((""ReadCompilerIncludePaths\\(CLING_CXX_RLTV""). (format #f ""ReadCompilerIncludePaths(~s"". (search-input-file inputs ""bin/g++""))). ;; Cling uses libclang's CompilerInvocation::GetResourcesPath. ;; to resolve Clang's library prefix, but this fails on Guix. ;; because it is relative to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'print",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4964,usability,input,inputs,4964,"ve to the output of cling rather than. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:4999,usability,input,inputs,4999,"an. ;; clang (see:. ;; https://github.com/root-project/cling/issues/434). Fully. ;; shortcut the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5089,usability,Interact,Interactive,5089,"the logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5146,usability,interact,interactive,5146," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5378,usability,command,command,5378," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:5801,usability,tool,tools,5801," logic in this method to return the correct. ;; static location. ((""static std::string getResourceDir.*"" all). (string-append all. "" return std::string(\"""". #$(this-package-input ""clang-cling""). ""/lib/clang/"". #$(first. (take (string-split. (package-version clang-cling) #\-). 1)) "".0.0"" ;e.g. 13.0.0. ""\"");""))). ;; Check for the 'lit' command for the tests, not 'lit.py'. ;; (see: https://github.com/root-project/cling/issues/432). (substitute* ""CMakeLists.txt"". ((""lit.py""). ""lit"")))). (add-after 'unpack 'adjust-lit.cfg. ;; See: https://github.com/root-project/cling/issues/435. (lambda _. (substitute* ""test/lit.cfg"". ((""config.llvm_tools_dir \\+ '""). ""config.cling_obj_root + '/bin"")))). (add-after 'install 'delete-static-libraries. ;; This reduces the size from 17 MiB to 5.4 MiB. (lambda _. (for-each delete-file (find-files #$output ""\\.a$""))))))). (native-inputs (list python python-lit)). (inputs (list clang-cling llvm-cling)). (home-page ""https://root.cern/cling/""). (synopsis ""Interactive C++ interpreter""). (description ""Cling is an interactive C++17 standard compliant. interpreter, built on top of LLVM and Clang. Cling can be used as a. read-eval-print loop (REPL) to assist with rapid application development. Here's how to print @samp{\""Hello World!\""} using @command{cling}:. @example. cling '#include <stdio.h>' 'printf(\""Hello World!\\n\"");'. @end example""). (license license:lgpl2.1+))) ;for the combined work. ```. As a distribution (Guix), building as a shared library makes sense to 1. reduce disk size and 2. inherit the base llvm/clang package definitions mostly as-is (which should reduce maintenance). While linking to different LLVM could be a problem, Guix provides the tools to manipulate the package graph, should someone want to link libcling with Mesa or some other projects that links to the stock LLVM, so that it'd instead link with `llvm-cling` rather than `llvm`. Guix and Nix basically give you full control in a sandbox manner of what goes into your build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:428,availability,down,down,428,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:48,deployability,build,building,48,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:314,deployability,integr,integrating,314,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:251,integrability,event,eventually,251,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:314,integrability,integr,integrating,314,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:62,interoperability,share,shared,62,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:101,interoperability,share,shared,101,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:314,interoperability,integr,integrating,314,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:415,interoperability,distribut,distributors,415,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:314,modifiability,integr,integrating,314,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:314,reliability,integr,integrating,314,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:279,safety,reme,remember,279,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:314,security,integr,integrating,314,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:314,testability,integr,integrating,314,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:396,testability,simpl,simplest,396,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:396,usability,simpl,simplest,396,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:409,usability,user,users,409,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:47,modifiability,pac,package,47,We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:72,performance,disk,disk,72,We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:228,integrability,event,eventually,228,You can take a look for more details for example here https://github.com/Axel-Naumann/llvm-mesa-reproducer. CppInterOp is a library that enables incremental compilation for third party clients. It won’t replace cling per se but eventually it will provide everything that clings provides using the clang-repl backend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:367,deployability,integr,integrate,367,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:391,deployability,patch,patches,391,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:367,integrability,integr,integrate,367,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:367,interoperability,integr,integrate,367,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:406,interoperability,share,shared,406,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:455,interoperability,distribut,distributions,455,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:49,modifiability,pac,package,49,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:367,modifiability,integr,integrate,367,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:74,performance,disk,disk,74,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:367,reliability,integr,integrate,367,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:228,safety,review,review,228,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:391,safety,patch,patches,391,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:367,security,integr,integrate,367,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:391,security,patch,patches,391,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:228,testability,review,review,228,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:367,testability,integr,integrate,367,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:288,deployability,depend,dependencies,288,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:459,deployability,integr,integrate,459,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:483,deployability,patch,patches,483,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:641,deployability,patch,patches,641,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:306,energy efficiency,current,current,306,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:288,integrability,depend,dependencies,288,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:459,integrability,integr,integrate,459,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:459,interoperability,integr,integrate,459,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:498,interoperability,share,shared,498,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:547,interoperability,distribut,distributions,547,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:288,modifiability,depend,dependencies,288,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:459,modifiability,integr,integrate,459,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:317,reliability,doe,does,317,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:459,reliability,integr,integrate,459,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:180,safety,review,review,180,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:288,safety,depend,dependencies,288,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:483,safety,patch,patches,483,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:641,safety,patch,patches,641,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:459,security,integr,integrate,459,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:483,security,patch,patches,483,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:641,security,patch,patches,641,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:180,testability,review,review,180,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:288,testability,depend,dependencies,288,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:459,testability,integr,integrate,459,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:38,deployability,build,building,38,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,deployability,integr,integrating,121,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,integrability,integr,integrating,121,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,interoperability,integr,integrating,121,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,modifiability,integr,integrating,121,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,reliability,integr,integrating,121,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1,security,Apt,Apteryks,1,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,security,integr,integrating,121,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,testability,integr,integrating,121,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:29,deployability,build,building,29,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:112,deployability,integr,integrating,112,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:231,deployability,contain,contains,231,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:244,deployability,patch,patched,244,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:522,deployability,build,build,522,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:563,deployability,automat,automatically,563,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:112,integrability,integr,integrating,112,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:112,interoperability,integr,integrating,112,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:361,interoperability,share,shared,361,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:606,interoperability,share,shared,606,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:112,modifiability,integr,integrating,112,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:112,reliability,integr,integrating,112,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:244,safety,patch,patched,244,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:577,safety,detect,detects,577,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:112,security,integr,integrating,112,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:244,security,patch,patched,244,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:577,security,detect,detects,577,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:112,testability,integr,integrating,112,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:563,testability,automat,automatically,563,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm? Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:178,deployability,build,build,178,"I think llvm discourages that setup generally. Can you use `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`? That should be able to carry the right build information to cling, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:204,deployability,build,build,204,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:507,deployability,toolchain,toolchain-,507,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:525,deployability,toolchain,toolchain-,525,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:827,deployability,build,build,827,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:879,deployability,build,build,879,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:937,deployability,build,build,937,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:969,deployability,patch,patched,969,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1029,deployability,depend,dependencies,1029,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1029,integrability,depend,dependencies,1029,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:189,interoperability,share,shared,189,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:283,interoperability,distribut,distributions,283,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:366,modifiability,pac,packaging,366,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:376,modifiability,pac,packages,376,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1029,modifiability,depend,dependencies,1029,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:910,safety,avoid,avoid,910,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:969,safety,patch,patched,969,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1029,safety,depend,dependencies,1029,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:921,security,polic,policy,921,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:969,security,patch,patched,969,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:943,testability,unit,units,943,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1029,testability,depend,dependencies,1029,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:507,usability,tool,toolchain-,507,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:525,usability,tool,toolchain-,525,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:212,deployability,build,build,212,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:515,deployability,toolchain,toolchain-,515,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:533,deployability,toolchain,toolchain-,533,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:882,deployability,build,build,882,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:934,deployability,build,build,934,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:992,deployability,build,build,992,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1024,deployability,patch,patched,1024,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1084,deployability,depend,dependencies,1084,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1419,deployability,manag,manager,1419,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1626,deployability,automat,automatically,1626,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1282,energy efficiency,current,current,1282,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1419,energy efficiency,manag,manager,1419,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1084,integrability,depend,dependencies,1084,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:197,interoperability,share,shared,197,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:291,interoperability,distribut,distributions,291,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:374,modifiability,pac,packaging,374,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:384,modifiability,pac,packages,384,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1084,modifiability,depend,dependencies,1084,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1411,modifiability,pac,package,1411,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1449,performance,time,time,1449,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:965,safety,avoid,avoid,965,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1024,safety,patch,patched,1024,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1084,safety,depend,dependencies,1084,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1353,safety,compl,complicated,1353,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1419,safety,manag,manager,1419,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:976,security,polic,policy,976,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1024,security,patch,patched,1024,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1353,security,compl,complicated,1353,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:998,testability,unit,units,998,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1084,testability,depend,dependencies,1084,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1263,testability,understand,understand,1263,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1626,testability,automat,automatically,1626,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:515,usability,tool,toolchain-,515,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:533,usability,tool,toolchain-,533,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1298,usability,help,help,1298,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1400,usability,help,helps,1400,"> > I think llvm discourages that setup generally. > . > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:155,deployability,automat,automatically,155,"> To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you. Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:298,interoperability,share,shared-mode,298,"> To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you. Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:155,testability,automat,automatically,155,"> To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you. Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:157,deployability,automat,automatically,157,"> > To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you. > . > Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change? Replacing should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:306,interoperability,share,shared-mode,306,"> > To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you. > . > Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change? Replacing should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:157,testability,automat,automatically,157,"> > To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you. > . > Just to make sure, do you mean wholly replacing the llvm-config part (which already exists), or just the newly added `--shared-mode` probing added in this change? Replacing should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:46,deployability,version,version,46,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:116,deployability,patch,patch,116,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:125,deployability,build,build,125,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:46,integrability,version,version,46,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:147,interoperability,share,shared,147,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:46,modifiability,version,version,46,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:116,safety,patch,patch,116,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:116,security,patch,patch,116,"> Replacing should be fine. I've pushed a new version which implements the change suggested. I was able to use this patch to build cling against a shared library LLVM fine, so it seems to work as intended! Thanks for the suggestion, that's indeed cleaner.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:48,deployability,build,build,48,That looks pretty good. Can you confirm you can build and package cling standalone this way?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:58,modifiability,pac,package,58,That looks pretty good. Can you confirm you can build and package cling standalone this way?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:32,usability,confirm,confirm,32,That looks pretty good. Can you confirm you can build and package cling standalone this way?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:50,deployability,build,build,50,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:175,deployability,patch,patch,175,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:213,interoperability,share,shared,213,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:60,modifiability,pac,package,60,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:120,modifiability,pac,package,120,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:175,safety,patch,patch,175,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:175,security,patch,patch,175,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:34,usability,confirm,confirm,34,"> That looks pretty good. Can you confirm you can build and package cling standalone this way? Yes. I built the `cling` package definition shown in this thread using this new patch, against a system provided LLVM shared library (the llvm-project provided by root for cling).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:37,deployability,patch,patch,37,"@Apteryks thank you for writing this patch. And, thanks @vgvassilev for accepting it. FWIW, it's more than just ""trading disk space for correctness"". There are quite a few scenarios where having split builds is beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:201,deployability,build,builds,201,"@Apteryks thank you for writing this patch. And, thanks @vgvassilev for accepting it. FWIW, it's more than just ""trading disk space for correctness"". There are quite a few scenarios where having split builds is beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:172,modifiability,scenario,scenarios,172,"@Apteryks thank you for writing this patch. And, thanks @vgvassilev for accepting it. FWIW, it's more than just ""trading disk space for correctness"". There are quite a few scenarios where having split builds is beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:121,performance,disk,disk,121,"@Apteryks thank you for writing this patch. And, thanks @vgvassilev for accepting it. FWIW, it's more than just ""trading disk space for correctness"". There are quite a few scenarios where having split builds is beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:37,safety,patch,patch,37,"@Apteryks thank you for writing this patch. And, thanks @vgvassilev for accepting it. FWIW, it's more than just ""trading disk space for correctness"". There are quite a few scenarios where having split builds is beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:1,security,Apt,Apteryks,1,"@Apteryks thank you for writing this patch. And, thanks @vgvassilev for accepting it. FWIW, it's more than just ""trading disk space for correctness"". There are quite a few scenarios where having split builds is beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:37,security,patch,patch,37,"@Apteryks thank you for writing this patch. And, thanks @vgvassilev for accepting it. FWIW, it's more than just ""trading disk space for correctness"". There are quite a few scenarios where having split builds is beneficial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15578:213,availability,failur,failure,213,[alma8](https://github.com/root-project/root/actions/runs/9171637864/job/25216393242?pr=15578) and [mac13](https://github.com/root-project/root/actions/runs/9171637864/job/25216391917?pr=15578) show the mentioned failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:213,deployability,fail,failure,213,[alma8](https://github.com/root-project/root/actions/runs/9171637864/job/25216393242?pr=15578) and [mac13](https://github.com/root-project/root/actions/runs/9171637864/job/25216391917?pr=15578) show the mentioned failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:213,performance,failur,failure,213,[alma8](https://github.com/root-project/root/actions/runs/9171637864/job/25216393242?pr=15578) and [mac13](https://github.com/root-project/root/actions/runs/9171637864/job/25216391917?pr=15578) show the mentioned failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:213,reliability,fail,failure,213,[alma8](https://github.com/root-project/root/actions/runs/9171637864/job/25216393242?pr=15578) and [mac13](https://github.com/root-project/root/actions/runs/9171637864/job/25216391917?pr=15578) show the mentioned failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:44,availability,failur,failure,44,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:14,deployability,contain,contains,14,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:44,deployability,fail,failure,44,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:44,performance,failur,failure,44,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:44,reliability,fail,failure,44,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:39,safety,test,test,39,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:39,testability,test,test,39,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/issues/15579:154,availability,slo,slowdown,154,"[callgrind_generator.zip](https://github.com/root-project/root/files/15387569/callgrind_generator.zip). Attaching callgrind output files showing that the slowdown comes from:. ```. (a) ROOT spends much more time/instructions (roughly a factor 9x) in libCore with ROOT6.30.01. Notably the function TClassEdit::CleanType is now called much more often than before. (b) We also spend more time in libc/libstdc++, but that is probably a consequence of more libCore activity. (c) libCling increased by a factor of 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:207,performance,time,time,207,"[callgrind_generator.zip](https://github.com/root-project/root/files/15387569/callgrind_generator.zip). Attaching callgrind output files showing that the slowdown comes from:. ```. (a) ROOT spends much more time/instructions (roughly a factor 9x) in libCore with ROOT6.30.01. Notably the function TClassEdit::CleanType is now called much more often than before. (b) We also spend more time in libc/libstdc++, but that is probably a consequence of more libCore activity. (c) libCling increased by a factor of 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:385,performance,time,time,385,"[callgrind_generator.zip](https://github.com/root-project/root/files/15387569/callgrind_generator.zip). Attaching callgrind output files showing that the slowdown comes from:. ```. (a) ROOT spends much more time/instructions (roughly a factor 9x) in libCore with ROOT6.30.01. Notably the function TClassEdit::CleanType is now called much more often than before. (b) We also spend more time in libc/libstdc++, but that is probably a consequence of more libCore activity. (c) libCling increased by a factor of 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:154,reliability,slo,slowdown,154,"[callgrind_generator.zip](https://github.com/root-project/root/files/15387569/callgrind_generator.zip). Attaching callgrind output files showing that the slowdown comes from:. ```. (a) ROOT spends much more time/instructions (roughly a factor 9x) in libCore with ROOT6.30.01. Notably the function TClassEdit::CleanType is now called much more often than before. (b) We also spend more time in libc/libstdc++, but that is probably a consequence of more libCore activity. (c) libCling increased by a factor of 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:477,availability,ERROR,ERROR,477,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:763,availability,ERROR,ERROR,763,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:83,deployability,Version,Version,83,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:175,deployability,releas,release,175,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:201,deployability,Releas,Release,201,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:322,deployability,instal,installed,322,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:608,deployability,instal,installed,608,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:93,energy efficiency,core,core-,93,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:108,energy efficiency,core,core-,108,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:193,energy efficiency,Core,Core,193,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:230,energy efficiency,Core,Core,230,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:417,energy efficiency,core,core,417,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:703,energy efficiency,core,core,703,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:83,integrability,Version,Version,83,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:125,interoperability,Distribut,Distributor,125,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:83,modifiability,Version,Version,83,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:477,performance,ERROR,ERROR,477,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:763,performance,ERROR,ERROR,763,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:477,safety,ERROR,ERROR,477,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:511,safety,test,test,511,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:763,safety,ERROR,ERROR,763,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:511,testability,test,test,511,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:477,usability,ERROR,ERROR,477,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:763,usability,ERROR,ERROR,763,Hi @sawenzel . I encountered a problem reproducing:. ```. $ lsb_release --all. LSB Version:	:core-4.1-amd64:core-4.1-noarch. Distributor ID:	CentOS. Description:	CentOS Linux release 7.9.2009 (Core) . Release:	7.9.2009. Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 . libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1. libgcc_s.so.1 must be installed for pthread_cancel to work. /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF. EOF. init.c(556):ERROR:161: Cannot initialize TCL. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:22,usability,workflow,workflow,22,I spoke too soon. The workflow crashes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:36,availability,error,error,36,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:128,availability,error,errors,128,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:36,performance,error,error,36,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:128,performance,error,errors,128,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:36,safety,error,error,36,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:128,safety,error,errors,128,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:190,security,ssh,ssh,190,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:36,usability,error,error,36,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:50,usability,command,command,50,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:128,usability,error,errors,128,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:2,usability,confirm,confirm,2,I confirm that with the new command the processing starts. Debugging for real now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:28,usability,command,command,28,I confirm that with the new command the processing starts. Debugging for real now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:596,energy efficiency,optim,optimisations,596,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:725,interoperability,Plug,PluginHandler,725,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:853,interoperability,compatib,compatible,853,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:581,safety,avoid,avoid,581,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:40,testability,simpl,simple,40,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:185,testability,context,context,185,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:40,usability,simpl,simple,40,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:2,energy efficiency,Profil,Profiles,2,![Profiles](https://github.com/root-project/root/assets/7850302/5aab0081-1064-497b-bda2-d2df4f058679).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:2,performance,Profil,Profiles,2,![Profiles](https://github.com/root-project/root/assets/7850302/5aab0081-1064-497b-bda2-d2df4f058679).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:2,usability,confirm,confirm,2,I confirm that the issue is fixed via #15816. Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:80,usability,help,help,80,great. I am backporting the change and closing the issue. Thanks a lot for your help in debugging this problem!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15585:221,deployability,build,build,221,"You're using ArchLinux, where ROOT 6.30.06 is part of the official system packages:. https://archlinux.org/packages/extra/x86_64/root/. If you look at the linked packages sources and do exactly as in the `PKGBUILD`, your build will succeed:. https://gitlab.archlinux.org/archlinux/packaging/packages/root. I think getting the right `settings.cmake` is important. Maybe for your particular problem, the `cxxmodules=OFF` part of it is the solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:74,modifiability,pac,packages,74,"You're using ArchLinux, where ROOT 6.30.06 is part of the official system packages:. https://archlinux.org/packages/extra/x86_64/root/. If you look at the linked packages sources and do exactly as in the `PKGBUILD`, your build will succeed:. https://gitlab.archlinux.org/archlinux/packaging/packages/root. I think getting the right `settings.cmake` is important. Maybe for your particular problem, the `cxxmodules=OFF` part of it is the solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:107,modifiability,pac,packages,107,"You're using ArchLinux, where ROOT 6.30.06 is part of the official system packages:. https://archlinux.org/packages/extra/x86_64/root/. If you look at the linked packages sources and do exactly as in the `PKGBUILD`, your build will succeed:. https://gitlab.archlinux.org/archlinux/packaging/packages/root. I think getting the right `settings.cmake` is important. Maybe for your particular problem, the `cxxmodules=OFF` part of it is the solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:162,modifiability,pac,packages,162,"You're using ArchLinux, where ROOT 6.30.06 is part of the official system packages:. https://archlinux.org/packages/extra/x86_64/root/. If you look at the linked packages sources and do exactly as in the `PKGBUILD`, your build will succeed:. https://gitlab.archlinux.org/archlinux/packaging/packages/root. I think getting the right `settings.cmake` is important. Maybe for your particular problem, the `cxxmodules=OFF` part of it is the solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:281,modifiability,pac,packaging,281,"You're using ArchLinux, where ROOT 6.30.06 is part of the official system packages:. https://archlinux.org/packages/extra/x86_64/root/. If you look at the linked packages sources and do exactly as in the `PKGBUILD`, your build will succeed:. https://gitlab.archlinux.org/archlinux/packaging/packages/root. I think getting the right `settings.cmake` is important. Maybe for your particular problem, the `cxxmodules=OFF` part of it is the solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:291,modifiability,pac,packages,291,"You're using ArchLinux, where ROOT 6.30.06 is part of the official system packages:. https://archlinux.org/packages/extra/x86_64/root/. If you look at the linked packages sources and do exactly as in the `PKGBUILD`, your build will succeed:. https://gitlab.archlinux.org/archlinux/packaging/packages/root. I think getting the right `settings.cmake` is important. Maybe for your particular problem, the `cxxmodules=OFF` part of it is the solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:149,deployability,Build,Build,149,"Ah, now that I tried it: I see that it doesn't work, also with the official config! So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine. https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:164,deployability,releas,release,164,"Ah, now that I tried it: I see that it doesn't work, also with the official config! So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine. https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:267,deployability,patch,patches,267,"Ah, now that I tried it: I see that it doesn't work, also with the official config! So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine. https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:279,deployability,Instal,Install,279,"Ah, now that I tried it: I see that it doesn't work, also with the official config! So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine. https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:39,reliability,doe,doesn,39,"Ah, now that I tried it: I see that it doesn't work, also with the official config! So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine. https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:267,safety,patch,patches,267,"Ah, now that I tried it: I see that it doesn't work, also with the official config! So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine. https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:267,security,patch,patches,267,"Ah, now that I tried it: I see that it doesn't work, also with the official config! So you have two easy options until someone fixes this issue:. 1) Build the 6.32 release candidate branch, where it works just fine. https://github.com/root-project/root/tree/v6-32-00-patches. 2) Install and use GCC 13 with `-DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_COMPILER=/usr/bin/g++-13`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:74,deployability,patch,patches,74,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:82,deployability,build,builds,82,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:99,deployability,build,building,99,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:143,deployability,stack,stack,143,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:161,deployability,build,build,161,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:195,deployability,version,versions,195,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:195,integrability,version,versions,195,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:186,modifiability,pac,packaged,186,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:195,modifiability,version,versions,195,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:74,safety,patch,patches,74,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:74,security,patch,patches,74,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:47,usability,feedback,feedback,47,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:154,usability,custom,custom,154,"Dear @guitargeek ,. thanks a lot for your fast feedback! Indeed, v6-32-00-patches builds fine. I'm building root as part of the ALICE software stack with custom build options. Using pre-packaged versions will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:154,security,assess,assess,154,Hi! I didn't get from your answer if the workaround of using 6.32 or an older compiler is unblocking your work. Can you please clarify? That will help to assess the priority of this issue. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:146,usability,help,help,146,Hi! I didn't get from your answer if the workaround of using 6.32 or an older compiler is unblocking your work. Can you please clarify? That will help to assess the priority of this issue. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:76,deployability,manag,manage,76,After adjusting some parts of our software to modifications made in v6.32 I manage to compile the full stack. So for me this is fine for the moment. Thanks again for you support!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:103,deployability,stack,stack,103,After adjusting some parts of our software to modifications made in v6.32 I manage to compile the full stack. So for me this is fine for the moment. Thanks again for you support!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:76,energy efficiency,manag,manage,76,After adjusting some parts of our software to modifications made in v6.32 I manage to compile the full stack. So for me this is fine for the moment. Thanks again for you support!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:76,safety,manag,manage,76,After adjusting some parts of our software to modifications made in v6.32 I manage to compile the full stack. So for me this is fine for the moment. Thanks again for you support!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:46,security,modif,modifications,46,After adjusting some parts of our software to modifications made in v6.32 I manage to compile the full stack. So for me this is fine for the moment. Thanks again for you support!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:170,usability,support,support,170,After adjusting some parts of our software to modifications made in v6.32 I manage to compile the full stack. So for me this is fine for the moment. Thanks again for you support!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:64,deployability,releas,release,64,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:107,deployability,patch,patches,107,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:143,deployability,upgrad,upgrade,143,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:262,deployability,patch,patch,262,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:281,deployability,patch,patches,281,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:423,deployability,releas,release,423,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:143,modifiability,upgrad,upgrade,143,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:48,performance,time,time,48,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:36,safety,test,tested,36,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:107,safety,patch,patches,107,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:262,safety,patch,patch,262,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
