id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/8189:172,safety,avoid,avoid,172,> Can I give this a go? That do you mean? For TStyle the only solution - workaround in TBufferJSON. For other classes one should check if class members can be changed - to avoid any possible confusion in the future.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8189
https://github.com/root-project/root/issues/8189:192,safety,avoid,avoid,192,> > Can I give this a go? > . > That do you mean? > . > For TStyle the only solution - workaround in TBufferJSON. > . > For other classes one should check if class members can be changed - to avoid any possible confusion in the future. Ahh okay.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8189
https://github.com/root-project/root/pull/8190:156,safety,test,test,156,"> thanks, I added the gGL check also. But checking fGLDevice is also potentially useful, right? Well I am not sure. If you have a use case for that did you test it ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8190:156,testability,test,test,156,"> thanks, I added the gGL check also. But checking fGLDevice is also potentially useful, right? Well I am not sure. If you have a use case for that did you test it ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8190:30,reliability,doe,does,30,and testing only gGLManager ? does it fix it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8190:4,safety,test,testing,4,and testing only gGLManager ? does it fix it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8190:4,testability,test,testing,4,and testing only gGLManager ? does it fix it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8190:75,safety,test,testing,75,Ah ok ... fair enough... if it is already done that way elsewhere do it by testing fGLDevice only ... so your first implementation was correct. Sorry for the noise.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8190:75,testability,test,testing,75,Ah ok ... fair enough... if it is already done that way elsewhere do it by testing fGLDevice only ... so your first implementation was correct. Sorry for the noise.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8191:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8191
https://github.com/root-project/root/pull/8191:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8191
https://github.com/root-project/root/pull/8191:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8191
https://github.com/root-project/root/pull/8192:12,deployability,fail,failed,12,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8192
https://github.com/root-project/root/pull/8192:94,performance,time,times,94,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8192
https://github.com/root-project/root/pull/8192:12,reliability,fail,failed,12,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8192
https://github.com/root-project/root/pull/8192:233,usability,feedback,feedback,233,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8192
https://github.com/root-project/root/issues/8194:49,reliability,Doe,Doesn,49,"> Probably, issue #7276 connected with this one. Doesn't seem like it, because issue #7276 got fixed in 6.24 but this issue can still be reproduced in ROOT master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8194:6,usability,confirm,confirm,6,I can confirm more than 1y later that this is not an issue any more on master. Perhaps it can be closed @linev ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8194:97,usability,close,closed,97,I can confirm more than 1y later that this is not an issue any more on master. Perhaps it can be closed @linev ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8196:20,security,sign,signal,20,"Is there any way to signal that this is a bug, as it used to be in JIRA? Or a priority?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:41,availability,consist,consistent,41,"It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. ```. TUnuranContDist(bool copyFunc=false). SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). SetDpdf(const ROOT::Math::IGenFunction& dpdf). ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:52,integrability,interfac,interface,52,"It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. ```. TUnuranContDist(bool copyFunc=false). SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). SetDpdf(const ROOT::Math::IGenFunction& dpdf). ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:52,interoperability,interfac,interface,52,"It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. ```. TUnuranContDist(bool copyFunc=false). SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). SetDpdf(const ROOT::Math::IGenFunction& dpdf). ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:52,modifiability,interfac,interface,52,"It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. ```. TUnuranContDist(bool copyFunc=false). SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). SetDpdf(const ROOT::Math::IGenFunction& dpdf). ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:41,usability,consist,consistent,41,"It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. ```. TUnuranContDist(bool copyFunc=false). SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). SetDpdf(const ROOT::Math::IGenFunction& dpdf). ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:60,deployability,patch,patches,60,@lmoneta is there any progress on this? Will this land 6.24 patches?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:60,safety,patch,patches,60,@lmoneta is there any progress on this? Will this land 6.24 patches?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:60,security,patch,patches,60,@lmoneta is there any progress on this? Will this land 6.24 patches?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:22,usability,progress,progress,22,@lmoneta is there any progress on this? Will this land 6.24 patches?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:57,deployability,releas,release,57,I will try to have a fix for this also for the next 6.24 release,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:43,availability,consist,consistent,43,"> It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. > . > ```. > TUnuranContDist(bool copyFunc=false). > SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). > SetDpdf(const ROOT::Math::IGenFunction& dpdf). > ```. > . > ? The reason pdf is passed as a pointer and not reference is because it is an optional parameter, it is not required. . I can add a SetDpdf() function, as (SetCDF), but I am not sure it is needed a SetPdf. One can use the constructor in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:54,integrability,interfac,interface,54,"> It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. > . > ```. > TUnuranContDist(bool copyFunc=false). > SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). > SetDpdf(const ROOT::Math::IGenFunction& dpdf). > ```. > . > ? The reason pdf is passed as a pointer and not reference is because it is an optional parameter, it is not required. . I can add a SetDpdf() function, as (SetCDF), but I am not sure it is needed a SetPdf. One can use the constructor in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:54,interoperability,interfac,interface,54,"> It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. > . > ```. > TUnuranContDist(bool copyFunc=false). > SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). > SetDpdf(const ROOT::Math::IGenFunction& dpdf). > ```. > . > ? The reason pdf is passed as a pointer and not reference is because it is an optional parameter, it is not required. . I can add a SetDpdf() function, as (SetCDF), but I am not sure it is needed a SetPdf. One can use the constructor in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:54,modifiability,interfac,interface,54,"> It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. > . > ```. > TUnuranContDist(bool copyFunc=false). > SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). > SetDpdf(const ROOT::Math::IGenFunction& dpdf). > ```. > . > ? The reason pdf is passed as a pointer and not reference is because it is an optional parameter, it is not required. . I can add a SetDpdf() function, as (SetCDF), but I am not sure it is needed a SetPdf. One can use the constructor in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:507,modifiability,paramet,parameter,507,"> It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. > . > ```. > TUnuranContDist(bool copyFunc=false). > SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). > SetDpdf(const ROOT::Math::IGenFunction& dpdf). > ```. > . > ? The reason pdf is passed as a pointer and not reference is because it is an optional parameter, it is not required. . I can add a SetDpdf() function, as (SetCDF), but I am not sure it is needed a SetPdf. One can use the constructor in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:43,usability,consist,consistent,43,"> It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:. > . > ```. > TUnuranContDist(bool copyFunc=false). > SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false). > SetDpdf(const ROOT::Math::IGenFunction& dpdf). > ```. > . > ? The reason pdf is passed as a pointer and not reference is because it is an optional parameter, it is not required. . I can add a SetDpdf() function, as (SetCDF), but I am not sure it is needed a SetPdf. One can use the constructor in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:37,integrability,interfac,interface,37,"Great regarding the 6.24. As for the interface, there are Unuran methods (HINV and NINV) that do not require PDF, only CDF. This is why I proposed a constructor which only sets the `fOwnFunc` and let all 3 xxDF functions be optional. I see there is a ctor accepting TF1 pointers that can be used in this case, but it sets unconditionally the `fOwnFunc`. With that in mind, my proposed ctor has to be:. ```cpp. TUnuranContDist(bool copyFunc);. ```. i.e. without a default value for copyFunc. So for the case when the user wants only CDF and not to copy it in TUnuranContDist, a new ctor or a method to set `fOwnFunc` is needed anyway. For the case where the user wants to set all 3 xxDF functions indeed the ctor is there, my point is just that the user code looks a bit ugly:. ```cpp. TUnuranContDist dist(pdf, &dpdf, false, true);. dist.SetCdf(cdf);. ```. compared to:. ```cpp. TUnuranContDist dist(pdf, dpdf, cdf, false, true);. ```. or:. ```cpp. TUnuranContDist dist(true);. dist.SetPdf(pdf);. dist.SetDpdf(dpdf);. dist.SetCdf(cdf);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:37,interoperability,interfac,interface,37,"Great regarding the 6.24. As for the interface, there are Unuran methods (HINV and NINV) that do not require PDF, only CDF. This is why I proposed a constructor which only sets the `fOwnFunc` and let all 3 xxDF functions be optional. I see there is a ctor accepting TF1 pointers that can be used in this case, but it sets unconditionally the `fOwnFunc`. With that in mind, my proposed ctor has to be:. ```cpp. TUnuranContDist(bool copyFunc);. ```. i.e. without a default value for copyFunc. So for the case when the user wants only CDF and not to copy it in TUnuranContDist, a new ctor or a method to set `fOwnFunc` is needed anyway. For the case where the user wants to set all 3 xxDF functions indeed the ctor is there, my point is just that the user code looks a bit ugly:. ```cpp. TUnuranContDist dist(pdf, &dpdf, false, true);. dist.SetCdf(cdf);. ```. compared to:. ```cpp. TUnuranContDist dist(pdf, dpdf, cdf, false, true);. ```. or:. ```cpp. TUnuranContDist dist(true);. dist.SetPdf(pdf);. dist.SetDpdf(dpdf);. dist.SetCdf(cdf);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:37,modifiability,interfac,interface,37,"Great regarding the 6.24. As for the interface, there are Unuran methods (HINV and NINV) that do not require PDF, only CDF. This is why I proposed a constructor which only sets the `fOwnFunc` and let all 3 xxDF functions be optional. I see there is a ctor accepting TF1 pointers that can be used in this case, but it sets unconditionally the `fOwnFunc`. With that in mind, my proposed ctor has to be:. ```cpp. TUnuranContDist(bool copyFunc);. ```. i.e. without a default value for copyFunc. So for the case when the user wants only CDF and not to copy it in TUnuranContDist, a new ctor or a method to set `fOwnFunc` is needed anyway. For the case where the user wants to set all 3 xxDF functions indeed the ctor is there, my point is just that the user code looks a bit ugly:. ```cpp. TUnuranContDist dist(pdf, &dpdf, false, true);. dist.SetCdf(cdf);. ```. compared to:. ```cpp. TUnuranContDist dist(pdf, dpdf, cdf, false, true);. ```. or:. ```cpp. TUnuranContDist dist(true);. dist.SetPdf(pdf);. dist.SetDpdf(dpdf);. dist.SetCdf(cdf);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:516,usability,user,user,516,"Great regarding the 6.24. As for the interface, there are Unuran methods (HINV and NINV) that do not require PDF, only CDF. This is why I proposed a constructor which only sets the `fOwnFunc` and let all 3 xxDF functions be optional. I see there is a ctor accepting TF1 pointers that can be used in this case, but it sets unconditionally the `fOwnFunc`. With that in mind, my proposed ctor has to be:. ```cpp. TUnuranContDist(bool copyFunc);. ```. i.e. without a default value for copyFunc. So for the case when the user wants only CDF and not to copy it in TUnuranContDist, a new ctor or a method to set `fOwnFunc` is needed anyway. For the case where the user wants to set all 3 xxDF functions indeed the ctor is there, my point is just that the user code looks a bit ugly:. ```cpp. TUnuranContDist dist(pdf, &dpdf, false, true);. dist.SetCdf(cdf);. ```. compared to:. ```cpp. TUnuranContDist dist(pdf, dpdf, cdf, false, true);. ```. or:. ```cpp. TUnuranContDist dist(true);. dist.SetPdf(pdf);. dist.SetDpdf(dpdf);. dist.SetCdf(cdf);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:657,usability,user,user,657,"Great regarding the 6.24. As for the interface, there are Unuran methods (HINV and NINV) that do not require PDF, only CDF. This is why I proposed a constructor which only sets the `fOwnFunc` and let all 3 xxDF functions be optional. I see there is a ctor accepting TF1 pointers that can be used in this case, but it sets unconditionally the `fOwnFunc`. With that in mind, my proposed ctor has to be:. ```cpp. TUnuranContDist(bool copyFunc);. ```. i.e. without a default value for copyFunc. So for the case when the user wants only CDF and not to copy it in TUnuranContDist, a new ctor or a method to set `fOwnFunc` is needed anyway. For the case where the user wants to set all 3 xxDF functions indeed the ctor is there, my point is just that the user code looks a bit ugly:. ```cpp. TUnuranContDist dist(pdf, &dpdf, false, true);. dist.SetCdf(cdf);. ```. compared to:. ```cpp. TUnuranContDist dist(pdf, dpdf, cdf, false, true);. ```. or:. ```cpp. TUnuranContDist dist(true);. dist.SetPdf(pdf);. dist.SetDpdf(dpdf);. dist.SetCdf(cdf);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:748,usability,user,user,748,"Great regarding the 6.24. As for the interface, there are Unuran methods (HINV and NINV) that do not require PDF, only CDF. This is why I proposed a constructor which only sets the `fOwnFunc` and let all 3 xxDF functions be optional. I see there is a ctor accepting TF1 pointers that can be used in this case, but it sets unconditionally the `fOwnFunc`. With that in mind, my proposed ctor has to be:. ```cpp. TUnuranContDist(bool copyFunc);. ```. i.e. without a default value for copyFunc. So for the case when the user wants only CDF and not to copy it in TUnuranContDist, a new ctor or a method to set `fOwnFunc` is needed anyway. For the case where the user wants to set all 3 xxDF functions indeed the ctor is there, my point is just that the user code looks a bit ugly:. ```cpp. TUnuranContDist dist(pdf, &dpdf, false, true);. dist.SetCdf(cdf);. ```. compared to:. ```cpp. TUnuranContDist dist(pdf, dpdf, cdf, false, true);. ```. or:. ```cpp. TUnuranContDist dist(true);. dist.SetPdf(pdf);. dist.SetDpdf(dpdf);. dist.SetCdf(cdf);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:4,energy efficiency,current,current,4,"The current idea is the following: . 1. For algorithms using only pdf: . ```. TUnuranContDist dist(pdf); . ```. 2. For algorithm using pdf + its derivative: . ```. TUnuranContDist dist(pdf, &dpdf); . ```. 3. For algorithms using pdf + derivative + pdf: . ```. TUnuranContDist dist(pdf, &dpdf); . dist.SetCdf(cdf);. ```. 4. For algorithms using only the cdf: . ```. TUnuranContDist dist(); . dist.SetCdf(cdf);. ```. I agree cases 3 and 4 are not very nice, also in case 4 one is forced to have the input functions cloned. . I would prefer to not change the existing constructor for not breaking the backward compatibility. . What about adding a constructor like this one: . ```. TUnuranContDist dist(const ROOT::Math::IGenFunction * pdf, . ROOT::Math::IGenFunction * dpdf, . ROOT::Math::GenFunction * cpdf, bool isLogPdf = false, bool copyFunc = false); . ```. and similar for the TF1 case ? . Thank you for the feedback !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:607,interoperability,compatib,compatibility,607,"The current idea is the following: . 1. For algorithms using only pdf: . ```. TUnuranContDist dist(pdf); . ```. 2. For algorithm using pdf + its derivative: . ```. TUnuranContDist dist(pdf, &dpdf); . ```. 3. For algorithms using pdf + derivative + pdf: . ```. TUnuranContDist dist(pdf, &dpdf); . dist.SetCdf(cdf);. ```. 4. For algorithms using only the cdf: . ```. TUnuranContDist dist(); . dist.SetCdf(cdf);. ```. I agree cases 3 and 4 are not very nice, also in case 4 one is forced to have the input functions cloned. . I would prefer to not change the existing constructor for not breaking the backward compatibility. . What about adding a constructor like this one: . ```. TUnuranContDist dist(const ROOT::Math::IGenFunction * pdf, . ROOT::Math::IGenFunction * dpdf, . ROOT::Math::GenFunction * cpdf, bool isLogPdf = false, bool copyFunc = false); . ```. and similar for the TF1 case ? . Thank you for the feedback !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:497,safety,input,input,497,"The current idea is the following: . 1. For algorithms using only pdf: . ```. TUnuranContDist dist(pdf); . ```. 2. For algorithm using pdf + its derivative: . ```. TUnuranContDist dist(pdf, &dpdf); . ```. 3. For algorithms using pdf + derivative + pdf: . ```. TUnuranContDist dist(pdf, &dpdf); . dist.SetCdf(cdf);. ```. 4. For algorithms using only the cdf: . ```. TUnuranContDist dist(); . dist.SetCdf(cdf);. ```. I agree cases 3 and 4 are not very nice, also in case 4 one is forced to have the input functions cloned. . I would prefer to not change the existing constructor for not breaking the backward compatibility. . What about adding a constructor like this one: . ```. TUnuranContDist dist(const ROOT::Math::IGenFunction * pdf, . ROOT::Math::IGenFunction * dpdf, . ROOT::Math::GenFunction * cpdf, bool isLogPdf = false, bool copyFunc = false); . ```. and similar for the TF1 case ? . Thank you for the feedback !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:497,usability,input,input,497,"The current idea is the following: . 1. For algorithms using only pdf: . ```. TUnuranContDist dist(pdf); . ```. 2. For algorithm using pdf + its derivative: . ```. TUnuranContDist dist(pdf, &dpdf); . ```. 3. For algorithms using pdf + derivative + pdf: . ```. TUnuranContDist dist(pdf, &dpdf); . dist.SetCdf(cdf);. ```. 4. For algorithms using only the cdf: . ```. TUnuranContDist dist(); . dist.SetCdf(cdf);. ```. I agree cases 3 and 4 are not very nice, also in case 4 one is forced to have the input functions cloned. . I would prefer to not change the existing constructor for not breaking the backward compatibility. . What about adding a constructor like this one: . ```. TUnuranContDist dist(const ROOT::Math::IGenFunction * pdf, . ROOT::Math::IGenFunction * dpdf, . ROOT::Math::GenFunction * cpdf, bool isLogPdf = false, bool copyFunc = false); . ```. and similar for the TF1 case ? . Thank you for the feedback !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:531,usability,prefer,prefer,531,"The current idea is the following: . 1. For algorithms using only pdf: . ```. TUnuranContDist dist(pdf); . ```. 2. For algorithm using pdf + its derivative: . ```. TUnuranContDist dist(pdf, &dpdf); . ```. 3. For algorithms using pdf + derivative + pdf: . ```. TUnuranContDist dist(pdf, &dpdf); . dist.SetCdf(cdf);. ```. 4. For algorithms using only the cdf: . ```. TUnuranContDist dist(); . dist.SetCdf(cdf);. ```. I agree cases 3 and 4 are not very nice, also in case 4 one is forced to have the input functions cloned. . I would prefer to not change the existing constructor for not breaking the backward compatibility. . What about adding a constructor like this one: . ```. TUnuranContDist dist(const ROOT::Math::IGenFunction * pdf, . ROOT::Math::IGenFunction * dpdf, . ROOT::Math::GenFunction * cpdf, bool isLogPdf = false, bool copyFunc = false); . ```. and similar for the TF1 case ? . Thank you for the feedback !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:911,usability,feedback,feedback,911,"The current idea is the following: . 1. For algorithms using only pdf: . ```. TUnuranContDist dist(pdf); . ```. 2. For algorithm using pdf + its derivative: . ```. TUnuranContDist dist(pdf, &dpdf); . ```. 3. For algorithms using pdf + derivative + pdf: . ```. TUnuranContDist dist(pdf, &dpdf); . dist.SetCdf(cdf);. ```. 4. For algorithms using only the cdf: . ```. TUnuranContDist dist(); . dist.SetCdf(cdf);. ```. I agree cases 3 and 4 are not very nice, also in case 4 one is forced to have the input functions cloned. . I would prefer to not change the existing constructor for not breaking the backward compatibility. . What about adding a constructor like this one: . ```. TUnuranContDist dist(const ROOT::Math::IGenFunction * pdf, . ROOT::Math::IGenFunction * dpdf, . ROOT::Math::GenFunction * cpdf, bool isLogPdf = false, bool copyFunc = false); . ```. and similar for the TF1 case ? . Thank you for the feedback !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:557,availability,consist,consistency,557,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:511,energy efficiency,draw,drawing,511,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:128,integrability,interfac,interfaces,128,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:396,integrability,interfac,interfaces,396,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:128,interoperability,interfac,interfaces,128,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:396,interoperability,interfac,interfaces,396,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:128,modifiability,interfac,interfaces,128,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:190,modifiability,paramet,parameters,190,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:396,modifiability,interfac,interfaces,396,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:542,testability,understand,understand,542,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:121,usability,prefer,prefer,121,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:557,usability,consist,consistency,557,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:77,deployability,integr,integral,77,I have added 2 new constructor where you can pass both derivative of pdf and integral (cdf). See #8254,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:77,integrability,integr,integral,77,I have added 2 new constructor where you can pass both derivative of pdf and integral (cdf). See #8254,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:77,interoperability,integr,integral,77,I have added 2 new constructor where you can pass both derivative of pdf and integral (cdf). See #8254,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:77,modifiability,integr,integral,77,I have added 2 new constructor where you can pass both derivative of pdf and integral (cdf). See #8254,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:77,reliability,integr,integral,77,I have added 2 new constructor where you can pass both derivative of pdf and integral (cdf). See #8254,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:77,security,integr,integral,77,I have added 2 new constructor where you can pass both derivative of pdf and integral (cdf). See #8254,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:77,testability,integr,integral,77,I have added 2 new constructor where you can pass both derivative of pdf and integral (cdf). See #8254,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:21,usability,statu,status,21,"@lmoneta What is the status of this? I thought it is good to go, but it seems not to be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:24,integrability,interfac,interface,24,"This PR is changing the interface, so I don;t want to add as it is in 6.24. We should add just the fix for the segfault in 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:24,interoperability,interfac,interface,24,"This PR is changing the interface, so I don;t want to add as it is in 6.24. We should add just the fix for the segfault in 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:24,modifiability,interfac,interface,24,"This PR is changing the interface, so I don;t want to add as it is in 6.24. We should add just the fix for the segfault in 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:54,deployability,patch,patches,54,Sure. Please let me know when the fix arrives in 6.24 patches. Btw. when do you expect new 6.24 patch release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:96,deployability,patch,patch,96,Sure. Please let me know when the fix arrives in 6.24 patches. Btw. when do you expect new 6.24 patch release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:102,deployability,releas,release,102,Sure. Please let me know when the fix arrives in 6.24 patches. Btw. when do you expect new 6.24 patch release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:54,safety,patch,patches,54,Sure. Please let me know when the fix arrives in 6.24 patches. Btw. when do you expect new 6.24 patch release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:96,safety,patch,patch,96,Sure. Please let me know when the fix arrives in 6.24 patches. Btw. when do you expect new 6.24 patch release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:54,security,patch,patches,54,Sure. Please let me know when the fix arrives in 6.24 patches. Btw. when do you expect new 6.24 patch release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/issues/8196:96,security,patch,patch,96,Sure. Please let me know when the fix arrives in 6.24 patches. Btw. when do you expect new 6.24 patch release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8196
https://github.com/root-project/root/pull/8197:8,availability,failur,failure,8,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:35,availability,error,error,35,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:325,availability,ERROR,ERROR,325,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:367,availability,ERROR,ERROR,367,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:374,availability,Error,Error,374,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:8,deployability,fail,failure,8,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:453,deployability,Fail,Failed,453,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:427,interoperability,plug,plugins,427,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:525,interoperability,plug,plugins,525,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:593,interoperability,plug,plugins,593,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:667,interoperability,plug,plugins,667,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:741,interoperability,plug,plugins,741,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:831,interoperability,plug,plugins,831,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:933,interoperability,plug,plugins,933,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1035,interoperability,plug,plugins,1035,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1579,interoperability,plug,plugins,1579,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:8,performance,failur,failure,8,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:35,performance,error,error,35,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:147,performance,time,timeout,147,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:229,performance,time,timeout,229,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:304,performance,time,timeout,304,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:325,performance,ERROR,ERROR,325,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:332,performance,Time,Timeout,332,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:367,performance,ERROR,ERROR,367,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:374,performance,Error,Error,374,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1058,performance,Synch,SynchronousNonBlockingStepExecution,1058,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1109,performance,Synch,SynchronousNonBlockingStepExecution,1109,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1178,performance,concurren,concurrent,1178,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1264,performance,concurren,concurrent,1264,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1335,performance,concurren,concurrent,1335,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1429,performance,concurren,concurrent,1429,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:8,reliability,fail,failure,8,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:453,reliability,Fail,Failed,453,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:35,safety,error,error,35,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:147,safety,timeout,timeout,147,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:229,safety,timeout,timeout,229,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:304,safety,timeout,timeout,304,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:325,safety,ERROR,ERROR,325,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:332,safety,Timeout,Timeout,332,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:367,safety,ERROR,ERROR,367,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:374,safety,Error,Error,374,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:215,testability,verif,verify,215,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:35,usability,error,error,35,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:325,usability,ERROR,ERROR,325,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:367,usability,ERROR,ERROR,367,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:374,usability,Error,Error,374,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:749,usability,workflow,workflow,749,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:839,usability,workflow,workflow,839,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:941,usability,workflow,workflow,941,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1043,usability,workflow,workflow,1043,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1605,usability,Command,Command,1605,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:1641,usability,statu,status,1641,"Windows failure was a git fetching error, not related to my changes:. ```. 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10. 13:52:30 Cleaning workspace. 13:52:30 > git rev-parse --verify HEAD # timeout=10. 13:53:05 Resetting working tree. 13:53:05 > git reset --hard # timeout=10. 14:03:09 ERROR: Timeout after 10 minutes. 14:03:22 ERROR: Error fetching remote repo 'origin'. 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git. 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000). 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241). 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80). 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47). 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511). 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149). 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624). 14:03:22 	at java.lang.Thread.run(Thread.java:748). 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:. ```. Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:221,modifiability,reu,reused,221,"Maybe one should set `_BUILD_TYPE_UPPER` in the top-level CMakeLists, though? It's a bit hidden in CheckCompiler now. Or re-set it every time? In the previous config, things just happened to work because `BUILD_TYPE` was reused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:137,performance,time,time,137,"Maybe one should set `_BUILD_TYPE_UPPER` in the top-level CMakeLists, though? It's a bit hidden in CheckCompiler now. Or re-set it every time? In the previous config, things just happened to work because `BUILD_TYPE` was reused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/pull/8197:49,security,auth,authors,49,"No need to squash, as the commits have different authors. Let's just merge your changes along with mine once Jenkins is finished.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8197
https://github.com/root-project/root/issues/8199:763,integrability,wrap,wrapping,763,"A possible implementation, that could go in some ROOT::Math classes:. ```. #include <bitset>. #include <cmath>. #include <array>. #include <set>. #include <iostream>. using std::bitset;. using std::array;. using std::vector;. using std::set;. using std::cout;. using std::endl;. /**. * @brief Generation of pseudo-random bits using a linear feedback shift register (LFSR), until a register value is repeated (or maxPeriod is reached). * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:787,integrability,wrap,wrapping,787,"A possible implementation, that could go in some ROOT::Math classes:. ```. #include <bitset>. #include <cmath>. #include <array>. #include <set>. #include <iostream>. using std::bitset;. using std::array;. using std::vector;. using std::set;. using std::cout;. using std::endl;. /**. * @brief Generation of pseudo-random bits using a linear feedback shift register (LFSR), until a register value is repeated (or maxPeriod is reached). * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:1407,integrability,wrap,wrapping,1407," maxPeriod is reached). * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1. bool newBit = lfsr[taps.at(0) - 1];. for(uint16_t j = 1; j < taps.size() ; ++j). {. newBit ^= lfsr[taps.at(j) - 1];. }. lfsr <<= 1;. lfsr[0] = newBit;. if(verbose). {. cout << i << "" "" << newBit << "" "" << lfsr << endl;. }. result.emplace_back(newBit);. ++i;. if(!wrapping). {. if(lfsrHistory.count(lfsr.to_ulong())). {. break;. }. lfsrHistory.insert(lfsr.to_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:2316,integrability,wrap,wrapping,2316,".org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1. bool newBit = lfsr[taps.at(0) - 1];. for(uint16_t j = 1; j < taps.size() ; ++j). {. newBit ^= lfsr[taps.at(j) - 1];. }. lfsr <<= 1;. lfsr[0] = newBit;. if(verbose). {. cout << i << "" "" << newBit << "" "" << lfsr << endl;. }. result.emplace_back(newBit);. ++i;. if(!wrapping). {. if(lfsrHistory.count(lfsr.to_ulong())). {. break;. }. lfsrHistory.insert(lfsr.to_ulong());. }. }. while(lfsr != start && i < maxPeriod);. result.shrink_to_fit();//only some special taps, namely the PRBS-k, will lead to the maxPeriod, others will stop earlier. return result;. }. void test_prbs(). {. //PRBS3. array<uint16_t, 2> taps3 = {2, 3}; // Exponents of the monic polynomial. auto prbs3 = LFSR(bitset<3>().flip(), taps3);// Start value all high. //PRBS4. array<uint16_t, 2> taps4 = {3, 4}; // Exponents of the monic polynomial. auto prbs4 = LFSR(bitset<4>().flip(), taps4);// Start value all high. //PRBS7. array<uint16_t, 2> taps7 = {7, 6}; // Exponents of the monic polynomial. auto prbs7 = LFSR(bitset<7>().flip(), taps7);// Start value all high. for(auto prbs : {prbs3, prbs4, prbs7}). {. cout << prbs.size() << "":\t"";. for(auto p : prbs). {. cout << p << "" "";. }. cout << endl;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:1068,safety,input,input,1068,"``. #include <bitset>. #include <cmath>. #include <array>. #include <set>. #include <iostream>. using std::bitset;. using std::array;. using std::vector;. using std::set;. using std::cout;. using std::endl;. /**. * @brief Generation of pseudo-random bits using a linear feedback shift register (LFSR), until a register value is repeated (or maxPeriod is reached). * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1. bool newBit = lfsr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:1481,safety,Sanit,Sanity-checks,1481,"he monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1. bool newBit = lfsr[taps.at(0) - 1];. for(uint16_t j = 1; j < taps.size() ; ++j). {. newBit ^= lfsr[taps.at(j) - 1];. }. lfsr <<= 1;. lfsr[0] = newBit;. if(verbose). {. cout << i << "" "" << newBit << "" "" << lfsr << endl;. }. result.emplace_back(newBit);. ++i;. if(!wrapping). {. if(lfsrHistory.count(lfsr.to_ulong())). {. break;. }. lfsrHistory.insert(lfsr.to_ulong());. }. }. while(lfsr != start && i < maxPeriod);. result.shrink_to_fit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:1481,security,Sanit,Sanity-checks,1481,"he monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1. bool newBit = lfsr[taps.at(0) - 1];. for(uint16_t j = 1; j < taps.size() ; ++j). {. newBit ^= lfsr[taps.at(j) - 1];. }. lfsr <<= 1;. lfsr[0] = newBit;. if(verbose). {. cout << i << "" "" << newBit << "" "" << lfsr << endl;. }. result.emplace_back(newBit);. ++i;. if(!wrapping). {. if(lfsrHistory.count(lfsr.to_ulong())). {. break;. }. lfsrHistory.insert(lfsr.to_ulong());. }. }. while(lfsr != start && i < maxPeriod);. result.shrink_to_fit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:341,usability,feedback,feedback,341,"A possible implementation, that could go in some ROOT::Math classes:. ```. #include <bitset>. #include <cmath>. #include <array>. #include <set>. #include <iostream>. using std::bitset;. using std::array;. using std::vector;. using std::set;. using std::cout;. using std::endl;. /**. * @brief Generation of pseudo-random bits using a linear feedback shift register (LFSR), until a register value is repeated (or maxPeriod is reached). * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:1068,usability,input,input,1068,"``. #include <bitset>. #include <cmath>. #include <array>. #include <set>. #include <iostream>. using std::bitset;. using std::array;. using std::vector;. using std::set;. using std::cout;. using std::endl;. /**. * @brief Generation of pseudo-random bits using a linear feedback shift register (LFSR), until a register value is repeated (or maxPeriod is reached). * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent). * @tparam nTaps the number of taps. * @param start the start value of the LFSR. * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant. * @param wrapping if true, allow wrapping until maxPeriod or start is reached. * @param verbose if true, print the lfsr and new bit on each step. * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right). * @return the array of pseudo random bits, or an empty array if input was incorrect. * @see https://en.wikipedia.org/wiki/Monic_polynomial. * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register. * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1. bool newBit = lfsr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:2576,usability,stop,stop,2576,".org/wiki/Pseudorandom_binary_sequence. */. template <size_t k, size_t nTaps>. vector<bool>. LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false). {. vector<bool> result;. //Sanity-checks. if(taps.size()<2). {. cerr << ""At least two taps are needed"" << endl;. return result;. }. for(auto tap : taps). {. if(tap > k). {. cerr << ""Out of range tap "" << tap << endl;. return result;. }. }. if(start.none()). {. cerr << ""A non-zero start value is needed"" << endl;. return result;. }. const uint32_t maxPeriod = pow(2,k) - 1;. result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;. bitset<k> lfsr(start);. uint32_t i = 0;. do. {. // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1. bool newBit = lfsr[taps.at(0) - 1];. for(uint16_t j = 1; j < taps.size() ; ++j). {. newBit ^= lfsr[taps.at(j) - 1];. }. lfsr <<= 1;. lfsr[0] = newBit;. if(verbose). {. cout << i << "" "" << newBit << "" "" << lfsr << endl;. }. result.emplace_back(newBit);. ++i;. if(!wrapping). {. if(lfsrHistory.count(lfsr.to_ulong())). {. break;. }. lfsrHistory.insert(lfsr.to_ulong());. }. }. while(lfsr != start && i < maxPeriod);. result.shrink_to_fit();//only some special taps, namely the PRBS-k, will lead to the maxPeriod, others will stop earlier. return result;. }. void test_prbs(). {. //PRBS3. array<uint16_t, 2> taps3 = {2, 3}; // Exponents of the monic polynomial. auto prbs3 = LFSR(bitset<3>().flip(), taps3);// Start value all high. //PRBS4. array<uint16_t, 2> taps4 = {3, 4}; // Exponents of the monic polynomial. auto prbs4 = LFSR(bitset<4>().flip(), taps4);// Start value all high. //PRBS7. array<uint16_t, 2> taps7 = {7, 6}; // Exponents of the monic polynomial. auto prbs7 = LFSR(bitset<7>().flip(), taps7);// Start value all high. for(auto prbs : {prbs3, prbs4, prbs7}). {. cout << prbs.size() << "":\t"";. for(auto p : prbs). {. cout << p << "" "";. }. cout << endl;. }. return 0;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:99,safety,test,testing,99,"Interesting. No, I hadn't heard about it. But I think PRBS is more about generating [0,1] bits for testing electronics, using easy/fast to implement LFSR, rather than generating floating point numbers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:99,testability,test,testing,99,"Interesting. No, I hadn't heard about it. But I think PRBS is more about generating [0,1] bits for testing electronics, using easy/fast to implement LFSR, rather than generating floating point numbers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:73,energy efficiency,current,current,73,"Hi, . I am not expert of PRBS generators, but can you not use one of the current ROOT pseudo-random number generators and extract the bits from the generated numbers ? . If not, If you think is a useful addition, you can contribute with a PR which should include also a test and an example program (tutorial) showing its use. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:270,safety,test,test,270,"Hi, . I am not expert of PRBS generators, but can you not use one of the current ROOT pseudo-random number generators and extract the bits from the generated numbers ? . If not, If you think is a useful addition, you can contribute with a PR which should include also a test and an example program (tutorial) showing its use. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:270,testability,test,test,270,"Hi, . I am not expert of PRBS generators, but can you not use one of the current ROOT pseudo-random number generators and extract the bits from the generated numbers ? . If not, If you think is a useful addition, you can contribute with a PR which should include also a test and an example program (tutorial) showing its use. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:325,usability,tool,tools,325,"The goal is the following. In electronics, the chips almost always generate PRBS sequences. When you acquire data in your system, you want to compare those bits, to see if any data was lost corrupted during the data acquisition chain. The goal is not to generate random sequences, for that, ROOT has already better generator tools. It is just to be able to compare the chip-generated ones with the expectation. And the ones in the chips are almost always of PRBS type. Do you think the code snippet I wrote above would be ready for a PR ? In what class or library would you suggest that I insert it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/issues/8199:8,testability,understand,understand,8,"Hi, . I understand it now. I would suggest you to make a new class that you can add to the MathCore library. The code snipped is probably a good starting point. . Thanks for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/pull/8200:97,interoperability,format,formatting,97,"Hi Olivier, . Thank you for this very nice improvement. The problem is that we cannot apply this formatting now, since we are in a period of very intensive developments of Roofit where we are touching a lot the classes. We have several development branches open and this PR will disrupt the developments making difficult the merge of the development branches in the master, that will done later on. . I would wait for these formatting few more months, when the developments will be more stable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8200
https://github.com/root-project/root/pull/8200:424,interoperability,format,formatting,424,"Hi Olivier, . Thank you for this very nice improvement. The problem is that we cannot apply this formatting now, since we are in a period of very intensive developments of Roofit where we are touching a lot the classes. We have several development branches open and this PR will disrupt the developments making difficult the merge of the development branches in the master, that will done later on. . I would wait for these formatting few more months, when the developments will be more stable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8200
https://github.com/root-project/root/pull/8201:85,usability,user,user-images,85,"With the revert, we have:. #8198 Problem:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701363-e9b86f80-b813-11eb-9295-921da38abaf6.png"">. rs701 tutorial:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701621-38fea000-b814-11eb-9eb4-5319f8f1e0e9.png"">. and ROOT-10931 problem:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701712-5469ab00-b814-11eb-9bd4-1a390111c911.png"">. all OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8201:241,usability,user,user-images,241,"With the revert, we have:. #8198 Problem:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701363-e9b86f80-b813-11eb-9295-921da38abaf6.png"">. rs701 tutorial:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701621-38fea000-b814-11eb-9eb4-5319f8f1e0e9.png"">. and ROOT-10931 problem:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701712-5469ab00-b814-11eb-9bd4-1a390111c911.png"">. all OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8201:405,usability,user,user-images,405,"With the revert, we have:. #8198 Problem:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701363-e9b86f80-b813-11eb-9295-921da38abaf6.png"">. rs701 tutorial:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701621-38fea000-b814-11eb-9eb4-5319f8f1e0e9.png"">. and ROOT-10931 problem:. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118701712-5469ab00-b814-11eb-9bd4-1a390111c911.png"">. all OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8201:1,energy efficiency,Current,Current,1,"(Current master:. <img width=""300"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118702099-c7732180-b814-11eb-85b4-a5a5b81cbb45.png"">. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8201:60,usability,user,user-images,60,"(Current master:. <img width=""300"" alt=""image"" src=""https://user-images.githubusercontent.com/16205615/118702099-c7732180-b814-11eb-85b4-a5a5b81cbb45.png"">. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8204:74,safety,test,testing,74,Yes! Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:74,testability,test,testing,74,Yes! Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:280,deployability,build,build,280,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:394,deployability,build,builds,394,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:85,safety,test,testing,85,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:352,safety,test,test,352,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:376,safety,test,test,376,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:471,safety,test,tested,471,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:489,safety,test,test,489,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:85,testability,test,testing,85,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:352,testability,test,test,352,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:376,testability,test,test,376,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:471,testability,test,tested,471,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:489,testability,test,test,489,"@vgvassilev . > Could you also now try running clingtest as part of the regular ROOT testing procedure? I believe (with minor adjustments) it will work. Sure, but this PR makes this neither easier nor more difficult, nor should it have any other effect :-) We probably want a new build flavor, to make sure that things work both with and without cling-test. I.e. enable cling-test only on some builds. Which ones - one Fedora, one Mac? And I agree we should have this PR tested with cling-test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:11,deployability,build,build,11,@phsft-bot build with flags -Dclingtest=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:39,deployability,fail,fail,39,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:246,deployability,upgrad,upgrade,246,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:290,energy efficiency,load,load,290,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:138,integrability,filter,filter,138,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:281,integrability,inject,inject,281,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:246,modifiability,upgrad,upgrade,246,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:290,performance,load,load,290,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:39,reliability,fail,fail,39,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:120,safety,test,test,120,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:211,safety,test,test,211,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:281,security,inject,inject,281,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:120,testability,test,test,120,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:211,testability,test,test,211,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:11,deployability,build,build,11,@phsft-bot build with flags -Dclingtest=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:10,deployability,fail,failing,10,"Macs were failing exactly like this before (in numba, with `-Dclingtest=On`): https://github.com/root-project/root/pull/3760#issuecomment-847791104",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8204:10,reliability,fail,failing,10,"Macs were failing exactly like this before (in numba, with `-Dclingtest=On`): https://github.com/root-project/root/pull/3760#issuecomment-847791104",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8204
https://github.com/root-project/root/pull/8210:138,energy efficiency,optim,optimize,138,"Oh, and I think with `MapV()` being so close to `Map()`, we can make `Map()` a wrapper of `MapV()` and expect (hopefully) the compiler to optimize away the dummy `nItems` calculation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8210
https://github.com/root-project/root/pull/8210:79,integrability,wrap,wrapper,79,"Oh, and I think with `MapV()` being so close to `Map()`, we can make `Map()` a wrapper of `MapV()` and expect (hopefully) the compiler to optimize away the dummy `nItems` calculation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8210
https://github.com/root-project/root/pull/8210:79,interoperability,wrapper,wrapper,79,"Oh, and I think with `MapV()` being so close to `Map()`, we can make `Map()` a wrapper of `MapV()` and expect (hopefully) the compiler to optimize away the dummy `nItems` calculation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8210
https://github.com/root-project/root/pull/8210:138,performance,optimiz,optimize,138,"Oh, and I think with `MapV()` being so close to `Map()`, we can make `Map()` a wrapper of `MapV()` and expect (hopefully) the compiler to optimize away the dummy `nItems` calculation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8210
https://github.com/root-project/root/pull/8210:39,usability,close,close,39,"Oh, and I think with `MapV()` being so close to `Map()`, we can make `Map()` a wrapper of `MapV()` and expect (hopefully) the compiler to optimize away the dummy `nItems` calculation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8210
https://github.com/root-project/root/pull/8211:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8211
https://github.com/root-project/root/issues/8216:138,reliability,diagno,diagnosis,138,"Should we get issues related to token auth in the future which are not caught by DAVIX or experiments, we can still add our own testing & diagnosis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/issues/8216:128,safety,test,testing,128,"Should we get issues related to token auth in the future which are not caught by DAVIX or experiments, we can still add our own testing & diagnosis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/issues/8216:32,security,token,token,32,"Should we get issues related to token auth in the future which are not caught by DAVIX or experiments, we can still add our own testing & diagnosis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/issues/8216:38,security,auth,auth,38,"Should we get issues related to token auth in the future which are not caught by DAVIX or experiments, we can still add our own testing & diagnosis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/issues/8216:128,testability,test,testing,128,"Should we get issues related to token auth in the future which are not caught by DAVIX or experiments, we can still add our own testing & diagnosis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/issues/8216:138,testability,diagno,diagnosis,138,"Should we get issues related to token auth in the future which are not caught by DAVIX or experiments, we can still add our own testing & diagnosis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/pull/8219:55,deployability,Updat,Update,55,"@eguiraud I tried not to change RDF macros, but final `Update` was required in that place",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8219
https://github.com/root-project/root/pull/8219:55,safety,Updat,Update,55,"@eguiraud I tried not to change RDF macros, but final `Update` was required in that place",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8219
https://github.com/root-project/root/pull/8219:55,security,Updat,Update,55,"@eguiraud I tried not to change RDF macros, but final `Update` was required in that place",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8219
https://github.com/root-project/root/pull/8220:161,interoperability,specif,specific,161,`git rebase -i upstream/master ` and edit the history at your leisure (you should not use your master branch but a dedicated feature branch to work on something specific).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8220
https://github.com/root-project/root/pull/8220:163,interoperability,specif,specific,163,"> `git rebase -i upstream/master ` and edit the history at your leisure (you should not use your master branch but a dedicated feature branch to work on something specific). Ah, thanks. I tried cherry-pick but that wasnt working",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8220
https://github.com/root-project/root/pull/8220:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8220
https://github.com/root-project/root/pull/8220:8,deployability,build,build,8,Can the build be aborted and restarted ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8220
https://github.com/root-project/root/pull/8221:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:185,deployability,patch,patches,185,"Thanks, @scott-snyder ! We'll do https://github.com/root-project/root/pull/8243 instead if you don't mind: we always prefer backports from upstream llvm/clang rather than adding to our patches. I've verified that this fixes the GCC 11 builds. If after the backport PR you still see issues that this PR addresses then please let me know and I re-open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:235,deployability,build,builds,235,"Thanks, @scott-snyder ! We'll do https://github.com/root-project/root/pull/8243 instead if you don't mind: we always prefer backports from upstream llvm/clang rather than adding to our patches. I've verified that this fixes the GCC 11 builds. If after the backport PR you still see issues that this PR addresses then please let me know and I re-open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:185,safety,patch,patches,185,"Thanks, @scott-snyder ! We'll do https://github.com/root-project/root/pull/8243 instead if you don't mind: we always prefer backports from upstream llvm/clang rather than adding to our patches. I've verified that this fixes the GCC 11 builds. If after the backport PR you still see issues that this PR addresses then please let me know and I re-open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:185,security,patch,patches,185,"Thanks, @scott-snyder ! We'll do https://github.com/root-project/root/pull/8243 instead if you don't mind: we always prefer backports from upstream llvm/clang rather than adding to our patches. I've verified that this fixes the GCC 11 builds. If after the backport PR you still see issues that this PR addresses then please let me know and I re-open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:199,testability,verif,verified,199,"Thanks, @scott-snyder ! We'll do https://github.com/root-project/root/pull/8243 instead if you don't mind: we always prefer backports from upstream llvm/clang rather than adding to our patches. I've verified that this fixes the GCC 11 builds. If after the backport PR you still see issues that this PR addresses then please let me know and I re-open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:117,usability,prefer,prefer,117,"Thanks, @scott-snyder ! We'll do https://github.com/root-project/root/pull/8243 instead if you don't mind: we always prefer backports from upstream llvm/clang rather than adding to our patches. I've verified that this fixes the GCC 11 builds. If after the backport PR you still see issues that this PR addresses then please let me know and I re-open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8223:13,availability,error,error,13,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:31,deployability,log,log,31,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:78,deployability,log,log,78,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:13,performance,error,error,13,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:13,safety,error,error,13,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:31,safety,log,log,31,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:78,safety,log,log,78,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:31,security,log,log,31,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:78,security,log,log,78,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:31,testability,log,log,31,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:78,testability,log,log,78,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8223:13,usability,error,error,13,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8223
https://github.com/root-project/root/pull/8224:64,usability,user,users,64,"> I am afraid this could cause a problem. Which one? As long as users see the template, `#include` (not the forward!), and documentation when entering `PtEtaPhiMVector` in the Doxygen search I'll be happy :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:123,usability,document,documentation,123,"> I am afraid this could cause a problem. Which one? As long as users see the template, `#include` (not the forward!), and documentation when entering `PtEtaPhiMVector` in the Doxygen search I'll be happy :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:161,safety,test,tested,161,The problem could be that one changes the template class and the typedef declaration in `Vector.h` but forgets to modify `Vectorfwd.h`. If that tupedef's is not tested there is an inconsistency. . We have this now https://root.cern.ch/doc/master/namespaceROOT_1_1Math.html#a39def91bfd150148b1534d8ae665b145.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:114,security,modif,modify,114,The problem could be that one changes the template class and the typedef declaration in `Vector.h` but forgets to modify `Vectorfwd.h`. If that tupedef's is not tested there is an inconsistency. . We have this now https://root.cern.ch/doc/master/namespaceROOT_1_1Math.html#a39def91bfd150148b1534d8ae665b145.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:161,testability,test,tested,161,The problem could be that one changes the template class and the typedef declaration in `Vector.h` but forgets to modify `Vectorfwd.h`. If that tupedef's is not tested there is an inconsistency. . We have this now https://root.cern.ch/doc/master/namespaceROOT_1_1Math.html#a39def91bfd150148b1534d8ae665b145.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:92,availability,consist,consistent,92,Simply include `...fwd.h` in the `...h` header and you're guaranteed that they typedefs are consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:0,testability,Simpl,Simply,0,Simply include `...fwd.h` in the `...h` header and you're guaranteed that they typedefs are consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:0,usability,Simpl,Simply,0,Simply include `...fwd.h` in the `...h` header and you're guaranteed that they typedefs are consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8224:92,usability,consist,consistent,92,Simply include `...fwd.h` in the `...h` header and you're guaranteed that they typedefs are consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/pull/8225:28,usability,tip,tips,28,Thank you everyone for your tips. I have learned a bunch of new concepts. The last two commits have added those changes. I am very grateful for the help I have been getting. Thank you everyone.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8225
https://github.com/root-project/root/pull/8225:41,usability,learn,learned,41,Thank you everyone for your tips. I have learned a bunch of new concepts. The last two commits have added those changes. I am very grateful for the help I have been getting. Thank you everyone.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8225
https://github.com/root-project/root/pull/8225:148,usability,help,help,148,Thank you everyone for your tips. I have learned a bunch of new concepts. The last two commits have added those changes. I am very grateful for the help I have been getting. Thank you everyone.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8225
https://github.com/root-project/root/pull/8225:103,deployability,build,build,103,"@jblomer @hageboeck are the changes I made okay, or is there something missing? I have no idea why the build is failing hehe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8225
https://github.com/root-project/root/pull/8225:112,deployability,fail,failing,112,"@jblomer @hageboeck are the changes I made okay, or is there something missing? I have no idea why the build is failing hehe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8225
https://github.com/root-project/root/pull/8225:112,reliability,fail,failing,112,"@jblomer @hageboeck are the changes I made okay, or is there something missing? I have no idea why the build is failing hehe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8225
https://github.com/root-project/root/pull/8225:0,safety,Accid,Accidentally,0,Accidentally deleted the commits. I have made another PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8225
https://github.com/root-project/root/pull/8227:342,deployability,updat,update,342,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:67,energy efficiency,model,modelA,67,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:273,energy efficiency,Draw,Draw,273,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:342,safety,updat,update,342,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:353,safety,test,test,353,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:67,security,model,modelA,67,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:171,security,ident,identifiers,171,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:250,security,ident,identifier,250,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:342,security,updat,update,342,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:353,testability,test,test,353,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:164,usability,usab,usable,164,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");. > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:61,security,ident,identifiers,61,"> We strive/want to have the name of the column to be usable identifiers. Thank you Philippe, I've just pushed a new commit for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:54,usability,usab,usable,54,"> We strive/want to have the name of the column to be usable identifiers. Thank you Philippe, I've just pushed a new commit for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8228:9,availability,failur,failures,9,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:63,availability,failur,failure,63,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:9,deployability,fail,failures,9,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:63,deployability,fail,failure,63,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:55,energy efficiency,load,loading,55,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:9,performance,failur,failures,9,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:55,performance,load,loading,55,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:63,performance,failur,failure,63,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:9,reliability,fail,failures,9,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:63,reliability,fail,failure,63,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:4,safety,test,test,4,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/pull/8228:4,testability,test,test,4,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8228
https://github.com/root-project/root/issues/8231:199,usability,close,closed,199,"Hi, thanks for opening this issue. Sorry that nobody was looking at this yet, I see that you already opened a [Jira issue](https://sft.its.cern.ch/jira/browse/ROOT-8304) about this many years ago (I closed the Jira issue now as duplicate). Is this problem still relevant? I would start working on this then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:237,availability,state,states,237,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:166,deployability,observ,observables,166,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:224,deployability,contain,contains,224,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:545,deployability,observ,observable,545,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:608,deployability,observ,observables,608,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:649,deployability,continu,continuous,649,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:908,deployability,observ,observables,908,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:396,energy efficiency,reduc,reduce,396,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:237,integrability,state,states,237,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:854,modifiability,exten,extended,854,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:427,safety,input,input,427,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:166,testability,observ,observables,166,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:545,testability,observ,observable,545,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:608,testability,observ,observables,608,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:908,testability,observ,observables,908,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:427,usability,input,input,427,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:866,usability,support,support,866,"Just for the paper trail, here is Will's original text from the 2016 Jira issue 8304:. > Hello,. >. > I am trying to run a fit in a restricted range where one of the observables is a RooCategory. I have defined a range that contains the states I want to consider in the fit. I am trying to do the fit with pdf->fitTo(data,Range(""myrange"")). I have noticed that in RooAbsOptTestStatistic that the reduce method is called on the input data, which will correctly restrict the fit to just the data in my desired fit range, including the RooCategory observable. But there is no restriction placed on the discrete observables, whereas there is one on the continuous ones: https://root.cern.ch/gitweb/?p=root.git;a=blob;f=roofit/roofitcore/src/RooAbsOptTestStatistic.cxx;hb=01602ce4a5f22fde41f2543cfaa066e0c9007714#l301. >. > Could the code at this location be extended to support restricting the range of discrete observables in the fit? >. > Thanks. > Will.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:247,reliability,doe,doesn,247,"I'll also change the tag from ""bug"" to ""feature request"". It's not obvious that a discrete category can have a ""range"", because a range is over something that is ordered. A RooCategory represents discrete, unordered labels, so I'd say the ""range"" doesn't apply to them. What is the usecase for this range support? Is it for fitting only some channels in a RooSimultaneous? Maybe we should find another way to do this easily, some way that also makes conceptually more sense than exploiting the range mechanism. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:305,usability,support,support,305,"I'll also change the tag from ""bug"" to ""feature request"". It's not obvious that a discrete category can have a ""range"", because a range is over something that is ordered. A RooCategory represents discrete, unordered labels, so I'd say the ""range"" doesn't apply to them. What is the usecase for this range support? Is it for fitting only some channels in a RooSimultaneous? Maybe we should find another way to do this easily, some way that also makes conceptually more sense than exploiting the range mechanism. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:465,deployability,depend,dependent,465,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:722,energy efficiency,reduc,reduced,722,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:465,integrability,depend,dependent,465,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:69,modifiability,variab,variable,69,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:465,modifiability,depend,dependent,465,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:465,safety,depend,dependent,465,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:465,testability,depend,dependent,465,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:168,usability,support,supports,168,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8231:278,usability,behavi,behaviour,278,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8231
https://github.com/root-project/root/issues/8233:156,performance,time,time,156,"> . > . > Do you have `$ROOTSYS/lib/libMinuit2.so`? I totally forgot to compile it with Minuit2. After rebuilding it work just fine, sorry for wasting your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8233
https://github.com/root-project/root/pull/8234:203,deployability,patch,patched,203,@Axel-Naumann would something like this be suitable? It's technically not the same but it works and fixes #7009. I've noticed a few other occurences of the regex escaping/matching sequence that could be patched in a similar fashion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:203,safety,patch,patched,203,@Axel-Naumann would something like this be suitable? It's technically not the same but it works and fixes #7009. I've noticed a few other occurences of the regex escaping/matching sequence that could be patched in a similar fashion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:203,security,patch,patched,203,@Axel-Naumann would something like this be suitable? It's technically not the same but it works and fixes #7009. I've noticed a few other occurences of the regex escaping/matching sequence that could be patched in a similar fashion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:49,reliability,doe,does,49,"Hmm no the question we want to be asking is not ""does the directory exist"" but ""is that directory the source directory"". I was proposing the use of [`if( ... STREQUAL ...)`](https://cmake.org/cmake/help/latest/command/if.html#strequal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:198,usability,help,help,198,"Hmm no the question we want to be asking is not ""does the directory exist"" but ""is that directory the source directory"". I was proposing the use of [`if( ... STREQUAL ...)`](https://cmake.org/cmake/help/latest/command/if.html#strequal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:210,usability,command,command,210,"Hmm no the question we want to be asking is not ""does the directory exist"" but ""is that directory the source directory"". I was proposing the use of [`if( ... STREQUAL ...)`](https://cmake.org/cmake/help/latest/command/if.html#strequal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:265,availability,error,error,265,"As the regex match was done with a prefix `^` and without a trailing `$` I think this is more of a ""does this directory live in the `${CMAKE_SOURCE_DIR}`"" question. I don't think STREQUAL is suitable as it does not match against required directory names and yields error on the same part as #7009",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:265,performance,error,error,265,"As the regex match was done with a prefix `^` and without a trailing `$` I think this is more of a ""does this directory live in the `${CMAKE_SOURCE_DIR}`"" question. I don't think STREQUAL is suitable as it does not match against required directory names and yields error on the same part as #7009",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:100,reliability,doe,does,100,"As the regex match was done with a prefix `^` and without a trailing `$` I think this is more of a ""does this directory live in the `${CMAKE_SOURCE_DIR}`"" question. I don't think STREQUAL is suitable as it does not match against required directory names and yields error on the same part as #7009",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:206,reliability,doe,does,206,"As the regex match was done with a prefix `^` and without a trailing `$` I think this is more of a ""does this directory live in the `${CMAKE_SOURCE_DIR}`"" question. I don't think STREQUAL is suitable as it does not match against required directory names and yields error on the same part as #7009",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:265,safety,error,error,265,"As the regex match was done with a prefix `^` and without a trailing `$` I think this is more of a ""does this directory live in the `${CMAKE_SOURCE_DIR}`"" question. I don't think STREQUAL is suitable as it does not match against required directory names and yields error on the same part as #7009",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:265,usability,error,error,265,"As the regex match was done with a prefix `^` and without a trailing `$` I think this is more of a ""does this directory live in the `${CMAKE_SOURCE_DIR}`"" question. I don't think STREQUAL is suitable as it does not match against required directory names and yields error on the same part as #7009",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8234:30,usability,close,close,30,@SpectreVert I believe we can close this PR in favor of https://github.com/root-project/root/pull/8306?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8234
https://github.com/root-project/root/pull/8235:242,energy efficiency,Draw,DrawCopy,242,"Contrast two plots where the pad height is different. ```. ROOT.gStyle.SetTitleFont(43);ROOT.gStyle.SetTitleFontSize(15);ROOT.gStyle.SetTitleOffset(0,""Y""). c = ROOT.TCanvas(). c.Divide(2,1). c.cd(1). hh = ROOT.TH1D(""h"",""h;xx;yy"",10,0,10). hh.DrawCopy(). p2 = c.cd(2). p2.Divide(1,2). p2.cd(1). hh.DrawCopy(). ```. The attached image on the left is before the fix, the right is after the fix. The offset is now the same regardless of the pad height. ![Screenshot 2021-05-25 at 13 56 36](https://user-images.githubusercontent.com/18280829/119501801-1cf18600-bd61-11eb-9ff9-8eddeb7ee69a.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:297,energy efficiency,Draw,DrawCopy,297,"Contrast two plots where the pad height is different. ```. ROOT.gStyle.SetTitleFont(43);ROOT.gStyle.SetTitleFontSize(15);ROOT.gStyle.SetTitleOffset(0,""Y""). c = ROOT.TCanvas(). c.Divide(2,1). c.cd(1). hh = ROOT.TH1D(""h"",""h;xx;yy"",10,0,10). hh.DrawCopy(). p2 = c.cd(2). p2.Divide(1,2). p2.cd(1). hh.DrawCopy(). ```. The attached image on the left is before the fix, the right is after the fix. The offset is now the same regardless of the pad height. ![Screenshot 2021-05-25 at 13 56 36](https://user-images.githubusercontent.com/18280829/119501801-1cf18600-bd61-11eb-9ff9-8eddeb7ee69a.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:494,usability,user,user-images,494,"Contrast two plots where the pad height is different. ```. ROOT.gStyle.SetTitleFont(43);ROOT.gStyle.SetTitleFontSize(15);ROOT.gStyle.SetTitleOffset(0,""Y""). c = ROOT.TCanvas(). c.Divide(2,1). c.cd(1). hh = ROOT.TH1D(""h"",""h;xx;yy"",10,0,10). hh.DrawCopy(). p2 = c.cd(2). p2.Divide(1,2). p2.cd(1). hh.DrawCopy(). ```. The attached image on the left is before the fix, the right is after the fix. The offset is now the same regardless of the pad height. ![Screenshot 2021-05-25 at 13 56 36](https://user-images.githubusercontent.com/18280829/119501801-1cf18600-bd61-11eb-9ff9-8eddeb7ee69a.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:307,energy efficiency,Draw,DrawCopy,307,"Are you sure you used this macro? when I execute it I do not get any x title with or without your change. ```. import ROOT. ROOT.gStyle.SetTitleFont(43);ROOT.gStyle.SetTitleFontSize(15);ROOT.gStyle.SetTitleOffset(0,""Y""). c = ROOT.TCanvas(). c.Divide(2,1). c.cd(1). hh = ROOT.TH1D(""h"",""h;xx;yy"",10,0,10). hh.DrawCopy(). p2 = c.cd(2). p2.Divide(1,2). p2.cd(1). hh.DrawCopy(). c.Print(""c.png""). ```. <img width=""751"" alt=""Screenshot 2021-05-25 at 15 20 20"" src=""https://user-images.githubusercontent.com/4697738/119505098-e3267c80-bd6c-11eb-8837-1b6f540b4970.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:362,energy efficiency,Draw,DrawCopy,362,"Are you sure you used this macro? when I execute it I do not get any x title with or without your change. ```. import ROOT. ROOT.gStyle.SetTitleFont(43);ROOT.gStyle.SetTitleFontSize(15);ROOT.gStyle.SetTitleOffset(0,""Y""). c = ROOT.TCanvas(). c.Divide(2,1). c.cd(1). hh = ROOT.TH1D(""h"",""h;xx;yy"",10,0,10). hh.DrawCopy(). p2 = c.cd(2). p2.Divide(1,2). p2.cd(1). hh.DrawCopy(). c.Print(""c.png""). ```. <img width=""751"" alt=""Screenshot 2021-05-25 at 15 20 20"" src=""https://user-images.githubusercontent.com/4697738/119505098-e3267c80-bd6c-11eb-8837-1b6f540b4970.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:467,usability,user,user-images,467,"Are you sure you used this macro? when I execute it I do not get any x title with or without your change. ```. import ROOT. ROOT.gStyle.SetTitleFont(43);ROOT.gStyle.SetTitleFontSize(15);ROOT.gStyle.SetTitleOffset(0,""Y""). c = ROOT.TCanvas(). c.Divide(2,1). c.cd(1). hh = ROOT.TH1D(""h"",""h;xx;yy"",10,0,10). hh.DrawCopy(). p2 = c.cd(2). p2.Divide(1,2). p2.cd(1). hh.DrawCopy(). c.Print(""c.png""). ```. <img width=""751"" alt=""Screenshot 2021-05-25 at 15 20 20"" src=""https://user-images.githubusercontent.com/4697738/119505098-e3267c80-bd6c-11eb-8837-1b6f540b4970.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:24,testability,understand,understand,24,very weird... trying to understand...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:13,interoperability,standard,standard,13,"We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. Without your change, the axis titles appear as you see on the reference guide online. With your change, all the titles disappear",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:150,usability,guid,guide,150,"We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. Without your change, the axis titles appear as you see on the reference guide online. With your change, all the titles disappear",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:254,deployability,patch,patch,254,"Sorry, thanks, not sure what our difference is. If it gives you confidence this is the right bug fix though take a look at line 1459 --- the character height is adjusted there by the pad height CORRECTLY and used for label positioning (I think), so this patch is just doing the same thing for the title positioning. It's definitely not nice that the making the pad half the height of the canvas makes the title sit on top of labels like I showed in my screenshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:254,safety,patch,patch,254,"Sorry, thanks, not sure what our difference is. If it gives you confidence this is the right bug fix though take a look at line 1459 --- the character height is adjusted there by the pad height CORRECTLY and used for label positioning (I think), so this patch is just doing the same thing for the title positioning. It's definitely not nice that the making the pad half the height of the canvas makes the title sit on top of labels like I showed in my screenshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:254,security,patch,patch,254,"Sorry, thanks, not sure what our difference is. If it gives you confidence this is the right bug fix though take a look at line 1459 --- the character height is adjusted there by the pad height CORRECTLY and used for label positioning (I think), so this patch is just doing the same thing for the title positioning. It's definitely not nice that the making the pad half the height of the canvas makes the title sit on top of labels like I showed in my screenshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:513,deployability,depend,depended,513,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:695,deployability,scale,scales,695,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:387,energy efficiency,reduc,reduced,387,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:695,energy efficiency,scale,scales,695,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:901,energy efficiency,current,current,901,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:513,integrability,depend,depended,513,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:15,interoperability,standard,standard,15,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:513,modifiability,depend,depended,513,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:695,modifiability,scal,scales,695,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:695,performance,scale,scales,695,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:759,performance,tune,tune,759,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:513,safety,depend,depended,513,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:513,testability,depend,depended,513,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:153,usability,guid,guide,153,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:280,usability,confirm,confirm,280,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:618,usability,behavi,behaviour,618,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:1607,usability,behavi,behaviour,1607,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:1720,usability,user,user-images,1720,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html. > Without your change the axis titles appear as you see on the reference guide online. > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```. charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));. ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts? ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:90,deployability,releas,release,90,I just tested your last changes locally on my machine. It is working fine. Thanks for the release notes also. It is also fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:7,safety,test,tested,7,I just tested your last changes locally on my machine. It is working fine. Thanks for the release notes also. It is also fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8235:7,testability,test,tested,7,I just tested your last changes locally on my machine. It is working fine. Thanks for the release notes also. It is also fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8235
https://github.com/root-project/root/pull/8239:418,availability,error,error,418,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:113,deployability,fail,fails,113,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:150,deployability,build,build,150,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:188,deployability,BUILD,BUILD,188,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:281,deployability,build,build,281,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:319,deployability,BUILD,BUILD,319,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:539,deployability,version,version,539,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:591,deployability,version,version,591,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:245,energy efficiency,core,core,245,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:373,energy efficiency,core,core,373,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:518,integrability,wrap,wrap,518,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:539,integrability,version,version,539,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:591,integrability,version,version,591,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:539,modifiability,version,version,539,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:591,modifiability,version,version,591,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:418,performance,error,error,418,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:113,reliability,fail,fails,113,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:418,safety,error,error,418,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:418,usability,error,error,418,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. -> fails with file not found:. ```. -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\. 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx . /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\. directory . 3 | #include ""tbb/tbb_config.h"" . ```. maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:154,deployability,configurat,configuration,154,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:181,deployability,build,build,181,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:282,deployability,version,versions,282,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:387,deployability,version,version,387,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:154,integrability,configur,configuration,154,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:282,integrability,version,versions,282,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:387,integrability,version,version,387,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:154,modifiability,configur,configuration,154,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:282,modifiability,version,versions,282,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:387,modifiability,version,version,387,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:143,safety,test,test,143,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:154,security,configur,configuration,154,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:143,testability,test,test,143,"> now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h. That is what happens if I only test CMake configuration, but not the build itself. I'm working on a proper fix, hopefully I can find a header that can be included in all versions of TBB (otherwise we have a chicken-and-egg problem which header to include for finding out the version...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:132,availability,avail,available,132,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:84,deployability,configurat,configuration,84,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:84,integrability,configur,configuration,84,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:84,modifiability,configur,configuration,84,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:132,reliability,availab,available,132,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:132,safety,avail,available,132,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:84,security,configur,configuration,84,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:132,security,availab,available,132,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:3,reliability,doe,does,3,it does just built it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:73,safety,test,testing,73,@hahnjo thanks a lot for fix! (and thanks to @mrodozov for reporting and testing!),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8239:73,testability,test,testing,73,@hahnjo thanks a lot for fix! (and thanks to @mrodozov for reporting and testing!),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8239
https://github.com/root-project/root/pull/8240:36,deployability,Updat,Update,36,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:237,deployability,integr,integrals,237,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:0,energy efficiency,Current,Current,0,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:354,energy efficiency,model,models,354,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:92,integrability,batch,batch,92,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:237,integrability,integr,integrals,237,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:254,integrability,batch,batch,254,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:237,interoperability,integr,integrals,237,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:101,modifiability,scal,scalar,101,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:237,modifiability,integr,integrals,237,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:92,performance,batch,batch,92,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:254,performance,batch,batch,254,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:237,reliability,integr,integrals,237,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:36,safety,Updat,Update,36,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:43,safety,test,tests,43,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:125,safety,compl,complicated,125,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:137,safety,test,tests,137,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:178,safety,test,testing,178,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:311,safety,compl,complex,311,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:364,safety,test,tests,364,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:36,security,Updat,Update,36,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:125,security,compl,complicated,125,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:204,security,Ident,Identify,204,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:237,security,integr,integrals,237,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:283,security,Ident,Identify,283,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:311,security,compl,complex,311,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:354,security,model,models,354,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:43,testability,test,tests,43,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:137,testability,test,tests,137,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:178,testability,test,testing,178,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:237,testability,integr,integrals,237,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:364,testability,test,tests,364,"Current issues. **Critical**. - [ ] Update tests (no need to check raw values, only fitting batch vs scalar). - [ ] Use more complicated tests with bigger computation graphs for testing the driver. - [ ] Identify and implement important integrals in the batch compute library. - [ ] Identify and implement more complex use cases. - [ ] Use realistic fit models as tests and benchmarks for roofit. - [ ] Implement multithreading. **Side projects**. - [ ] Properly vectorize RooLandau. - [ ] Explore the possibility of vectorizing the gamma function. - [ ] Implement PDFs and functions in the library. - [ ] Fully rename RunContext to DataMap and RooBatchCompute:: to rbc::. - [ ] Cleanup of obsolete defines, options and code in general. - [ ] Use the computation library also for plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/issues/8245:81,deployability,releas,release,81,Added the `Fixed in: not applicable` project since this issue never affected any release (only temporarily affected `master` in the 6.26 development cycle).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8245
https://github.com/root-project/root/issues/8250:0,deployability,Updat,Update,0,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:122,deployability,releas,release,122,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:0,safety,Updat,Update,0,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:22,safety,test,testing,22,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:0,security,Updat,Update,0,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:22,testability,test,testing,22,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:24,availability,down,down,24,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:642,availability,down,down,642,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:74,deployability,releas,release,74,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:357,energy efficiency,load,loading,357,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:392,energy efficiency,core,core,392,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:357,performance,load,loading,357,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:660,safety,compl,completely,660,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:504,security,ident,identify,504,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:660,security,compl,completely,660,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates. https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:8,usability,confirm,confirm,8,Can you confirm that `TClass::GetClass` (instead of using the `TClass` constructor) works around the issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:47,integrability,event,event,47,"Yes,. ```. // TClass branchClass(c->GetBranch(""event"")->GetClassName());. // if (branchClass.InheritsFrom(""dicttest::EventMC"")) {. TClass* branchClass = TClass::GetClass(c->GetBranch(""event"")->GetClassName());. if (branchClass->InheritsFrom(""dicttest::EventMC"")) {. ```. works. . This workaround should be enough for my needs (although I can't confirm as of yet that other problems in the full code don't appear), but question: Is this expected? Then the ctor at least needs a warning or something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:117,integrability,Event,EventMC,117,"Yes,. ```. // TClass branchClass(c->GetBranch(""event"")->GetClassName());. // if (branchClass.InheritsFrom(""dicttest::EventMC"")) {. TClass* branchClass = TClass::GetClass(c->GetBranch(""event"")->GetClassName());. if (branchClass->InheritsFrom(""dicttest::EventMC"")) {. ```. works. . This workaround should be enough for my needs (although I can't confirm as of yet that other problems in the full code don't appear), but question: Is this expected? Then the ctor at least needs a warning or something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:184,integrability,event,event,184,"Yes,. ```. // TClass branchClass(c->GetBranch(""event"")->GetClassName());. // if (branchClass.InheritsFrom(""dicttest::EventMC"")) {. TClass* branchClass = TClass::GetClass(c->GetBranch(""event"")->GetClassName());. if (branchClass->InheritsFrom(""dicttest::EventMC"")) {. ```. works. . This workaround should be enough for my needs (although I can't confirm as of yet that other problems in the full code don't appear), but question: Is this expected? Then the ctor at least needs a warning or something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:252,integrability,Event,EventMC,252,"Yes,. ```. // TClass branchClass(c->GetBranch(""event"")->GetClassName());. // if (branchClass.InheritsFrom(""dicttest::EventMC"")) {. TClass* branchClass = TClass::GetClass(c->GetBranch(""event"")->GetClassName());. if (branchClass->InheritsFrom(""dicttest::EventMC"")) {. ```. works. . This workaround should be enough for my needs (although I can't confirm as of yet that other problems in the full code don't appear), but question: Is this expected? Then the ctor at least needs a warning or something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:93,modifiability,Inherit,InheritsFrom,93,"Yes,. ```. // TClass branchClass(c->GetBranch(""event"")->GetClassName());. // if (branchClass.InheritsFrom(""dicttest::EventMC"")) {. TClass* branchClass = TClass::GetClass(c->GetBranch(""event"")->GetClassName());. if (branchClass->InheritsFrom(""dicttest::EventMC"")) {. ```. works. . This workaround should be enough for my needs (although I can't confirm as of yet that other problems in the full code don't appear), but question: Is this expected? Then the ctor at least needs a warning or something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:228,modifiability,Inherit,InheritsFrom,228,"Yes,. ```. // TClass branchClass(c->GetBranch(""event"")->GetClassName());. // if (branchClass.InheritsFrom(""dicttest::EventMC"")) {. TClass* branchClass = TClass::GetClass(c->GetBranch(""event"")->GetClassName());. if (branchClass->InheritsFrom(""dicttest::EventMC"")) {. ```. works. . This workaround should be enough for my needs (although I can't confirm as of yet that other problems in the full code don't appear), but question: Is this expected? Then the ctor at least needs a warning or something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:344,usability,confirm,confirm,344,"Yes,. ```. // TClass branchClass(c->GetBranch(""event"")->GetClassName());. // if (branchClass.InheritsFrom(""dicttest::EventMC"")) {. TClass* branchClass = TClass::GetClass(c->GetBranch(""event"")->GetClassName());. if (branchClass->InheritsFrom(""dicttest::EventMC"")) {. ```. works. . This workaround should be enough for my needs (although I can't confirm as of yet that other problems in the full code don't appear), but question: Is this expected? Then the ctor at least needs a warning or something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:135,deployability,fail,fails,135,"> Is this expected? No. Though `TClass::GetClass()` is the canonical interface, `TClass()` should work, too. I will have a look why it fails in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:69,integrability,interfac,interface,69,"> Is this expected? No. Though `TClass::GetClass()` is the canonical interface, `TClass()` should work, too. I will have a look why it fails in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:69,interoperability,interfac,interface,69,"> Is this expected? No. Though `TClass::GetClass()` is the canonical interface, `TClass()` should work, too. I will have a look why it fails in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:69,modifiability,interfac,interface,69,"> Is this expected? No. Though `TClass::GetClass()` is the canonical interface, `TClass()` should work, too. I will have a look why it fails in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:135,reliability,fail,fails,135,"> Is this expected? No. Though `TClass::GetClass()` is the canonical interface, `TClass()` should work, too. I will have a look why it fails in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:71,reliability,doe,does,71,Not quite. The TClass constructor is reserved for internal purpose and does give a fully functional TClass object. I.e. don't use it :).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:262,deployability,fail,fail,262,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:195,modifiability,inherit,inherited,195,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:42,reliability,doe,does,42,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:238,reliability,doe,doesn,238,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:262,reliability,fail,fail,262,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:108,security,access,access,108,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:286,usability,behavi,behavior,286,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8256:75,interoperability,share,shared,75,"You have the same variable definition in multiple object files of the same shared library. That confuses the linker, don't do that. Nothing to do with ROOT, by the way. Why do you need to have `UNITS` defined in both sources?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:18,modifiability,variab,variable,18,"You have the same variable definition in multiple object files of the same shared library. That confuses the linker, don't do that. Nothing to do with ROOT, by the way. Why do you need to have `UNITS` defined in both sources?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:194,testability,UNIT,UNITS,194,"You have the same variable definition in multiple object files of the same shared library. That confuses the linker, don't do that. Nothing to do with ROOT, by the way. Why do you need to have `UNITS` defined in both sources?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:95,reliability,doe,does,95,This would have been a perfect post for https://root-forum.cern.ch by the way - this certainly does not seem to be a bug in ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:107,availability,state,statements,107,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:209,availability,error,error,209,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:242,availability,state,statement,242,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:102,energy efficiency,draw,draw,102,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:122,energy efficiency,Draw,Draw,122,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:142,energy efficiency,Draw,Draw,142,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:237,energy efficiency,draw,draw,237,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:107,integrability,state,statements,107,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:242,integrability,state,statement,242,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:209,performance,error,error,209,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:40,safety,accid,accident,40,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:209,safety,error,error,209,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:261,testability,understand,understand,261,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:209,usability,error,error,209,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); . or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:177,interoperability,share,share,177,"Sorry I'm lost. What I understand is that you are saying ""the code is broken, I know that, but can you help me because it's broken""? That's likely not what you mean, so can you share a reproducer that is not invalid (by breaking the linking) but demonstrates the issue nonetheless?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:23,testability,understand,understand,23,"Sorry I'm lost. What I understand is that you are saying ""the code is broken, I know that, but can you help me because it's broken""? That's likely not what you mean, so can you share a reproducer that is not invalid (by breaking the linking) but demonstrates the issue nonetheless?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:103,usability,help,help,103,"Sorry I'm lost. What I understand is that you are saying ""the code is broken, I know that, but can you help me because it's broken""? That's likely not what you mean, so can you share a reproducer that is not invalid (by breaking the linking) but demonstrates the issue nonetheless?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:90,availability,error,error,90,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:116,availability,state,statement,116,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:169,availability,state,statement,169,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:192,availability,error,error,192,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:111,energy efficiency,draw,draw,111,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:164,energy efficiency,draw,draw,164,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:116,integrability,state,statement,116,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:169,integrability,state,statement,169,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:90,performance,error,error,90,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:192,performance,error,error,192,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:90,safety,error,error,90,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:192,safety,error,error,192,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:90,usability,error,error,90,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:192,usability,error,error,192,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:151,availability,reliab,reliable,151,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:60,integrability,contract,contract,60,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:60,interoperability,contract,contract,60,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:151,reliability,reliab,reliable,151,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:451,reliability,doe,doesn,451,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:13,testability,understand,understand,13,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:121,usability,behavi,behavior,121,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:95,modifiability,variab,variable,95,"Ok, I see now. Thank you. One more question, why the linker didn't report the re-definition of variable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:311,availability,error,error,311,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:104,deployability,loader,loader,104,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:104,energy efficiency,load,loader,104,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:104,performance,load,loader,104,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:311,performance,error,error,311,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:409,performance,time,time,409,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:166,reliability,doe,doesn,166,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:327,reliability,diagno,diagnostic,327,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:147,safety,compl,complain,147,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:311,safety,error,error,311,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:147,security,compl,complain,147,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:327,testability,diagno,diagnostic,327,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:181,usability,support,supporting,181,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:245,usability,support,supporting,245,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:281,usability,help,helpful,281,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:311,usability,error,error,311,"Excellent question! It would if you had them linked together into one `.so` - but here it's the runtime loader / dynamic linker that would have to complain. And that doesn't - it's supporting this (e.g. `LD_PRELOAD` makes use of this), but it's supporting this in a way that isn't helpful. Bottom line: it's an error without a diagnostic. Let me know if there's a bug in ROOT somewhere and I'll re-open. Next time for these kind of questions I'd appreciate if you could do a post in https://root-forum.cern.ch rather than a bug report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/pull/8257:48,deployability,patch,patch,48,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:199,deployability,patch,patch,199,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:152,integrability,messag,message,152,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:152,interoperability,messag,message,152,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:48,safety,patch,patch,48,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:199,safety,patch,patch,199,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:48,security,patch,patch,48,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:199,security,patch,patch,199,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:5,availability,failur,failures,5,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:5,deployability,fail,failures,5,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:5,performance,failur,failures,5,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:5,reliability,fail,failures,5,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:0,safety,Test,Test,0,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/pull/8257:0,testability,Test,Test,0,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8257
https://github.com/root-project/root/issues/8261:178,availability,error,errors,178,"Hi! I opened a PR for this yesterday:. https://github.com/root-project/root/pull/8248. I assigned you and Lorenzo as reviewers now, so we can hopefully merge it fast and fix the errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:178,performance,error,errors,178,"Hi! I opened a PR for this yesterday:. https://github.com/root-project/root/pull/8248. I assigned you and Lorenzo as reviewers now, so we can hopefully merge it fast and fix the errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:117,safety,review,reviewers,117,"Hi! I opened a PR for this yesterday:. https://github.com/root-project/root/pull/8248. I assigned you and Lorenzo as reviewers now, so we can hopefully merge it fast and fix the errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:178,safety,error,errors,178,"Hi! I opened a PR for this yesterday:. https://github.com/root-project/root/pull/8248. I assigned you and Lorenzo as reviewers now, so we can hopefully merge it fast and fix the errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:117,testability,review,reviewers,117,"Hi! I opened a PR for this yesterday:. https://github.com/root-project/root/pull/8248. I assigned you and Lorenzo as reviewers now, so we can hopefully merge it fast and fix the errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:178,usability,error,errors,178,"Hi! I opened a PR for this yesterday:. https://github.com/root-project/root/pull/8248. I assigned you and Lorenzo as reviewers now, so we can hopefully merge it fast and fix the errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:0,usability,Close,Closed,0,Closed by #8248.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:81,deployability,releas,release,81,Added the `Fixed in: not applicable` project since this issue never affected any release (only temporarily affected `master` in the 6.26 development cycle).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/pull/8263:190,availability,echo,echo,190,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:426,availability,error,error,426,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:562,availability,error,errors,562,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:611,availability,echo,echo,611,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:44,deployability,version,version,44,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:59,deployability,version,version,59,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:135,deployability,Instal,InstalledDir,135,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:121,energy efficiency,model,model,121,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:44,integrability,version,version,44,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:59,integrability,version,version,59,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:483,interoperability,specif,specifier,483,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:44,modifiability,version,version,44,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:59,modifiability,version,version,59,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:426,performance,error,error,426,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:562,performance,error,errors,562,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:443,reliability,doe,does,443,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:426,safety,error,error,426,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:562,safety,error,errors,562,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:121,security,model,model,121,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:433,security,ISO,ISO,433,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:426,usability,error,error,426,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:562,usability,error,errors,562,"```. sftnight@root-ubuntu-2004-3:~$ clang --version. clang version 10.0.0-4ubuntu1 . Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -I /usr/include/python2.7/ -. In file included from <stdin>:1:. In file included from /usr/include/python2.7/Python.h:88:. /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]. register PyObject *obj, /* Object */. ^~~~~~~~~. ... 7 errors generated. sftnight@root-ubuntu-2004-3:~$ echo '#include ""Python.h""' | clang -x c++ -std=c++17 -fsyntax-only -isystem /usr/include/python2.7/ -. sftnight@root-ubuntu-2004-3:~$. ```. I.e. I'd vote for `-isystem` instead of `-I` for the python include path. (We don't want warnings etc from Python headers.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:128,integrability,interfac,interface,128,"Closing this in favour of:. https://github.com/root-project/root/pull/8270. Besides the changes of the aforementioned PR, a new interface in `TInterpreter` will be necessary to use `AddIncludePath` with the `-isystem` flag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:128,interoperability,interfac,interface,128,"Closing this in favour of:. https://github.com/root-project/root/pull/8270. Besides the changes of the aforementioned PR, a new interface in `TInterpreter` will be necessary to use `AddIncludePath` with the `-isystem` flag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:128,modifiability,interfac,interface,128,"Closing this in favour of:. https://github.com/root-project/root/pull/8270. Besides the changes of the aforementioned PR, a new interface in `TInterpreter` will be necessary to use `AddIncludePath` with the `-isystem` flag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8265:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:2,availability,redund,redundant,2,"> redundant, already in base class. Note that the reason clang-tidy is recommending to remove the explicit setting of fType in the constructor is because it is already set in the class own's declaration (it is inlined in the declaration of the fType data member).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:2,deployability,redundan,redundant,2,"> redundant, already in base class. Note that the reason clang-tidy is recommending to remove the explicit setting of fType in the constructor is because it is already set in the class own's declaration (it is inlined in the declaration of the fType data member).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:2,reliability,redundan,redundant,2,"> redundant, already in base class. Note that the reason clang-tidy is recommending to remove the explicit setting of fType in the constructor is because it is already set in the class own's declaration (it is inlined in the declaration of the fType data member).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:2,safety,redund,redundant,2,"> redundant, already in base class. Note that the reason clang-tidy is recommending to remove the explicit setting of fType in the constructor is because it is already set in the class own's declaration (it is inlined in the declaration of the fType data member).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:40,interoperability,format,format,40,"One comment: if we consider that these 'format' changes should not bloat the git history, we could add a `.git-blame-ignore-revs`, see more info:. https://www.moxio.com/blog/43/ignoring-bulk-change-commits-with-git-blame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:4,usability,feedback,feedback,4,any feedback on this PR ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:43,deployability,upgrad,upgrade,43,Idea to wait with cling changes until llvm upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:43,modifiability,upgrad,upgrade,43,Idea to wait with cling changes until llvm upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:45,deployability,upgrad,upgrade,45,> Idea to wait with cling changes until llvm upgrade. Rebased now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8265:45,modifiability,upgrad,upgrade,45,> Idea to wait with cling changes until llvm upgrade. Rebased now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8265
https://github.com/root-project/root/pull/8266:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8266
https://github.com/root-project/root/issues/8267:95,deployability,version,version,95,"One can add . ```. #if !defined(_MSC_VER). #define _MSC_VER 0. #endif. ```. but in the current version there is no undefined behavior, so it is safe. I would even blame the compiller/preprocessor as the offending code . ```. defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. ``` . is very standard. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:87,energy efficiency,current,current,87,"One can add . ```. #if !defined(_MSC_VER). #define _MSC_VER 0. #endif. ```. but in the current version there is no undefined behavior, so it is safe. I would even blame the compiller/preprocessor as the offending code . ```. defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. ``` . is very standard. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:95,integrability,version,version,95,"One can add . ```. #if !defined(_MSC_VER). #define _MSC_VER 0. #endif. ```. but in the current version there is no undefined behavior, so it is safe. I would even blame the compiller/preprocessor as the offending code . ```. defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. ``` . is very standard. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:285,interoperability,standard,standard,285,"One can add . ```. #if !defined(_MSC_VER). #define _MSC_VER 0. #endif. ```. but in the current version there is no undefined behavior, so it is safe. I would even blame the compiller/preprocessor as the offending code . ```. defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. ``` . is very standard. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:95,modifiability,version,version,95,"One can add . ```. #if !defined(_MSC_VER). #define _MSC_VER 0. #endif. ```. but in the current version there is no undefined behavior, so it is safe. I would even blame the compiller/preprocessor as the offending code . ```. defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. ``` . is very standard. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:144,safety,safe,safe,144,"One can add . ```. #if !defined(_MSC_VER). #define _MSC_VER 0. #endif. ```. but in the current version there is no undefined behavior, so it is safe. I would even blame the compiller/preprocessor as the offending code . ```. defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. ``` . is very standard. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:125,usability,behavi,behavior,125,"One can add . ```. #if !defined(_MSC_VER). #define _MSC_VER 0. #endif. ```. but in the current version there is no undefined behavior, so it is safe. I would even blame the compiller/preprocessor as the offending code . ```. defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. ``` . is very standard. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:57,availability,error,error,57,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:68,availability,error,error,68,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:238,deployability,version,version,238,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:230,energy efficiency,current,current,230,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:238,integrability,version,version,238,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:444,interoperability,standard,standard,444,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:238,modifiability,version,version,238,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:57,performance,error,error,57,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:68,performance,error,error,68,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:57,safety,error,error,57,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:68,safety,error,error,68,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:287,safety,safe,safe,287,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:57,usability,error,error,57,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:68,usability,error,error,68,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:89,usability,Visual,Visual,89,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:268,usability,behavi,behavior,268,"If I add those lines in my files (on Ubuntu), I get this error:. `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add. > . > ```. > #if !defined(_MSC_VER). > #define _MSC_VER 0. > #endif. > ```. > . > but in the current version there is no undefined behavior, so it is safe. > I would even blame the compiller/preprocessor as the offending code. > . > ```. > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L. > ```. > . > is very standard. > . > Best regards,. > . > Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:25,usability,prefer,prefer,25,Thanks for the report! I prefer https://github.com/root-project/root/pull/8311 rather than messing with compiler macros - who knows what other code is looking at `#ifdef _MSVC_LANG` which would be misled by us `#define`ing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8267:43,usability,confirm,confirm,43,Can someone who actually sees this warning confirm that PR #8311 is fixing this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8267
https://github.com/root-project/root/issues/8268:27,deployability,contain,containing,27,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:124,integrability,pub,public,124,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:182,integrability,pub,public,182,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:4,performance,I/O,I/O,4,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:170,safety,Test,TestClass,170,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:272,safety,Test,TestClass,272,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:170,testability,Test,TestClass,170,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:272,testability,Test,TestClass,272,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:72,usability,support,supported,72,"The I/O for STL collection containing directly an std::array is not yet supported. . Workaround:. ```. struct StringArray : public std::array<std::string, 2>. {};. class TestClass : public TObject {. ... private:. std::map<StringArray, std::string> test_map_{};. ClassDef(TestClass, 1);. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:202,deployability,Build,BuildOld,202,"Dear Philippe,. Thank you for the solution! . Is there a way to keep backward compatibility with old files created with ROOT 6.18? With this workaround, I'm getting warnings. Warning in <TStreamerInfo::BuildOld>: Cannot convert test_map_ from type: map<array<string,2>,string> to type: map<StringArray,string>, skip element. Cheers,. Viktor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:78,interoperability,compatib,compatibility,78,"Dear Philippe,. Thank you for the solution! . Is there a way to keep backward compatibility with old files created with ROOT 6.18? With this workaround, I'm getting warnings. Warning in <TStreamerInfo::BuildOld>: Cannot convert test_map_ from type: map<array<string,2>,string> to type: map<StringArray,string>, skip element. Cheers,. Viktor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:91,reliability,pra,pragma,91,"There is a chance (you need to verify that it reads the data correctly) that adding. ```. #pragma read sourceClass=""array<string,2>"" targetClass=""StringArray"";. ```. or. ```. #pragma read sourceClass=""map<array<string,2>,string>"" targetClass=""map<StringArray,string>"";. ```. is sufficient.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:176,reliability,pra,pragma,176,"There is a chance (you need to verify that it reads the data correctly) that adding. ```. #pragma read sourceClass=""array<string,2>"" targetClass=""StringArray"";. ```. or. ```. #pragma read sourceClass=""map<array<string,2>,string>"" targetClass=""map<StringArray,string>"";. ```. is sufficient.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:31,testability,verif,verify,31,"There is a chance (you need to verify that it reads the data correctly) that adding. ```. #pragma read sourceClass=""array<string,2>"" targetClass=""StringArray"";. ```. or. ```. #pragma read sourceClass=""map<array<string,2>,string>"" targetClass=""map<StringArray,string>"";. ```. is sufficient.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:149,integrability,sub,submit,149,"Given the time that passed since the last comment, I am closing the issue assuming it has been addressed. Of course, I invite the original author to submit a new one related to the same topic in case the problem is not fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:186,integrability,topic,topic,186,"Given the time that passed since the last comment, I am closing the issue assuming it has been addressed. Of course, I invite the original author to submit a new one related to the same topic in case the problem is not fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:10,performance,time,time,10,"Given the time that passed since the last comment, I am closing the issue assuming it has been addressed. Of course, I invite the original author to submit a new one related to the same topic in case the problem is not fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:139,security,auth,author,139,"Given the time that passed since the last comment, I am closing the issue assuming it has been addressed. Of course, I invite the original author to submit a new one related to the same topic in case the problem is not fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8269:127,performance,time,timer,127,"If I remember correctly, one can connect/disconnect/re-connect to a remote ROOT session, so I think this is the purpose of the timer. But I'll have to cross-check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:5,safety,reme,remember,5,"If I remember correctly, one can connect/disconnect/re-connect to a remote ROOT session, so I think this is the purpose of the timer. But I'll have to cross-check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:80,security,session,session,80,"If I remember correctly, one can connect/disconnect/re-connect to a remote ROOT session, so I think this is the purpose of the timer. But I'll have to cross-check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:205,availability,slo,slot,205,"Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:297,energy efficiency,reduc,reduce,297,"Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:304,performance,overhead,overhead,304,"Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:205,reliability,slo,slot,205,"Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:198,security,sign,signal-slot,198,"Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:256,usability,Stop,StopTimer,256,"Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:220,availability,slo,slot,220,"> Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. Exactly! . > In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local. I'll check how this can be improved",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:312,energy efficiency,reduc,reduce,312,"> Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. Exactly! . > In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local. I'll check how this can be improved",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:319,performance,overhead,overhead,319,"> Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. Exactly! . > In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local. I'll check how this can be improved",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:220,reliability,slo,slot,220,"> Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. Exactly! . > In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local. I'll check how this can be improved",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:213,security,sign,signal-slot,213,"> Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. Exactly! . > In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local. I'll check how this can be improved",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:271,usability,Stop,StopTimer,271,"> Oh, I see, thanks for the explanation. Maybe like this: https://root.cern.ch/root/roottalk/roottalk07/0985.html or https://root-forum.cern.ch/t/root-on-lxplus/5167/5. Exactly! . > In that case, replacing with a signal-slot on TApplicationRemote::Open, or an additional StopTimer() function, might be useful to reduce overhead for cases where one is sure he is going to stay local. I'll check how this can be improved",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/pull/8272:17,deployability,build,builds,17,No RDF on 32 bit builds -- but we don't need RDF for this test anyway,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8272
https://github.com/root-project/root/pull/8272:58,safety,test,test,58,No RDF on 32 bit builds -- but we don't need RDF for this test anyway,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8272
https://github.com/root-project/root/pull/8272:58,testability,test,test,58,No RDF on 32 bit builds -- but we don't need RDF for this test anyway,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8272
https://github.com/root-project/root/pull/8275:4,availability,failur,failure,4,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:4,deployability,fail,failure,4,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:85,deployability,build,build,85,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:119,deployability,build,build,119,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:125,deployability,build,build,125,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:4,performance,failur,failure,4,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:4,reliability,fail,failure,4,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:146,safety,test,test,146,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:209,safety,Permiss,Permission,209,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:146,testability,test,test,146,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8279:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8279
https://github.com/root-project/root/pull/8279:13,deployability,fail,fails,13,"Meh, windows fails anyway because the second snapshot tries to re-create a file that is already opened. I will try to figure out who is holding a file descriptor to the output file exactly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8279
https://github.com/root-project/root/pull/8279:13,reliability,fail,fails,13,"Meh, windows fails anyway because the second snapshot tries to re-create a file that is already opened. I will try to figure out who is holding a file descriptor to the output file exactly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8279
https://github.com/root-project/root/issues/8281:84,deployability,version,versions,84,"Linked PR backports the fix to 6.24, let me know if I should backport to other ROOT versions as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:84,integrability,version,versions,84,"Linked PR backports the fix to 6.24, let me know if I should backport to other ROOT versions as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:84,modifiability,version,versions,84,"Linked PR backports the fix to 6.24, let me know if I should backport to other ROOT versions as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:41,deployability,version,versions,41,"Probably to all actively maintained ROOT versions, as they all have this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:41,integrability,version,versions,41,"Probably to all actively maintained ROOT versions, as they all have this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:25,modifiability,maintain,maintained,25,"Probably to all actively maintained ROOT versions, as they all have this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:41,modifiability,version,versions,41,"Probably to all actively maintained ROOT versions, as they all have this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:25,safety,maintain,maintained,25,"Probably to all actively maintained ROOT versions, as they all have this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/pull/8282:607,interoperability,bind,bindings,607,"## DeepCode's analysis on [#9613dd](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) found:. - :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Use Py_XDECREF instead of Py_DECREF Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L43"">Pythonize.cxx:43</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L46"">Pythonize.cxx:46</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L67"">Pythonize.cxx:67</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2Fbindings%2Fpyroot%2Fcppyy%2FCPyCppyy%2Fsrc%2FPythonize.cxx/cpp%2Fdc%2FApiUpdate/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8282
https://github.com/root-project/root/pull/8282:783,interoperability,bind,bindings,783,"## DeepCode's analysis on [#9613dd](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) found:. - :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Use Py_XDECREF instead of Py_DECREF Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L43"">Pythonize.cxx:43</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L46"">Pythonize.cxx:46</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L67"">Pythonize.cxx:67</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2Fbindings%2Fpyroot%2Fcppyy%2FCPyCppyy%2Fsrc%2FPythonize.cxx/cpp%2Fdc%2FApiUpdate/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8282
https://github.com/root-project/root/pull/8282:959,interoperability,bind,bindings,959,"## DeepCode's analysis on [#9613dd](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) found:. - :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Use Py_XDECREF instead of Py_DECREF Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L43"">Pythonize.cxx:43</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L46"">Pythonize.cxx:46</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L67"">Pythonize.cxx:67</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2Fbindings%2Fpyroot%2Fcppyy%2FCPyCppyy%2Fsrc%2FPythonize.cxx/cpp%2Fdc%2FApiUpdate/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8282
https://github.com/root-project/root/pull/8282:607,modifiability,bind,bindings,607,"## DeepCode's analysis on [#9613dd](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) found:. - :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Use Py_XDECREF instead of Py_DECREF Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L43"">Pythonize.cxx:43</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L46"">Pythonize.cxx:46</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L67"">Pythonize.cxx:67</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2Fbindings%2Fpyroot%2Fcppyy%2FCPyCppyy%2Fsrc%2FPythonize.cxx/cpp%2Fdc%2FApiUpdate/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8282
https://github.com/root-project/root/pull/8282:783,modifiability,bind,bindings,783,"## DeepCode's analysis on [#9613dd](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) found:. - :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Use Py_XDECREF instead of Py_DECREF Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L43"">Pythonize.cxx:43</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L46"">Pythonize.cxx:46</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L67"">Pythonize.cxx:67</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2Fbindings%2Fpyroot%2Fcppyy%2FCPyCppyy%2Fsrc%2FPythonize.cxx/cpp%2Fdc%2FApiUpdate/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8282
https://github.com/root-project/root/pull/8282:959,modifiability,bind,bindings,959,"## DeepCode's analysis on [#9613dd](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) found:. - :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Use Py_XDECREF instead of Py_DECREF Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L43"">Pythonize.cxx:43</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L46"">Pythonize.cxx:46</a></li> <li><a href=""https://github.com/root-project/root/blob/9613ddc3eb9201b183297ef887de684a43af0d50/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L67"">Pythonize.cxx:67</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2Fbindings%2Fpyroot%2Fcppyy%2FCPyCppyy%2Fsrc%2FPythonize.cxx/cpp%2Fdc%2FApiUpdate/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/a2814390d0cee37a93f8970d08b613536eb24148/root-project/root/9613ddc3eb9201b183297ef887de684a43af0d50/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8282
https://github.com/root-project/root/pull/8285:152,integrability,Event,Events,152,"Converted to draft: after this change, using `ntuple_info.C` from https://github.com/jblomer/iotools at the interpreter was no longer able to open the `Events` NanoAOD RNTuple (it succeeded as a compiled gtest however). ```. C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:275,integrability,Event,Events,275,"Converted to draft: after this change, using `ntuple_info.C` from https://github.com/jblomer/iotools at the interpreter was no longer able to open the `Events` NanoAOD RNTuple (it succeeded as a compiled gtest however). ```. C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:229,safety,except,exception,229,"Converted to draft: after this change, using `ntuple_info.C` from https://github.com/jblomer/iotools at the interpreter was no longer able to open the `Events` NanoAOD RNTuple (it succeeded as a compiled gtest however). ```. C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:338,security,access,access,338,"Converted to draft: after this change, using `ntuple_info.C` from https://github.com/jblomer/iotools at the interpreter was no longer able to open the `Events` NanoAOD RNTuple (it succeeded as a compiled gtest however). ```. C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1890,availability,Error,Error,1890,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:0,deployability,Observ,Observing,0,"Observing some strange behaviour when running ROOT from the command line... **[edit]** which was from not correctly setting the offset if the class name wasn't `RNTuple` here: https://github.com/root-project/root/blob/28ea81b592551146f1ea6d34b6f2794655078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:812,deployability,continu,continue,812,"Observing some strange behaviour when running ROOT from the command line... **[edit]** which was from not correctly setting the offset if the class name wasn't `RNTuple` here: https://github.com/root-project/root/blob/28ea81b592551146f1ea6d34b6f2794655078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:906,integrability,Event,Events,906,"Observing some strange behaviour when running ROOT from the command line... **[edit]** which was from not correctly setting the offset if the class name wasn't `RNTuple` here: https://github.com/root-project/root/blob/28ea81b592551146f1ea6d34b6f2794655078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1249,integrability,Event,Events,1249,"078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1332,integrability,Event,Events,1332,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1984,integrability,Event,Events,1984,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1064,modifiability,Paramet,ParameterSets,1064,"e... **[edit]** which was from not correctly setting the offset if the class name wasn't `RNTuple` here: https://github.com/root-project/root/blob/28ea81b592551146f1ea6d34b6f2794655078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Exp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1481,modifiability,Paramet,ParameterSetse,1481,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1890,performance,Error,Error,1890,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1890,safety,Error,Error,1890,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:2047,security,access,access,2047,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:0,testability,Observ,Observing,0,"Observing some strange behaviour when running ROOT from the command line... **[edit]** which was from not correctly setting the offset if the class name wasn't `RNTuple` here: https://github.com/root-project/root/blob/28ea81b592551146f1ea6d34b6f2794655078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:23,usability,behavi,behaviour,23,"Observing some strange behaviour when running ROOT from the command line... **[edit]** which was from not correctly setting the offset if the class name wasn't `RNTuple` here: https://github.com/root-project/root/blob/28ea81b592551146f1ea6d34b6f2794655078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:60,usability,command,command,60,"Observing some strange behaviour when running ROOT from the command line... **[edit]** which was from not correctly setting the offset if the class name wasn't `RNTuple` here: https://github.com/root-project/root/blob/28ea81b592551146f1ea6d34b6f2794655078185/tree/ntuple/v7/src/RMiniFile.cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:1890,usability,Error,Error,1890,".cxx#L965-L967. <details>. <summary> Bug symptoms </summary>. If the className check is commented out we get the following (expected) output: . ```cpp. offset += key.GetHeaderSize();. ReadBuffer(&name, 1, offset);. ReadBuffer(&name, name.GetSize(), offset);. std::cout << ""got class name size: "" << std::to_string(name.GetSize()) << ""\n"";. auto className = std::string(std::string_view(name.fData, name.fLName));. std::cout << ""got class name: "" << className << ""\n"";. //if (className != ""ROOT::Experimental::RNTuple"") {. // continue;. //}. ```. commented out: . ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got name: tag. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: ParameterSets. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: MetaData. got class name size: 28. got class name: ROOT::Experimental::RNTuple. got name: Events. ```. uncommented:. ```. root [1] ntuple_info(""test80X_NANO_rntuple.root"", ""Events""). got class name size: 11. got class name: TObjString. got class name size: 33. got class name: class�:iyK�Qqc�d. got class name size: 80. ParameterSetse: OT::Experimental::RNTuple. object title�:iyK�Lqjd. got class name size: 102. got class name: rSets. object title�:iyK�LqjdROOT::Experimental::RNTuplMetaData. object title�. got class name size: 77. got class name: qjdROOT::Experimental::RNTuplMetaData. object title�:iyK�J. got class name size: 85. got class name: uplMetaData. object title�:iyK�J�AdROOT::Experimental::RNTupleEve. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleProper(std::string_view) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RMiniFile.cxx:983]. ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/issues/8292:145,usability,support,support,145,"I also got a server with RedHat 8.3 that is not connected to the Internet. I also went through all the steps described above. So I also strongly support the creation of a ""localonly"" option in CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:80,deployability,instal,installed,80,@georgtroska please note that you do not need to do -Dimt=OFF if tbb is already installed on your system.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:477,availability,error,error,477,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:238,deployability,stack,stackoverflow,238,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:323,deployability,automat,automatically-prevent-fails-if,323,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:483,integrability,messag,message,483,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:483,interoperability,messag,message,483,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:38,performance,network,network,38,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:155,performance,network,network,155,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:191,performance,network,network,191,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:477,performance,error,error,477,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:19,reliability,doe,doesn,19,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:345,reliability,fail,fails-if,345,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:176,safety,detect,detect,176,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:337,safety,prevent,prevent-fails-if,337,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:477,safety,error,error,477,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:38,security,network,network,38,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:46,security,access,access,46,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:155,security,network,network,155,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:163,security,access,access,163,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:176,security,detect,detect,176,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:191,security,network,network,191,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:337,security,preven,prevent-fails-if,337,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:323,testability,automat,automatically-prevent-fails-if,323,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:477,usability,error,error,477,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:509,usability,help,helpful,509,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:499,availability,error,error,499,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:254,deployability,stack,stackoverflow,254,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:339,deployability,automat,automatically-prevent-fails-if,339,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:505,integrability,messag,message,505,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:505,interoperability,messag,message,505,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:48,performance,network,network,48,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:171,performance,network,network,171,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:207,performance,network,network,207,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:499,performance,error,error,499,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:29,reliability,doe,doesn,29,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:361,reliability,fail,fails-if,361,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:192,safety,detect,detect,192,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:353,safety,prevent,prevent-fails-if,353,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:499,safety,error,error,499,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:48,security,network,network,48,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:56,security,access,access,56,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:171,security,network,network,171,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:179,security,access,access,179,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:192,security,detect,detect,192,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:207,security,network,network,207,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:353,security,preven,prevent-fails-if,353,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:339,testability,automat,automatically-prevent-fails-if,339,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:499,usability,error,error,499,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:531,usability,help,helpful,531,"> . > . > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... > . > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. > . > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. > . > Is that an acceptable approach? Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:276,deployability,instal,installation,276,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:568,deployability,instal,installation,568,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:634,deployability,instal,installation,634,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:106,modifiability,pac,packages,106,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:217,modifiability,pac,packages,217,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:608,modifiability,pac,packages,608,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:41,performance,time,time,41,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:423,performance,network,network,423,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:169,reliability,doe,does,169,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:455,reliability,doe,does,455,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:464,safety,detect,detect,464,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:666,safety,detect,detect,666,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:691,safety,valid,valid,691,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:137,security,access,access,137,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:245,security,access,access,245,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:391,security,firewal,firewall,391,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:423,security,network,network,423,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:464,security,detect,detect,464,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:666,security,detect,detect,666,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:64,testability,understand,understand,64,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:497,testability,understand,understand,497,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:555,testability,simpl,simple,555,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:555,usability,simpl,simple,555,"Hi,. thank you very much, that you spend time on this! I do not understand some things:. * In the Doc the packages that do need internet access are usually named - this does not seem to be correct. * Furthermore, all packages that need internet access should be turned off in installation by default - they are not. * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?). * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:81,availability,ping,ping,81,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:254,deployability,fail,fail-on-missing,254,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:398,deployability,fail,fail-on-missing,398,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:418,deployability,automat,automatically,418,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:272,integrability,messag,message,272,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:485,integrability,messag,message,485,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:272,interoperability,messag,message,272,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:485,interoperability,messag,message,485,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:40,performance,network,network,40,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:579,performance,CACH,CACHE,579,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:658,performance,CACH,CACHE,658,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:832,performance,time,time,832,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:254,reliability,fail,fail-on-missing,254,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:398,reliability,fail,fail-on-missing,398,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:879,safety,compl,complexify,879,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:40,security,network,network,40,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:467,security,access,access,467,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:879,security,compl,complexify,879,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:418,testability,automat,automatically,418,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:73,usability,COMMAND,COMMAND,73,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:493,usability,STATU,STATUS,493,"There is a ugly workaround to check for network:. ```. execute_process(. COMMAND ping www.github.com -n 2 -w 1000. RESULT_VARIABLE NO_CONNECTION. ). ```. And then use `NO_CONNECTION` like for example:. ```. if(builtin_tbb). if(NO_CONNECTION EQUAL 1). if(fail-on-missing). message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""). else(). message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). endif(). else(). ... ```. I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:25,availability,ping,ping,25,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:287,availability,ping,ping,287,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:442,integrability,messag,message,442,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:442,interoperability,messag,message,442,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:243,performance,network,network,243,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:538,performance,CACH,CACHE,538,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:619,performance,CACH,CACHE,619,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:785,performance,time,time,785,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:48,reliability,doe,does,48,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:832,safety,compl,complexify,832,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:243,security,network,network,243,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:832,security,compl,complexify,832,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:279,usability,COMMAND,COMMAND,279,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:450,usability,STATU,STATUS,450,"Hi,. It is easy to bring ping to work! But that does not necessarily mean that wget works. Georg. Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:. > . > ﻿. > There is a ugly workaround to check for network:. > . > execute_process(. > COMMAND ping www.github.com -n 2 -w 1000. > RESULT_VARIABLE NO_CONNECTION. > ). > And then use NO_CONNECTION like for example:. > . > if(NO_CONNECTION EQUAL 1). > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""). > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE). > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE). > else(). > ... > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:59,availability,error,error,59,"@georgtroska you're right, but the issue says ""Compilation error on redhat 8.3 / no internet"" so I'm trying to solve the issue with ""no internet"". Am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:59,performance,error,error,59,"@georgtroska you're right, but the issue says ""Compilation error on redhat 8.3 / no internet"" so I'm trying to solve the issue with ""no internet"". Am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:59,safety,error,error,59,"@georgtroska you're right, but the issue says ""Compilation error on redhat 8.3 / no internet"" so I'm trying to solve the issue with ""no internet"". Am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:59,usability,error,error,59,"@georgtroska you're right, but the issue says ""Compilation error on redhat 8.3 / no internet"" so I'm trying to solve the issue with ""no internet"". Am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:61,availability,ping,ping,61,"Hello Bertrand @bellenot. I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:207,availability,ping,ping,207,"Hello Bertrand @bellenot. I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:269,availability,Ping,Ping,269,"Hello Bertrand @bellenot. I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:403,availability,ping,ping,403,"Hello Bertrand @bellenot. I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:386,safety,test,test,386,"Hello Bertrand @bellenot. I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:179,security,firewal,firewall,179,"Hello Bertrand @bellenot. I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:386,testability,test,test,386,"Hello Bertrand @bellenot. I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:57,interoperability,platform,platform,57,"Thanks @georgtroska , then I'll try to come with a cross-platform solution (there is no `wget` on Windows)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:16,availability,down,downloaded,16,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:881,deployability,version,version,881,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1013,deployability,build,build,1013,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:881,integrability,version,version,881,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:881,modifiability,version,version,881,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:152,safety,test,test,152,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:199,safety,test,test,199,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:439,safety,Detect,Detecting,439,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:473,safety,Detect,Detecting,473,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:514,safety,Detect,Detecting,514,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:547,safety,Detect,Detecting,547,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:694,safety,Detect,Detecting,694,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:730,safety,Detect,Detecting,730,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:773,safety,Detect,Detecting,773,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:808,safety,Detect,Detecting,808,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:257,security,ident,identification,257,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:306,security,ident,identification,306,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:439,security,Detect,Detecting,439,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:473,security,Detect,Detecting,473,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:514,security,Detect,Detecting,514,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:547,security,Detect,Detecting,547,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:694,security,Detect,Detecting,694,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:730,security,Detect,Detecting,730,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:773,security,Detect,Detecting,773,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:808,security,Detect,Detecting,808,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:152,testability,test,test,152,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:199,testability,test,test,199,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:923,usability,command,command,923,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git. ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:41,modifiability,paramet,parameter,41,"Yeah, sorry, I overlooked at the timeout parameter (100 seconds instead of 100 milliseconds). I'll commit the necessary changes (5 seconds) in a few minutes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:33,performance,time,timeout,33,"Yeah, sorry, I overlooked at the timeout parameter (100 seconds instead of 100 milliseconds). I'll commit the necessary changes (5 seconds) in a few minutes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:33,safety,timeout,timeout,33,"Yeah, sorry, I overlooked at the timeout parameter (100 seconds instead of 100 milliseconds). I'll commit the necessary changes (5 seconds) in a few minutes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:732,availability,echo,echo,732,"Hi,. Ok I went though your commits:. It seems that the default timeout for wget is 900s !! Because pf this. $ wget https://root.cern.ch/files/dummy.txt. --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: . $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:63,performance,time,timeout,63,"Hi,. Ok I went though your commits:. It seems that the default timeout for wget is 900s !! Because pf this. $ wget https://root.cern.ch/files/dummy.txt. --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: . $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:388,performance,time,time,388,"Hi,. Ok I went though your commits:. It seems that the default timeout for wget is 900s !! Because pf this. $ wget https://root.cern.ch/files/dummy.txt. --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: . $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:424,performance,time,timeout,424,"Hi,. Ok I went though your commits:. It seems that the default timeout for wget is 900s !! Because pf this. $ wget https://root.cern.ch/files/dummy.txt. --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: . $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:63,safety,timeout,timeout,63,"Hi,. Ok I went though your commits:. It seems that the default timeout for wget is 900s !! Because pf this. $ wget https://root.cern.ch/files/dummy.txt. --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: . $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:424,safety,timeout,timeout,424,"Hi,. Ok I went though your commits:. It seems that the default timeout for wget is 900s !! Because pf this. $ wget https://root.cern.ch/files/dummy.txt. --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: . $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:713,security,SSL,SSL,713,"Hi,. Ok I went though your commits:. It seems that the default timeout for wget is 900s !! Because pf this. $ wget https://root.cern.ch/files/dummy.txt. --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: . $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1211,availability,echo,echo,1211,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1285,availability,error,error,1285,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1358,availability,error,error,1358,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1378,availability,error,error---for,1378,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1471,availability,error,error,1471,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1488,availability,failur,failure,1488,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1516,availability,failur,failure,1516,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1560,availability,failur,failure,1560,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1580,availability,error,errors,1580,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1607,availability,error,error,1607,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:786,deployability,version,version,786,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1488,deployability,fail,failure,1488,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1516,deployability,fail,failure,1516,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1560,deployability,fail,failure,1560,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:786,integrability,version,version,786,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1571,integrability,Protocol,Protocol,1571,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1571,interoperability,Protocol,Protocol,1571,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:786,modifiability,version,version,786,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:886,performance,time,timeout,886,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1285,performance,error,error,1285,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1358,performance,error,error,1358,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1378,performance,error,error---for,1378,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1467,performance,I/O,I/O,1467,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1471,performance,error,error,1471,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1480,performance,Network,Network,1480,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1488,performance,failur,failure,1488,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1516,performance,failur,failure,1516,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1560,performance,failur,failure,1560,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1580,performance,error,errors,1580,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1607,performance,error,error,1607,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1488,reliability,fail,failure,1488,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1516,reliability,fail,failure,1516,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1560,reliability,fail,failure,1560,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:28,safety,detect,detects,28,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:104,safety,test,test,104,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:344,safety,Detect,Detecting,344,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:378,safety,Detect,Detecting,378,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:419,safety,Detect,Detecting,419,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:452,safety,Detect,Detecting,452,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:599,safety,Detect,Detecting,599,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:635,safety,Detect,Detecting,635,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:678,safety,Detect,Detecting,678,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:713,safety,Detect,Detecting,713,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:886,safety,timeout,timeout,886,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1285,safety,error,error,1285,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1358,safety,error,error,1358,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1378,safety,error,error---for,1378,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1471,safety,error,error,1471,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1580,safety,error,errors,1580,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1607,safety,error,error,1607,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:28,security,detect,detects,28,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:162,security,ident,identification,162,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:211,security,ident,identification,211,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:344,security,Detect,Detecting,344,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:378,security,Detect,Detecting,378,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:419,security,Detect,Detecting,419,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:452,security,Detect,Detecting,452,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:599,security,Detect,Detecting,599,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:635,security,Detect,Detecting,635,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:678,security,Detect,Detecting,678,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:713,security,Detect,Detecting,713,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1175,security,SSL,SSL,1175,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1413,security,command-lin,command-line,1413,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1480,security,Network,Network,1480,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1499,security,SSL,SSL,1499,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1536,security,password,password,1536,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1545,security,authenticat,authentication,1545,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1760,security,firewal,firewall,1760,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:104,testability,test,test,104,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1503,testability,verif,verification,1503,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1246,usability,STATU,STATUS,1246,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1285,usability,error,error,1285,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1358,usability,error,error,1358,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1378,usability,error,error---for,1378,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1413,usability,command,command-line,1413,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1471,usability,error,error,1471,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1527,usability,User,Username,1527,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1580,usability,error,errors,1580,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1607,usability,error,error,1607,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1641,usability,STATU,STATUS,1641,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1664,usability,STATU,STATUS,1664,"Hi,. still not working:. It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection. -- The C compiler identification is GNU 8.3.1. -- The CXX compiler identification is GNU 8.3.1. -- Check for working C compiler: /usr/bin/cc. -- Check for working C compiler: /usr/bin/cc -- works. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Detecting C compile features. -- Detecting C compile features - done. -- Check for working CXX compiler: /usr/bin/c++. -- Check for working CXX compiler: /usr/bin/c++ -- works. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.27.0""). -- Checking internet connectivity... -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt. --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt. Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6. Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. Unable to establish SSL connection. ussapc@warlv0010/~$ echo $? 4. man of wget says:. EXIT STATUS. Wget may return one of several error codes if it encounters problems. 0 No problems occurred. 1 Generic error code. 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc... 3 File I/O error. 4 Network failure. 5 SSL verification failure. 6 Username/password authentication failure. 7 Protocol errors. 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:64,availability,down,download,64,"OK, then I will change the code. Note that I have to physically download a file on the client to have a return code of 0, and then delete it. That's why I wanted to do it differently, but anyway, if it's needed then let's do it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:72,security,ssh,ssh,72,"Done. Can you try again? (sorry but since I connect on the machine with ssh, I can't unplug it...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:13,reliability,doe,doesn,13,"(btw `CMake` doesn't necessarily uses `wget`, so the return codes don't necessarily match)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:58,deployability,build,build,58,"Hello Bertrand @bellenot,. much better but now. $ cmake --build . -- -j8. seems to hang at RIO??? [...]. [ 81%] Built target setDict. [ 81%] Built target unordered_setDict. [ 81%] Built target multisetDict. [ 81%] Built target unordered_multisetDict. [ 81%] Built target root.exe. [ 81%] Built target G__RIO. [ 82%] Built target RIO. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:195,deployability,build,build,195,"No, it *built* target RIO and hangs then. Two options: check with `ps -feH` to see what's happening ""below"" `cmake`, or press <kbd>Ctrl</kbd><kbd>C</kbd> and paste what `cmake` shows as canceled build steps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:186,usability,cancel,canceled,186,"No, it *built* target RIO and hangs then. Two options: check with `ps -feH` to see what's happening ""below"" `cmake`, or press <kbd>Ctrl</kbd><kbd>C</kbd> and paste what `cmake` shows as canceled build steps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:22,deployability,fail,failing,22,"So at least `clad` is failing for me, but it doesn't hang after `RIO`. Can you try to disable it? (I didn't check the LLVM/Clang/Cling external projects...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:22,reliability,fail,failing,22,"So at least `clad` is failing for me, but it doesn't hang after `RIO`. Can you try to disable it? (I didn't check the LLVM/Clang/Cling external projects...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:45,reliability,doe,doesn,45,"So at least `clad` is failing for me, but it doesn't hang after `RIO`. Can you try to disable it? (I didn't check the LLVM/Clang/Cling external projects...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1196,availability,down,downloads,1196,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:240,deployability,build,build,240,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:525,deployability,build,build,525,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1186,deployability,automat,automatic,1186,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1100,energy efficiency,core,core,1100,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:492,interoperability,plug,plugins,492,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:560,interoperability,plug,plugins,560,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:704,interoperability,plug,plugins,704,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:873,interoperability,plug,plugins,873,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:675,safety,test,test,675,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:844,safety,test,test,844,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:675,testability,test,test,675,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:844,testability,test,test,844,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1186,testability,automat,automatic,1186,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:486,usability,tool,tools,486,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:554,usability,tool,tools,554,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:698,usability,tool,tools,698,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:867,usability,tool,tools,867,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines. [...]. ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --. ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake. ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all. ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/. ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam. ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi. ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad. ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git. [...]. seems the automatic downloads are hidden in a lot of places :-). Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:46,deployability,version,version,46,"Hi @georgtroska , did you try with the latest version (I disabled clad)? You might have to delete the `interpreter/cling/tools/plugins/clad` directory or start from scratch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:46,integrability,version,version,46,"Hi @georgtroska , did you try with the latest version (I disabled clad)? You might have to delete the `interpreter/cling/tools/plugins/clad` directory or start from scratch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:127,interoperability,plug,plugins,127,"Hi @georgtroska , did you try with the latest version (I disabled clad)? You might have to delete the `interpreter/cling/tools/plugins/clad` directory or start from scratch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:46,modifiability,version,version,46,"Hi @georgtroska , did you try with the latest version (I disabled clad)? You might have to delete the `interpreter/cling/tools/plugins/clad` directory or start from scratch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:121,usability,tool,tools,121,"Hi @georgtroska , did you try with the latest version (I disabled clad)? You might have to delete the `interpreter/cling/tools/plugins/clad` directory or start from scratch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:19,deployability,version,version,19,no I used the same version as before. I need to redownload the zip and start from scratch (can't do `git fetch` cause there is no internet :-) ). Georg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:19,integrability,version,version,19,no I used the same version as before. I need to redownload the zip and start from scratch (can't do `git fetch` cause there is no internet :-) ). Georg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:19,modifiability,version,version,19,no I used the same version as before. I need to redownload the zip and start from scratch (can't do `git fetch` cause there is no internet :-) ). Georg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:151,deployability,build,build,151,@georgtroska note that deleting the clad directory and disabling the `clad` option should do it. But it would be nice to see if my PR really allows to build ROOT without internet connection ;-).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:55,availability,down,downloaded,55,"Hi, @bellenot, Hi @Axel-Naumann,. still not running, I downloaded the latest version from that branch and started from scratch, but it still tries to download clad. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:150,availability,down,download,150,"Hi, @bellenot, Hi @Axel-Naumann,. still not running, I downloaded the latest version from that branch and started from scratch, but it still tries to download clad. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:77,deployability,version,version,77,"Hi, @bellenot, Hi @Axel-Naumann,. still not running, I downloaded the latest version from that branch and started from scratch, but it still tries to download clad. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:77,integrability,version,version,77,"Hi, @bellenot, Hi @Axel-Naumann,. still not running, I downloaded the latest version from that branch and started from scratch, but it still tries to download clad. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:77,modifiability,version,version,77,"Hi, @bellenot, Hi @Axel-Naumann,. still not running, I downloaded the latest version from that branch and started from scratch, but it still tries to download clad. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:79,integrability,sub,subdirectory,79,"@georgtroska So disabling `clad` was not enough, one should not add the `clad` subdirectory. It should be fixed now (at least it works on Windows). Please let me know, so I can merge the PR. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:425,availability,error,error,425,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:547,availability,Error,Error,547,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:644,availability,Error,Error,644,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:768,availability,Error,Error,768,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:45,deployability,Build,Building,45,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:239,deployability,depend,dependencies,239,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:514,deployability,build,build,514,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:65,energy efficiency,core,core,65,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:474,energy efficiency,core,core,474,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:599,energy efficiency,core,core,599,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:239,integrability,depend,dependencies,239,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:288,interoperability,share,shared,288,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:239,modifiability,depend,dependencies,239,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:425,performance,error,error,425,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:547,performance,Error,Error,547,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:644,performance,Error,Error,644,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:768,performance,Error,Error,768,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:239,safety,depend,dependencies,239,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:425,safety,error,error,425,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:547,safety,Error,Error,547,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:644,safety,Error,Error,644,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:768,safety,Error,Error,768,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:239,testability,depend,dependencies,239,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:425,usability,error,error,425,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:451,usability,statu,status,451,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:547,usability,Error,Error,547,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:644,usability,Error,Error,644,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:768,usability,Error,Error,768,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 77%] Linking CXX executable src/rootcling_stage1. [ 77%] Built target MetaCling. Scanning dependencies of target Cling. [ 77%] Linking CXX shared library ../../../lib/libCling.so. /usr/bin/ld: cannot find -lcladPlugin. /usr/bin/ld: cannot find -lcladDifferentiator. collect2: error: ld returned 1 exit status. gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2. gmake[1]: *** Waiting for unfinished jobs.... [ 77%] Built target rootcling_stage1. gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:21,deployability,build,build,21,@georgtroska did you build from scratch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:27,deployability,build,build-dir,27,"@bellenot . yes, rm -rf on build-dir. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:81,energy efficiency,core,core,81,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:200,energy efficiency,optim,optimizations,200,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:170,interoperability,plug,plugins,170,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:970,modifiability,variab,variable,970,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1009,modifiability,variab,variable,1009,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:149,performance,content,content,149,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:200,performance,optimiz,optimizations,200,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:679,safety,compl,completely,679,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:679,security,compl,completely,679,"@bellenot. I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]. [...]. //# We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). if (clad). if (APPLE). set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator). elseif(MSVC). set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator). set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""). else(). set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive). endif(). endif(). [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:. I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:176,modifiability,variab,variable,176,"> I checked your code... you did already. > . > I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? I'm investigating, but since I work on Windows and ssh on Linux, it's difficult to disconnect it from internet ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:215,modifiability,variab,variable,215,"> I checked your code... you did already. > . > I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? I'm investigating, but since I work on Windows and ssh on Linux, it's difficult to disconnect it from internet ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:327,security,ssh,ssh,327,"> I checked your code... you did already. > . > I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet? I'm investigating, but since I work on Windows and ssh on Linux, it's difficult to disconnect it from internet ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:21,safety,test,testfile,21,or simply delete the testfile on the server :-).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:3,testability,simpl,simply,3,or simply delete the testfile on the server :-).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:21,testability,test,testfile,21,or simply delete the testfile on the server :-).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:3,usability,simpl,simply,3,or simply delete the testfile on the server :-).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:415,deployability,build,build,415,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:151,energy efficiency,core,core,151,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:295,energy efficiency,optim,optimizations,295,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:113,integrability,messag,message,113,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:339,integrability,messag,message,339,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:113,interoperability,messag,message,113,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:265,interoperability,plug,plugins,265,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:339,interoperability,messag,message,339,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:244,performance,content,content,244,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:295,performance,optimiz,optimizations,295,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:529,performance,Performing Test,Performing Test,529,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:540,safety,Test,Test,540,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:540,testability,Test,Test,540,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:121,usability,STATU,STATUS,121,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:347,usability,STATU,STATUS,347,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:529,usability,Perform,Performing,529,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:. ```. # We need to paste the content of the cling plugins disabling link symbol optimizations. set(CLING_PLUGIN_LINK_LIBS). message(STATUS ""clad = ${clad}""). if (clad). ```. and type `cmake .` in the build directory? You should see something like:. ```. -- [...]. -- And then fallback to: 'c++'. -- clad = OFF. -- Performing Test found_stdstringview. -- [...]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:27,deployability,version,version,27,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:41,deployability,VERSION,VERSION,41,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:460,deployability,Fail,Failed,460,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:27,integrability,version,version,27,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:41,integrability,VERSION,VERSION,41,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:27,modifiability,version,version,27,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:41,modifiability,VERSION,VERSION,41,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:382,performance,Performing Test,Performing Test,382,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:422,performance,Performing Test,Performing Test,422,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:471,performance,Performing Test,Performing Test,471,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:460,reliability,Fail,Failed,460,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:393,safety,Test,Test,393,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:433,safety,Test,Test,433,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:482,safety,Test,Test,482,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:393,testability,Test,Test,393,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:433,testability,Test,Test,433,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:482,testability,Test,Test,482,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:382,usability,Perform,Performing,382,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:422,usability,Perform,Performing,422,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:471,usability,Perform,Performing,471,@bellenot . yes:. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime. -- And then fallback to: 'c++'. -- clad=OFF. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:70,availability,error,error,70,"@georgtroska Good, but then I don't understand why you got the linker error... I'll try to investigate more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:70,performance,error,error,70,"@georgtroska Good, but then I don't understand why you got the linker error... I'll try to investigate more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:70,safety,error,error,70,"@georgtroska Good, but then I don't understand why you got the linker error... I'll try to investigate more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:36,testability,understand,understand,36,"@georgtroska Good, but then I don't understand why you got the linker error... I'll try to investigate more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:70,usability,error,error,70,"@georgtroska Good, but then I don't understand why you got the linker error... I'll try to investigate more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:37,availability,sli,slightly,37,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:15,deployability,updat,updated,15,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:37,reliability,sli,slightly,37,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:15,safety,updat,updated,15,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:56,safety,test,test,56,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:15,security,updat,updated,15,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:56,testability,test,test,56,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:126,testability,understand,understand,126,"@georgtroska I updated the PR with a slightly different test for clad, and added a protection for the linker (even if I don't understand why it still tries to link with `clad=OFF`...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:231,availability,error,error,231,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:483,availability,Error,Error,483,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:569,availability,Error,Error,569,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:609,availability,Error,Error,609,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:63,deployability,Build,Building,63,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:418,deployability,build,build,418,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:231,performance,error,error,231,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:483,performance,Error,Error,483,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:569,performance,Error,Error,569,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:609,performance,Error,Error,609,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:231,safety,error,error,231,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:483,safety,Error,Error,483,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:569,safety,Error,Error,569,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:609,safety,Error,Error,609,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:231,usability,error,error,231,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:483,usability,Error,Error,483,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:569,usability,Error,Error,569,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:609,usability,Error,Error,609,@bellenot:. Another one... [ 64%] Built target G__Netx. [ 64%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /srv/ussapc/home/ussapc/sw/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: fatal error: XrdClient/XrdClient.hh: No such file or directory. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminated. gmake[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:33171: net/netx/CMakeFiles/Netx.dir/all] Error 2. gmake: *** [Makefile:152: all] Error 2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:354,interoperability,share,shared,354,@georgtroska can you give me the result of `cmake .`? I.e. this line: . ```. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_xxhash builtin_zstd exceptions http opengl pyroot rpath runtime_cxxmodules shared x11. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:299,safety,except,exceptions,299,@georgtroska can you give me the result of `cmake .`? I.e. this line: . ```. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_xxhash builtin_zstd exceptions http opengl pyroot rpath runtime_cxxmodules shared x11. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:88,usability,support,support,88,@georgtroska can you give me the result of `cmake .`? I.e. this line: . ```. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_xxhash builtin_zstd exceptions http opengl pyroot rpath runtime_cxxmodules shared x11. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:128,deployability,Build,Build,128,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:139,deployability,Releas,Release,139,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:148,deployability,Instal,Install,148,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:455,deployability,Modul,Module,455,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:68,energy efficiency,core,core,68,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:104,energy efficiency,CPU,CPU,104,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:463,interoperability,Share,Shared,463,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:785,interoperability,share,shared,785,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:455,modifiability,Modul,Module,455,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:104,performance,CPU,CPU,104,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:455,safety,Modul,Module,455,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:720,safety,except,exceptions,720,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:495,security,hash,hash-style,495,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:792,security,ssl,ssl,792,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:525,usability,support,support,525,". @bellenot:. System Linux-4.18.0-240.1.1.el8_3.x86_64. Processor 8 core Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz (x86_64). Build type Release. Install path /usr/local. Compiler GNU 8.3.1. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O2 -DNDEBUG. C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 built in_pcre builtin_xxhash builtin_zstd dataframe exceptions gdml http mlp roofit we bgui root7 runtime_cxxmodules shared ssl tmva spectrum x11 xrootd. Here you are, I'll be on leave until tuesday - have a nice weekend",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:69,availability,down,downloaded,69,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:337,availability,error,error,337,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:773,availability,Error,Error,773,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:858,availability,Error,Error,858,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:897,availability,Error,Error,897,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:275,deployability,build,builddir,275,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:288,deployability,build,builddir,288,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:356,deployability,Build,Building,356,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:708,deployability,build,build,708,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:337,performance,error,error,337,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:773,performance,Error,Error,773,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:858,performance,Error,Error,858,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:897,performance,Error,Error,897,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:337,safety,error,error,337,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:773,safety,Error,Error,773,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:858,safety,Error,Error,858,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:897,safety,Error,Error,897,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:337,usability,error,error,337,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:773,usability,Error,Error,773,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:858,usability,Error,Error,858,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:897,usability,Error,Error,897,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```. unzip check-internet-connection.zip. cd root-check-internet-connection. mkdir builddir. cd builddir. cmake .. make. ```. and I got the same error. ```. [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o. /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type. #include <XrdClient/XrdClient.hh>. ^~~~~~~~~~~~~~~~~~~~~~~~. compilation terminée. make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:24,deployability,updat,updated,24,@georgtroska @pamputt I updated the PR and it works now for me on a Linux Mint VM without internet access. Can you confirm?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:24,safety,updat,updated,24,@georgtroska @pamputt I updated the PR and it works now for me on a Linux Mint VM without internet access. Can you confirm?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:24,security,updat,updated,24,@georgtroska @pamputt I updated the PR and it works now for me on a Linux Mint VM without internet access. Can you confirm?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:99,security,access,access,99,@georgtroska @pamputt I updated the PR and it works now for me on a Linux Mint VM without internet access. Can you confirm?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:115,usability,confirm,confirm,115,@georgtroska @pamputt I updated the PR and it works now for me on a Linux Mint VM without internet access. Can you confirm?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:9,energy efficiency,Cool,Cool,9,"@pamputt Cool, thanks for the feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:30,usability,feedback,feedback,30,"@pamputt Cool, thanks for the feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/pull/8293:209,integrability,sub,submit,209,"Passed multiple runs with `TestU01` using different seeds (the default seed leads to one warning with p-value being exactly the threshold `0.9990`) and the ""compatibility engines"" I wrote some weeks ago (will submit after cleaning up the code) still produce the values that I extracted from GSL and `std::ranlux{24,48}`. Will merge tomorrow morning, unless there are further comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8293
https://github.com/root-project/root/pull/8293:157,interoperability,compatib,compatibility,157,"Passed multiple runs with `TestU01` using different seeds (the default seed leads to one warning with p-value being exactly the threshold `0.9990`) and the ""compatibility engines"" I wrote some weeks ago (will submit after cleaning up the code) still produce the values that I extracted from GSL and `std::ranlux{24,48}`. Will merge tomorrow morning, unless there are further comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8293
https://github.com/root-project/root/pull/8294:3459,availability,servic,service,3459,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3459,deployability,servic,service,3459,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3471,deployability,API,API,3471,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3459,integrability,servic,service,3459,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3471,integrability,API,API,3471,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3471,interoperability,API,API,3471,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3661,interoperability,plug,plugins,3661,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3733,interoperability,plug,plugin,3733,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3784,interoperability,plug,plugin,3784,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3459,modifiability,servic,service,3459,"imizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:552,safety,except,exception,552,"## DeepCode's analysis on [#1b9c58](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) found:. - :warning: **2** warnings, :information_source: **3** minor issues. :point_down:. - :heavy_check_mark: **2** issues were fixed. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L29"">ZeroMQSvc.cpp:29</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Missing check is_open on ofstream before writing to it. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:641,safety,except,exception,641,"## DeepCode's analysis on [#1b9c58](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) found:. - :warning: **2** warnings, :information_source: **3** minor issues. :point_down:. - :heavy_check_mark: **2** issues were fixed. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L29"">ZeroMQSvc.cpp:29</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Missing check is_open on ofstream before writing to it. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2234,safety,except,exception,2234,"width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Missing check is_open on ofstream before writing to it. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2324,safety,except,exception,2324,"848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Missing check is_open on ofstream before writing to it. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_sour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2534,safety,test,test,2534," fixes</a></td>. </tr>. <tr>. <td width=""77%"">Missing check is_open on ofstream before writing to it. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2695,safety,test,test,2695,"ct/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2534,testability,test,test,2534," fixes</a></td>. </tr>. <tr>. <td width=""77%"">Missing check is_open on ofstream before writing to it. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2695,testability,test,test,2695,"ct/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitcore/src/RooGaussMinimizerFcn.cxx#L604"">RooGaussMinimizerFcn.cxx:604</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2Froofitcore%2Fsrc%2FRooGaussMinimizerFcn.cxx/cpp%2Fdc%2FMissingOpenCheckOnFile/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L36"">test_ZMQ.cpp:36</a></li> <li><a href=""https://github.com/root-project/root/blob/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/roofit/roofitZMQ/test/test_ZMQ.cpp#L49"">test_ZMQ.cpp:49</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/5b6f465ca3bb34ba08d3848eb0631d8e4199beab/root-project/root/1b9c58fb0cd14a4fc79e18eb05fac286a371d8b9/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=3&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:111,deployability,build,build,111,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:137,deployability,integr,integrate,137,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:824,deployability,depend,depends,824,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:919,deployability,manag,manage,919,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:938,deployability,depend,dependency,938,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:977,deployability,integr,integrating,977,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:919,energy efficiency,manag,manage,919,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:137,integrability,integr,integrate,137,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:824,integrability,depend,depends,824,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:938,integrability,depend,dependency,938,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:977,integrability,integr,integrating,977,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1513,integrability,event,eventually,1513,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1718,integrability,complian,compliant,1718,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:137,interoperability,integr,integrate,137,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:977,interoperability,integr,integrating,977,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1386,interoperability,format,formatting,1386,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1471,interoperability,format,formatting,1471,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1549,interoperability,format,format,1549,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1563,interoperability,specif,specified,1563,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1644,interoperability,format,format,1644,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1670,interoperability,format,formatting,1670,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1743,interoperability,format,format,1743,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1889,interoperability,format,format,1889,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:137,modifiability,integr,integrate,137,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:435,modifiability,pac,packages,435,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:666,modifiability,pac,packages,666,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:754,modifiability,pac,packages,754,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:824,modifiability,depend,depends,824,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:938,modifiability,depend,dependency,938,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:977,modifiability,integr,integrating,977,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1029,modifiability,pac,packages,1029,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1349,modifiability,pac,packages,1349,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1850,modifiability,pac,packages,1850,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:456,performance,time,time,456,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:137,reliability,integr,integrate,137,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:411,reliability,doe,doesn,411,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:977,reliability,integr,integrating,977,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:84,safety,test,tests,84,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:814,safety,test,test,814,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:824,safety,depend,depends,824,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:919,safety,manag,manage,919,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:938,safety,depend,dependency,938,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1368,safety,avoid,avoid,1368,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1460,safety,avoid,avoid,1460,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1718,safety,compl,compliant,1718,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:137,security,integr,integrate,137,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:977,security,integr,integrating,977,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1718,security,compl,compliant,1718,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:84,testability,test,tests,84,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:137,testability,integr,integrate,137,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:814,testability,test,test,814,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:824,testability,depend,depends,824,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:938,testability,depend,dependency,938,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:977,testability,integr,integrating,977,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`. 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency. 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages. * Please avoid mixing code formatting changes with actual changes in the same commit. * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful. * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/issues/8295:7,testability,simpl,simple,7,"as for simple. using struct instead of class should focus on the issue. ```. struct xy_t{. double x;. double y;. ClassDef(xy_t,1);. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:7,usability,simpl,simple,7,"as for simple. using struct instead of class should focus on the issue. ```. struct xy_t{. double x;. double y;. ClassDef(xy_t,1);. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:282,availability,sli,slightly,282,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:128,deployability,updat,update,128,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:282,reliability,sli,slightly,282,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:99,safety,input,input,99,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:128,safety,updat,update,128,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:128,security,updat,update,128,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:8,usability,close,closer,8,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:99,usability,input,input,99,"Getting closer to the root cause. - `TTree::CopyAddresses` is called when switching from the first input tree to the second, to update the branch addresses of the output tree. - `TBranch::GetAddress` returns the address of the value if `ClassDef` is omitted, otherwise it returns a slightly off address, which means that after `CopyAddresses` is called the output tree is reading values from the wrong address. The line at which `TTree::CopyAddresses` sets the wrong address for the output branch:. https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L3361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:489,availability,consist,consists,489,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:772,availability,error,error,772,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:891,deployability,updat,update,891,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:792,modifiability,refact,refactor,792,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:772,performance,error,error,772,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:792,performance,refactor,refactor,792,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:1098,performance,time,time,1098,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:425,reliability,doe,does,425,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:131,safety,input,input,131,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:228,safety,input,input,228,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:475,safety,input,input,475,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:715,safety,input,input,715,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:772,safety,error,error,772,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:891,safety,updat,update,891,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:1119,safety,input,input,1119,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:891,security,updat,update,891,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:1026,security,access,access,1026,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:240,testability,simpl,simple,240,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:645,testability,plan,plan,645,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:131,usability,input,input,131,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:228,usability,input,input,228,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:240,usability,simpl,simple,240,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:475,usability,input,input,475,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:489,usability,consist,consists,489,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:715,usability,input,input,715,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:772,usability,error,error,772,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:1119,usability,input,input,1119,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise. 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:117,deployability,build,builds,117,"The fix is in master. @cxwx it would be great if you could test it on your usecase, e.g. by using tomorrow's nightly builds. A backport for 6.24 is up, I'll merge if the CI is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:176,energy efficiency,green,green,176,"The fix is in master. @cxwx it would be great if you could test it on your usecase, e.g. by using tomorrow's nightly builds. A backport for 6.24 is up, I'll merge if the CI is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:59,safety,test,test,59,"The fix is in master. @cxwx it would be great if you could test it on your usecase, e.g. by using tomorrow's nightly builds. A backport for 6.24 is up, I'll merge if the CI is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8295:59,testability,test,test,59,"The fix is in master. @cxwx it would be great if you could test it on your usecase, e.g. by using tomorrow's nightly builds. A backport for 6.24 is up, I'll merge if the CI is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/issues/8297:168,availability,operat,operator,168,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:370,availability,operat,operator,370,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:412,deployability,build,builds,412,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:419,deployability,build,build-,419,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:909,deployability,build,build,909,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:980,deployability,build,build,980,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:326,energy efficiency,core,core,326,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:542,energy efficiency,core,core,542,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:630,energy efficiency,core,core,630,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:856,energy efficiency,core,core,856,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:62,security,loss,loss,62,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:131,usability,user,user,131,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:407,usability,user,user,407,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:702,usability,user,user,702,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:777,usability,user,user,777,"I also get. ```. 120 bytes in 1 blocks are definitely lost in loss record 14,714 of 22,039. in ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 1: operator new(unsigned long) in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:330. 3: TObject::operator new(unsigned long) in /home/user/builds/build-root_src-Desktop-Debug/include/TObject.h:167. 4: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1041. 5: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 6: ThSFMC01::ThreadFunction() in /home/user/zdt-daq/gui/ThSFMC01.cpp:57. 7: RThread::ThreadHandle(void*) in /home/user/zdt-daq/gui/RThread.cpp:156. 8: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 9: start_thread in /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477. 10: clone in /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:127,usability,user,user-images,127,Apart from the one I fixed in https://github.com/root-project/root/pull/8298. the other two leaks stem from:. ![image](https://user-images.githubusercontent.com/10653970/120225545-b5967300-c245-11eb-8526-d39aa523d142.png). and. ![image](https://user-images.githubusercontent.com/10653970/120225606-d363d800-c245-11eb-99b6-d0b39843a3aa.png). But not sure if they should be just suppressed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:245,usability,user,user-images,245,Apart from the one I fixed in https://github.com/root-project/root/pull/8298. the other two leaks stem from:. ![image](https://user-images.githubusercontent.com/10653970/120225545-b5967300-c245-11eb-8526-d39aa523d142.png). and. ![image](https://user-images.githubusercontent.com/10653970/120225606-d363d800-c245-11eb-99b6-d0b39843a3aa.png). But not sure if they should be just suppressed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:132,deployability,unload,unloaded,132,"The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! The TThreadTimer can certainly be fixed. Out of curiosity, why do you care about `TThread`? :-) It's generally assumed to be legacy code; we'd recommend using the task-based approach as offered for instance by ROOT's executor or the underlying thread pool.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:204,deployability,depend,depends,204,"The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! The TThreadTimer can certainly be fixed. Out of curiosity, why do you care about `TThread`? :-) It's generally assumed to be legacy code; we'd recommend using the task-based approach as offered for instance by ROOT's executor or the underlying thread pool.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:204,integrability,depend,depends,204,"The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! The TThreadTimer can certainly be fixed. Out of curiosity, why do you care about `TThread`? :-) It's generally assumed to be legacy code; we'd recommend using the task-based approach as offered for instance by ROOT's executor or the underlying thread pool.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:204,modifiability,depend,depends,204,"The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! The TThreadTimer can certainly be fixed. Out of curiosity, why do you care about `TThread`? :-) It's generally assumed to be legacy code; we'd recommend using the task-based approach as offered for instance by ROOT's executor or the underlying thread pool.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:204,safety,depend,depends,204,"The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! The TThreadTimer can certainly be fixed. Out of curiosity, why do you care about `TThread`? :-) It's generally assumed to be legacy code; we'd recommend using the task-based approach as offered for instance by ROOT's executor or the underlying thread pool.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:204,testability,depend,depends,204,"The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! The TThreadTimer can certainly be fixed. Out of curiosity, why do you care about `TThread`? :-) It's generally assumed to be legacy code; we'd recommend using the task-based approach as offered for instance by ROOT's executor or the underlying thread pool.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:243,performance,parallel,parallel,243,"Thanks for the reply! Yes, I have some Start-Stop-Pause TThread derived classes for my DAQ within a GUI, that I've been using since ROOT5. I only use one thread, apart from the GUI, so I do not really need something that has nWorkers for very parallel tasks. It's just the main GUI window (thread) and a DAQ running behind the scenes. The CPP code of the class is posted here:. https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11. In principle, I would be happy to replace with something more modern, but I would need some help with the migration or some 'tutorial' on how to change from TThread to other newer options. Note: I use this in a standalone CMake application, that runs with app.Run and ends with a CloseWindow() and a gApplication->Terminate(). Not sure if that changes the 'order' of deletion somehow. I will investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:430,performance,lock,lock-program-freezes,430,"Thanks for the reply! Yes, I have some Start-Stop-Pause TThread derived classes for my DAQ within a GUI, that I've been using since ROOT5. I only use one thread, apart from the GUI, so I do not really need something that has nWorkers for very parallel tasks. It's just the main GUI window (thread) and a DAQ running behind the scenes. The CPP code of the class is posted here:. https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11. In principle, I would be happy to replace with something more modern, but I would need some help with the migration or some 'tutorial' on how to change from TThread to other newer options. Note: I use this in a standalone CMake application, that runs with app.Run and ends with a CloseWindow() and a gApplication->Terminate(). Not sure if that changes the 'order' of deletion somehow. I will investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:430,security,lock,lock-program-freezes,430,"Thanks for the reply! Yes, I have some Start-Stop-Pause TThread derived classes for my DAQ within a GUI, that I've been using since ROOT5. I only use one thread, apart from the GUI, so I do not really need something that has nWorkers for very parallel tasks. It's just the main GUI window (thread) and a DAQ running behind the scenes. The CPP code of the class is posted here:. https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11. In principle, I would be happy to replace with something more modern, but I would need some help with the migration or some 'tutorial' on how to change from TThread to other newer options. Note: I use this in a standalone CMake application, that runs with app.Run and ends with a CloseWindow() and a gApplication->Terminate(). Not sure if that changes the 'order' of deletion somehow. I will investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:45,usability,Stop,Stop-Pause,45,"Thanks for the reply! Yes, I have some Start-Stop-Pause TThread derived classes for my DAQ within a GUI, that I've been using since ROOT5. I only use one thread, apart from the GUI, so I do not really need something that has nWorkers for very parallel tasks. It's just the main GUI window (thread) and a DAQ running behind the scenes. The CPP code of the class is posted here:. https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11. In principle, I would be happy to replace with something more modern, but I would need some help with the migration or some 'tutorial' on how to change from TThread to other newer options. Note: I use this in a standalone CMake application, that runs with app.Run and ends with a CloseWindow() and a gApplication->Terminate(). Not sure if that changes the 'order' of deletion somehow. I will investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:553,usability,help,help,553,"Thanks for the reply! Yes, I have some Start-Stop-Pause TThread derived classes for my DAQ within a GUI, that I've been using since ROOT5. I only use one thread, apart from the GUI, so I do not really need something that has nWorkers for very parallel tasks. It's just the main GUI window (thread) and a DAQ running behind the scenes. The CPP code of the class is posted here:. https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11. In principle, I would be happy to replace with something more modern, but I would need some help with the migration or some 'tutorial' on how to change from TThread to other newer options. Note: I use this in a standalone CMake application, that runs with app.Run and ends with a CloseWindow() and a gApplication->Terminate(). Not sure if that changes the 'order' of deletion somehow. I will investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:741,usability,Close,CloseWindow,741,"Thanks for the reply! Yes, I have some Start-Stop-Pause TThread derived classes for my DAQ within a GUI, that I've been using since ROOT5. I only use one thread, apart from the GUI, so I do not really need something that has nWorkers for very parallel tasks. It's just the main GUI window (thread) and a DAQ running behind the scenes. The CPP code of the class is posted here:. https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11. In principle, I would be happy to replace with something more modern, but I would need some help with the migration or some 'tutorial' on how to change from TThread to other newer options. Note: I use this in a standalone CMake application, that runs with app.Run and ends with a CloseWindow() and a gApplication->Terminate(). Not sure if that changes the 'order' of deletion somehow. I will investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:165,availability,down,down,165,"Thanks - an existing application is a good reason for using legacy code, this was exactly what I was hoping to hear. Look - these are memory leaks, and we can drill down why and how to fix them. I'd appreciate your help with understanding the sequence of `~TROOT()` and `~TThreadTearDownGuard()` as mentioned above, in your use case. Can you tell me which one comes first, and what the backtrace is at that point?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:134,performance,memor,memory,134,"Thanks - an existing application is a good reason for using legacy code, this was exactly what I was hoping to hear. Look - these are memory leaks, and we can drill down why and how to fix them. I'd appreciate your help with understanding the sequence of `~TROOT()` and `~TThreadTearDownGuard()` as mentioned above, in your use case. Can you tell me which one comes first, and what the backtrace is at that point?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:225,testability,understand,understanding,225,"Thanks - an existing application is a good reason for using legacy code, this was exactly what I was hoping to hear. Look - these are memory leaks, and we can drill down why and how to fix them. I'd appreciate your help with understanding the sequence of `~TROOT()` and `~TThreadTearDownGuard()` as mentioned above, in your use case. Can you tell me which one comes first, and what the backtrace is at that point?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:134,usability,memor,memory,134,"Thanks - an existing application is a good reason for using legacy code, this was exactly what I was hoping to hear. Look - these are memory leaks, and we can drill down why and how to fix them. I'd appreciate your help with understanding the sequence of `~TROOT()` and `~TThreadTearDownGuard()` as mentioned above, in your use case. Can you tell me which one comes first, and what the backtrace is at that point?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:215,usability,help,help,215,"Thanks - an existing application is a good reason for using legacy code, this was exactly what I was hoping to hear. Look - these are memory leaks, and we can drill down why and how to fix them. I'd appreciate your help with understanding the sequence of `~TROOT()` and `~TThreadTearDownGuard()` as mentioned above, in your use case. Can you tell me which one comes first, and what the backtrace is at that point?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:469,availability,state,state,469,Sure. TROOT destructor comes first: . . ```. 1 TROOT::~TROOT TROOT.cxx 858 0x7ffff74e2a08 . 2 at_exit_of_TROOT TROOT.cxx 291 0x7ffff74e0367 . 3 __run_exit_handlers exit.c 108 0x7ffff6ccaa27 . 4 __GI_exit exit.c 139 0x7ffff6ccabe0 . 5 TUnixSystem::Exit TUnixSystem.cxx 2157 0x7ffff76a2349 . 6 TApplication::Terminate TApplication.cxx 1698 0x7ffff74f9db5 . 7 MainWindow::DoClose MainWindow.cpp 1922 0x7ffff7f39d06 . 8 ?? 0x7fffa2f6102a . 9 ?? . ```. With thread2 in this state. . ```. 1 __GI___poll poll.c 29 0x7ffff6d96aff . 2 ?? 0x7fffe40871a2 . 3 start_thread pthread_create.c 477 0x7ffff71c9609 . 4 clone clone.S 95 0x7ffff6da3293 . ```. TThreadTearDownGuard comes later: . . ```. 1 TThreadTearDownGuard::~TThreadTearDownGuard TThread.cxx 82 0x7ffff63c414e . 2 __cxa_finalize cxa_finalize.c 83 0x7ffff6ccb15e . 3 __do_global_dtors_aux 0x7ffff639e977 . 4 ?? 0x7ffffffdcb20 . ``` . with thread2 with same trace as before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:469,integrability,state,state,469,Sure. TROOT destructor comes first: . . ```. 1 TROOT::~TROOT TROOT.cxx 858 0x7ffff74e2a08 . 2 at_exit_of_TROOT TROOT.cxx 291 0x7ffff74e0367 . 3 __run_exit_handlers exit.c 108 0x7ffff6ccaa27 . 4 __GI_exit exit.c 139 0x7ffff6ccabe0 . 5 TUnixSystem::Exit TUnixSystem.cxx 2157 0x7ffff76a2349 . 6 TApplication::Terminate TApplication.cxx 1698 0x7ffff74f9db5 . 7 MainWindow::DoClose MainWindow.cpp 1922 0x7ffff7f39d06 . 8 ?? 0x7fffa2f6102a . 9 ?? . ```. With thread2 in this state. . ```. 1 __GI___poll poll.c 29 0x7ffff6d96aff . 2 ?? 0x7fffe40871a2 . 3 start_thread pthread_create.c 477 0x7ffff71c9609 . 4 clone clone.S 95 0x7ffff6da3293 . ```. TThreadTearDownGuard comes later: . . ```. 1 TThreadTearDownGuard::~TThreadTearDownGuard TThread.cxx 82 0x7ffff63c414e . 2 __cxa_finalize cxa_finalize.c 83 0x7ffff6ccb15e . 3 __do_global_dtors_aux 0x7ffff639e977 . 4 ?? 0x7ffffffdcb20 . ``` . with thread2 with same trace as before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:905,testability,trace,trace,905,Sure. TROOT destructor comes first: . . ```. 1 TROOT::~TROOT TROOT.cxx 858 0x7ffff74e2a08 . 2 at_exit_of_TROOT TROOT.cxx 291 0x7ffff74e0367 . 3 __run_exit_handlers exit.c 108 0x7ffff6ccaa27 . 4 __GI_exit exit.c 139 0x7ffff6ccabe0 . 5 TUnixSystem::Exit TUnixSystem.cxx 2157 0x7ffff76a2349 . 6 TApplication::Terminate TApplication.cxx 1698 0x7ffff74f9db5 . 7 MainWindow::DoClose MainWindow.cpp 1922 0x7ffff7f39d06 . 8 ?? 0x7fffa2f6102a . 9 ?? . ```. With thread2 in this state. . ```. 1 __GI___poll poll.c 29 0x7ffff6d96aff . 2 ?? 0x7fffe40871a2 . 3 start_thread pthread_create.c 477 0x7ffff71c9609 . 4 clone clone.S 95 0x7ffff6da3293 . ```. TThreadTearDownGuard comes later: . . ```. 1 TThreadTearDownGuard::~TThreadTearDownGuard TThread.cxx 82 0x7ffff63c414e . 2 __cxa_finalize cxa_finalize.c 83 0x7ffff6ccb15e . 3 __do_global_dtors_aux 0x7ffff639e977 . 4 ?? 0x7ffffffdcb20 . ``` . with thread2 with same trace as before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:144,availability,state,statements,144,A small reproducer is provided in https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11 (just remove all the printf statements in the Stop function to let it finish).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:144,integrability,state,statements,144,A small reproducer is provided in https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11 (just remove all the printf statements in the Stop function to let it finish).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:86,performance,lock,lock-program-freezes,86,A small reproducer is provided in https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11 (just remove all the printf statements in the Stop function to let it finish).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:86,security,lock,lock-program-freezes,86,A small reproducer is provided in https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11 (just remove all the printf statements in the Stop function to let it finish).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:162,usability,Stop,Stop,162,A small reproducer is provided in https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11 (just remove all the printf statements in the Stop function to let it finish).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:476,deployability,build,build,476,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:535,deployability,build,build-,535,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:598,deployability,build,build,598,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:674,deployability,build,build,674,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:735,deployability,build,build,735,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:1881,deployability,build,build,1881,"::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2284,deployability,build,build,2284,"de data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/cor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2343,deployability,build,build-,2343,"pt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2406,deployability,build,build,2406,"est(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2482,deployability,build,build,2482,".cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2543,deployability,build,build,2543,"src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3615,deployability,build,build,3615,"bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3685,deployability,build,build,3685,"tion::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3841,deployability,build,build,3841,"029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3953,deployability,build,build,3953,"ingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4070,deployability,build,build,4070,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4168,deployability,build,build,4168,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4861,deployability,build,build,4861,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4932,deployability,build,build,4932,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:265,energy efficiency,core,core,265,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:422,energy efficiency,core,core,422,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:833,energy efficiency,core,core,833,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:918,energy efficiency,core,core,918,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:1097,energy efficiency,core,core,1097,"dow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:1210,energy efficiency,core,core,1210,"rDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:1358,energy efficiency,core,core,1358,"ThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:1462,energy efficiency,core,core,1462,"inalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:1550,energy efficiency,core,core,1550,"sktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/gli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:1772,energy efficiency,core,core,1772,"it.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWind",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2073,energy efficiency,core,core,2073,"id*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2230,energy efficiency,core,core,2230,"ingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2641,energy efficiency,core,core,2641,"01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2726,energy efficiency,core,core,2726,": TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2905,energy efficiency,core,core,2905,".27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/fute",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3018,energy efficiency,core,core,3018,"rDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3196,energy efficiency,core,core,3196,"earDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3284,energy efficiency,core,core,3284,"ild/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3506,energy efficiency,core,core,3506,".27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4328,energy efficiency,core,core,4328,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4439,energy efficiency,core,core,4439,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4527,energy efficiency,core,core,4527,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:4750,energy efficiency,core,core,4750,"c/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 12: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 13: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:302,interoperability,conflict,conflicts,302,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:2110,interoperability,conflict,conflicts,2110,"/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. This conflicts with a previous read of size 8 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:84. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3806,performance,lock,lock,3806,"gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:3806,security,lock,lock,3806,"gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x60b36b8 is 0 bytes inside data symbol ""gGlobalMutex"" 1: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1035. 2: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 3: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 4: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 5: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 6: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 7: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. 8: clone in /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95. Thread #2: Exiting thread still holds 1 lock. in futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 1: futex_wait_cancelable in /build/glibc-S9d2JN/glibc-2.27/nptl/../sysdeps/unix/sysv/linux/futex-internal.h:88. 2: __pthread_cond_wait_common in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:502. 3: pthread_cond_wait@@GLIBC_2.3.2 in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_cond_wait.c:655. 4: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 5: TPosixCondition::Wait() in /opt/root_src/core/thread/src/TPosixCondition.cxx:65. 6: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1064. 7: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 8: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 9: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 10: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 11: /usr/lib/valgrind/vgp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:5,testability,trace,trace,5,"This trace might also be useful: (obtained with the reproducer, but changing giBytes = 1 in MainWindow.cxx so that it ends). ```. Possible data race during write of size 1 at 0x7CCC528 by thread #1. in TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. This conflicts with a previous read of size 1 by thread #2 1: TThreadTearDownGuard::~TThreadTearDownGuard() in /opt/root_src/core/thread/src/TThread.cxx:82. 2: __cxa_finalize in /build/glibc-S9d2JN/glibc-2.27/stdlib/cxa_finalize.c:83. 3: build-root_src-Desktop-Debug/lib/libThread.so. 4: _dl_fini in /build/glibc-S9d2JN/glibc-2.27/elf/dl-fini.c:138. 5: __run_exit_handlers in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:108. 6: exit in /build/glibc-S9d2JN/glibc-2.27/stdlib/exit.c:139. 7: TUnixSystem::Exit(int, bool) in /opt/root_src/core/unix/src/TUnixSystem.cxx:2157. 8: TApplication::Terminate(int) in /opt/root_src/core/base/src/TApplication.cxx:1706. 9: MainWindow::DoClose() in /home/huesof/zdt/gui/MainWindow.cpp:1396. 10: 0x27b2a029. 11: TClingCallFunc::exec(void*, void*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:1843. 12: TClingCallFunc::Exec(void*, TInterpreterValue*) in /opt/root_src/core/metacling/src/TClingCallFunc.cxx:2102. Address 0x7ccc528 is 0 bytes inside data symbol ""_ZL12fgIsTearDown"" 1: TThread::Self() in /opt/root_src/core/thread/src/TThread.cxx:504. 2: TThread::XARequest(char const*, int, void**, int*) in /opt/root_src/core/thread/src/TThread.cxx:1045. 3: TThread::Printf(char const*, ...) in /opt/root_src/core/thread/src/TThread.cxx:950. 4: ThSFMC01::ThreadFunction() in /home/huesof/zdt/gui/ThSFMC01.cpp:51. 5: RThread::ThreadHandle(void*) in /home/huesof/zdt/gui/RThread.cpp:258. 6: TThread::Function(void*) in /opt/root_src/core/thread/src/TThread.cxx:828. 7: /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so. 8: start_thread in /build/glibc-S9d2JN/glibc-2.27/nptl/pthread_create.c:463. Possible data race during write of size 8 at 0x60B36B8 by thre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:134,deployability,unload,unloaded,134,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:206,deployability,depend,depends,206,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:430,deployability,unload,unloading,430,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:631,energy efficiency,core,core,631,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:206,integrability,depend,depends,206,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:206,modifiability,depend,depends,206,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:206,safety,depend,depends,206,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:206,testability,depend,depends,206,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:464,usability,user,user-images,464,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know! Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order? ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:. https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:117,performance,time,timers,117,"Somehow, I do not see the new TThreadTimer leak any more, (maybe it disappeared when fixing the races in the list of timers)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:119,performance,time,timers,119,"> Somehow, I do not see the new TThreadTimer leak any more, (maybe it disappeared when fixing the races in the list of timers)? That is very plausible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:22,deployability,automat,automatically,22,"This report was close automatically by github because a related PR got merged. If there is some (sub)issues that are still lingering, please open a new issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:97,integrability,sub,sub,97,"This report was close automatically by github because a related PR got merged. If there is some (sub)issues that are still lingering, please open a new issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:22,testability,automat,automatically,22,"This report was close automatically by github because a related PR got merged. If there is some (sub)issues that are still lingering, please open a new issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/issues/8297:16,usability,close,close,16,"This report was close automatically by github because a related PR got merged. If there is some (sub)issues that are still lingering, please open a new issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8297
https://github.com/root-project/root/pull/8298:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8298
https://github.com/root-project/root/pull/8299:20,availability,slo,slots,20,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:64,availability,slo,slots,64,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:100,availability,slo,slot,100,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:325,availability,slo,slot,325,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:355,availability,slo,slot,355,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:700,availability,slo,slots,700,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:113,deployability,depend,depends,113,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:113,integrability,depend,depends,113,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:615,integrability,interfac,interface,615,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:615,interoperability,interfac,interface,615,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:113,modifiability,depend,depends,113,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:386,modifiability,deco,decodeObjOnTheFly,386,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:571,modifiability,deco,decodeSetOnTheFly,571,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:615,modifiability,interfac,interface,615,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:625,modifiability,extens,extension,625,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:20,reliability,slo,slots,20,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:64,reliability,slo,slots,64,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:100,reliability,slo,slot,100,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:325,reliability,slo,slot,325,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:355,reliability,slo,slot,355,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:700,reliability,slo,slots,700,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:113,safety,depend,depends,113,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/pull/8299:113,testability,depend,depends,113,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/issues/8300:40,usability,behavi,behavior,40,"Indeed, I see no reason to rely on this behavior (i.e. `GetEntry()` and `GetEvent()` returning the first entry)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8300
https://github.com/root-project/root/pull/8301:12,deployability,fail,failed,12,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:94,performance,time,times,94,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:12,reliability,fail,failed,12,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:233,usability,feedback,feedback,233,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:113,interoperability,convers,conversion,113,"The temporary `const char*` array element is lifetime extended, not the temporary `string` that's created during conversion. This is a viable alternative:. ```cpp. using namespace std::literals;. for (const std::string &s : {""x""s, ""y""s}) {. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:54,modifiability,exten,extended,54,"The temporary `const char*` array element is lifetime extended, not the temporary `string` that's created during conversion. This is a viable alternative:. ```cpp. using namespace std::literals;. for (const std::string &s : {""x""s, ""y""s}) {. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:40,interoperability,convers,conversion,40,But the temporary string created during conversion is still a temporary the lifetime of which I expected to be extended by the const ref that binds to it :man_shrugging:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:142,interoperability,bind,binds,142,But the temporary string created during conversion is still a temporary the lifetime of which I expected to be extended by the const ref that binds to it :man_shrugging:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:111,modifiability,exten,extended,111,But the temporary string created during conversion is still a temporary the lifetime of which I expected to be extended by the const ref that binds to it :man_shrugging:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:142,modifiability,bind,binds,142,But the temporary string created during conversion is still a temporary the lifetime of which I expected to be extended by the const ref that binds to it :man_shrugging:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:38,safety,compl,complicated,38,"Right, the rules are (sadly) way more complicated than that, see the famous range based for loop on a collection returned by value by a function...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:38,security,compl,complicated,38,"Right, the rules are (sadly) way more complicated than that, see the famous range based for loop on a collection returned by value by a function...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8303:12,deployability,fail,failed,12,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8303
https://github.com/root-project/root/pull/8303:94,performance,time,times,94,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8303
https://github.com/root-project/root/pull/8303:12,reliability,fail,failed,12,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8303
https://github.com/root-project/root/pull/8303:233,usability,feedback,feedback,233,"## DeepCode failed to analyze this pull request. Something went wrong despite trying multiple times, sorry about that. Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8303
https://github.com/root-project/root/issues/8304:726,availability,error,error,726,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:1153,integrability,messag,message,1153,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:80,interoperability,Specif,Specifically,80,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:1153,interoperability,messag,message,1153,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:154,modifiability,variab,variable,154,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:726,performance,error,error,726,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:1142,reliability,diagno,diagnostic,1142,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:446,safety,input,input,446,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:726,safety,error,error,726,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:101,testability,context,context,101,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:1142,testability,diagno,diagnostic,1142,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:446,usability,input,input,446,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:523,usability,behavi,behavior,523,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:726,usability,error,error,726,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result. Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:. ```. ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'. bool(foo[0]). ^. ROOT_prompt_1:1:13: note: previous definition is here. const char *foo = ""foo"";. ```. In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,. Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:149,availability,error,error,149,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:110,deployability,fail,fails,110,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:149,performance,error,error,149,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:110,reliability,fail,fails,110,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:149,safety,error,error,149,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:89,testability,simpl,simple,89,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:89,usability,simpl,simple,89,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:149,usability,error,error,149,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:195,usability,behavi,behavior,195,"As @jalopezg-git mentioned, bool(foo) appears as a declaration (bool foo). The following simple C++ code also fails to compile with a re-declaration error and I think that should be the expected behavior. ```C++. #include<iostream>. int main() {. int i = 54;. bool(i);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:167,usability,user,user,167,"> Now, what can we do about this? IMHO, while I think that is the correct parsing, we should be probably issuing a warning. Any opinions on this? My opinion is if the user employs C-style casts and not e.g. `static_cast`, then it's on them :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:150,availability,error,error,150,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:133,deployability,fail,fail,133,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:167,energy efficiency,current,current,167,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:150,performance,error,error,150,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:36,reliability,doe,does,36,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:133,reliability,fail,fail,133,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:150,safety,error,error,150,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:206,safety,compl,completely,206,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:206,security,compl,completely,206,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:150,usability,error,error,150,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:419,usability,user,user,419,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:198,usability,user,user,198,"> On the other the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice). Exactly, it's not severe for many reasons, and it's not even wrong behavior given clings re-declaration feature. Indeed a warning in this case would be nice-to-have, but the issue claims ""casts broken in ROOT prompt"", which is not the case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8304:291,usability,behavi,behavior,291,"> On the other the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice). Exactly, it's not severe for many reasons, and it's not even wrong behavior given clings re-declaration feature. Indeed a warning in this case would be nice-to-have, but the issue claims ""casts broken in ROOT prompt"", which is not the case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/issues/8308:100,deployability,VERSION,VERSION,100,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:475,deployability,MODUL,MODULE,475,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:671,deployability,MODUL,MODULE,671,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:100,integrability,VERSION,VERSION,100,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:176,integrability,COMPON,COMPONENTS,176,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:176,interoperability,COMPON,COMPONENTS,176,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:100,modifiability,VERSION,VERSION,100,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:176,modifiability,COMPON,COMPONENTS,176,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:475,modifiability,MODUL,MODULE,475,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:671,modifiability,MODUL,MODULE,671,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1122,modifiability,inherit,inherit,1122,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1155,performance,time,time,1155,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:475,safety,MODUL,MODULE,475,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:671,safety,MODUL,MODULE,671,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1178,usability,behavi,behaviour,1178,"For the record, here is the ""solution"" for your `CMakeLists.txt`:. ```cmake. cmake_minimum_required(VERSION 3.9). . project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(readwrite_twoints_dict twoints.hpp LINKDEF LinkDef.h MODULE readwrite_twoints). ```. The key thing is to call `ROOT_GENERATE_DICTIONARY` **after** you create the executable target, and pass the target for which the dictionary is being built as the `MODULE` argument to `ROOT_GENERATE_DICTIONARY`. Only then it can use the target's own properties to find headers, etc (even if you move `target_include_directories(...)` after the call to `ROOT_GENERATE_DICTIONARY` it will still work.). Just make sure also not to call the dictionary target the same as the target itself (should still work, but in that case it behaves in the old way, in which you have to list the .cxx file in the sources and cannot inherit properties (I had a hard time not breaking this behaviour when I made it possible to use the form above).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:69,reliability,doe,doesn,69,"Actually, I tried moving the target_include_directories after and it doesn't work. Either that was broken by some more recent commit or it didn't work before, but we didn't notice any problem. Something that needs to be debugged, because I did try to make the properties be usable even when the target_include_directories command is added later. Maybe it's something that only works within ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:274,usability,usab,usable,274,"Actually, I tried moving the target_include_directories after and it doesn't work. Either that was broken by some more recent commit or it didn't work before, but we didn't notice any problem. Something that needs to be debugged, because I did try to make the properties be usable even when the target_include_directories command is added later. Maybe it's something that only works within ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:322,usability,command,command,322,"Actually, I tried moving the target_include_directories after and it doesn't work. Either that was broken by some more recent commit or it didn't work before, but we didn't notice any problem. Something that needs to be debugged, because I did try to make the properties be usable even when the target_include_directories command is added later. Maybe it's something that only works within ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:122,usability,command,commands,122,"Ah, I if I'm not mistaken, it should work if your target includes headers that appear in later target_include_directories commands, but the header search for the dictionary itself happens right away, so for those (i.e. twoints.hpp in this case) the include directories need to be attached to the target before calling `ROOT_GENERATE_DICTIONARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:160,deployability,integr,integration,160,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:160,integrability,integr,integration,160,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:160,interoperability,integr,integration,160,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:160,modifiability,integr,integration,160,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:160,reliability,integr,integration,160,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:160,security,integr,integration,160,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:160,testability,integr,integration,160,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:40,usability,document,documentation,40,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:90,usability,document,documentation,90,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:103,availability,avail,available,103,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:82,deployability,version,version,82,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:82,integrability,version,version,82,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:34,modifiability,evolv,evolve,34,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:82,modifiability,version,version,82,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:103,reliability,availab,available,103,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:103,safety,avail,available,103,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:103,security,availab,available,103,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:143,testability,simpl,simpler,143,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:116,usability,user,users,116,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:143,usability,simpl,simpler,143,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:20,energy efficiency,current,current,20,"Evolve == break for current users. I tried really hard to improve without breaking anything, please don't break it now. :-). If you want something better, add a new macro with a different name.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:0,modifiability,Evolv,Evolve,0,"Evolve == break for current users. I tried really hard to improve without breaking anything, please don't break it now. :-). If you want something better, add a new macro with a different name.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:28,usability,user,users,28,"Evolve == break for current users. I tried really hard to improve without breaking anything, please don't break it now. :-). If you want something better, add a new macro with a different name.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:137,deployability,automat,automatically,137,"> Evolve == break for current users. Not _necessarily_, right? It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..? P.S. just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:22,energy efficiency,current,current,22,"> Evolve == break for current users. Not _necessarily_, right? It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..? P.S. just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:2,modifiability,Evolv,Evolve,2,"> Evolve == break for current users. Not _necessarily_, right? It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..? P.S. just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:137,testability,automat,automatically,137,"> Evolve == break for current users. Not _necessarily_, right? It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..? P.S. just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:30,usability,user,users,30,"> Evolve == break for current users. Not _necessarily_, right? It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..? P.S. just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:242,usability,clear,clear,242,"> Evolve == break for current users. Not _necessarily_, right? It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..? P.S. just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:290,usability,user,users,290,"> Evolve == break for current users. Not _necessarily_, right? It shouldn't be a breaking change to e.g. have `ROOT_GENERATE_DICTIONARY` automatically call the appropriate `configure_file` or `target_include_directory`..? P.S. just so we are clear, I'm not suggesting to break anything for users :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:239,deployability,fail,failed,239,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:718,deployability,automat,automatically,718,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:936,deployability,MODUL,MODULE,936,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:506,energy efficiency,current,current,506,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:936,modifiability,MODUL,MODULE,936,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:239,reliability,fail,failed,239,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:936,safety,MODUL,MODULE,936,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:718,testability,automat,automatically,718,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:98,usability,command,command,98,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:485,usability,document,documenting,485,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:514,usability,behavi,behavior,514,"The problem is that you don't know what the appropriate `configure_file` or `include_directories` command is if you call `ROOT_GENERATE_DICTIONARY` even before creating the target to which it will be attached. If the search for the header failed, is because the places that were tried didn't work (i.e. you could not have added the appropriate include anyway). I mulled adding a new `ROOT_ADD_DICTIONARY` macro that behaves better, but I think there isn't much else we can do, so just documenting well the current behavior in the form I've shown in my first comment should already improve the situation enough. The rules are:. - add your `target` first, and don't list the dictionary source in it, as it will be added automatically. - call any `target_include_directories` that are necessary for finding *dictionary headers* **before** calling `ROOT_GENERATE_DICTIONARY`. - call `ROOT_GENERATE_DICTIONARY`, and pass your target as the `MODULE target` argument. - add other includes, linking, compile flags, etc, in any order. The dictionary source file will still use them. If you follow the rules above, using `ROOT_GENERATE_DICTIONARY` will be much easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:187,deployability,updat,update,187,"I just checked and the page https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html already has up to date information, actually, so thanks @henryiii! However, can you please update it by adding something like the rules above? Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:77,modifiability,pac,packages,77,"I just checked and the page https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html already has up to date information, actually, so thanks @henryiii! However, can you please update it by adding something like the rules above? Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:187,safety,updat,update,187,"I just checked and the page https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html already has up to date information, actually, so thanks @henryiii! However, can you please update it by adding something like the rules above? Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:187,security,updat,update,187,"I just checked and the page https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html already has up to date information, actually, so thanks @henryiii! However, can you please update it by adding something like the rules above? Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:400,availability,Error,Error,400,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:324,deployability,MODUL,MODULE,324,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1024,deployability,MODUL,MODULE,1024,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:607,energy efficiency,current,current,607,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:461,integrability,messag,message,461,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:461,interoperability,messag,message,461,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:79,modifiability,pac,packages,79,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:324,modifiability,MODUL,MODULE,324,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1024,modifiability,MODUL,MODULE,1024,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:400,performance,Error,Error,400,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:324,safety,MODUL,MODULE,324,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:400,safety,Error,Error,400,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1024,safety,MODUL,MODULE,1024,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:400,usability,Error,Error,400,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake. add_executable(readwrite_twoints twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. This gets me:. ```. CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):. Cannot find header twoints.hpp to generate dictionary twoints_dict for. Did you forget to set the INCLUDE_DIRECTORIES property for the current. directory? ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake. add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp). target_link_libraries(readwrite_twoints ROOT::RIO). target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h). ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:106,deployability,depend,dependency,106,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:106,integrability,depend,dependency,106,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:78,interoperability,specif,specify,78,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:106,modifiability,depend,dependency,106,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:152,performance,time,time,152,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:106,safety,depend,dependency,106,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:106,testability,depend,dependency,106,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:584,availability,failur,failure,584,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1361,availability,down,down,1361,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:37,deployability,depend,dependency,37,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:524,deployability,version,versions,524,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:584,deployability,fail,failure,584,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1068,deployability,Automat,Automatically,1068,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1109,deployability,build,build,1109,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1183,deployability,automat,automatically,1183,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1426,deployability,build,builds,1426,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1465,deployability,build,build,1465,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:808,energy efficiency,current,current,808,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:916,energy efficiency,current,current,916,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1090,energy efficiency,current,current,1090,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:37,integrability,depend,dependency,37,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:314,integrability,sub,subdirectories,314,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:524,integrability,version,versions,524,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:637,integrability,inject,injected,637,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1369,integrability,sub,subdirectories,1369,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:37,modifiability,depend,dependency,37,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:524,modifiability,version,versions,524,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:978,modifiability,variab,variable,978,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1156,modifiability,variab,variable,1156,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:584,performance,failur,failure,584,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:584,reliability,fail,failure,584,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:37,safety,depend,dependency,37,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:293,safety,avoid,avoids,293,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:637,security,inject,injected,637,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:37,testability,depend,dependency,37,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1068,testability,Automat,Automatically,1068,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:1183,testability,automat,automatically,1183,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:973,usability,help,help-variable,973,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes. ```. $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR. CMAKE_INCLUDE_CURRENT_DIR. -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds. ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``. to the include path for each directory. These additional include. directories do not propagate down to subdirectories. This is useful. mainly for out-of-source builds, where files generated into the build. tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:214,deployability,configurat,configuration,214,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:417,deployability,instal,install,417,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:533,deployability,instal,installation,533,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:593,deployability,version,version,593,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:806,deployability,modul,module,806,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:214,integrability,configur,configuration,214,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:593,integrability,version,version,593,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:455,interoperability,convers,conversely,455,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:214,modifiability,configur,configuration,214,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:307,modifiability,variab,variable,307,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:593,modifiability,version,version,593,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:705,modifiability,variab,variable,705,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:806,modifiability,modul,module,806,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:732,reliability,doe,does,732,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:281,safety,compl,completely,281,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:806,safety,modul,module,806,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:214,security,configur,configuration,214,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:281,security,compl,completely,281,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:185,usability,user,user,185,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:794,usability,help,help,794,"Another challenge with `root_generate_dictionary`:. In addition to the nominal files (the `.cxx` files), it can produce other essential files (`_rdict.pcm`, `.rootmap`, `.pcm`) but the user has to guess/know which configuration produce which files ... and unless they use (usually completely optional cmake variable) `CMAKE_LIBRARY_OUTPUT_DIRECTORY` to steer the location of the library files) they have to call the `install` function for those files (or conversely setting `CMAKE_LIBRARY_OUTPUT_DIRECTORY` surprisingly leads to the installation of the files. It might be better for the/a new version of `root_generate_dictionary` to return the list of auxiliary files through a target property or return variable; that's what SWIG does: see e.g. SWIG_SUPPORT_FILES for https://cmake.org/cmake/help/latest/module/UseSWIG.html.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/pull/8314:7,availability,failur,failures,7,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8314:7,deployability,fail,failures,7,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8314:7,performance,failur,failures,7,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8314:7,reliability,fail,failures,7,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8314:31,safety,test,test,31,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8314:31,testability,test,test,31,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8316:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:55,safety,compl,complained,55,"Windows compilation was working perfectly, but Jenkins complained?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:55,security,compl,complained,55,"Windows compilation was working perfectly, but Jenkins complained?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:104,deployability,build,build,104,@linev it's detecting the warnings in the pull request description. the PR description is dumped in the build log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:110,deployability,log,log,110,@linev it's detecting the warnings in the pull request description. the PR description is dumped in the build log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:12,safety,detect,detecting,12,@linev it's detecting the warnings in the pull request description. the PR description is dumped in the build log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:110,safety,log,log,110,@linev it's detecting the warnings in the pull request description. the PR description is dumped in the build log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:12,security,detect,detecting,12,@linev it's detecting the warnings in the pull request description. the PR description is dumped in the build log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:110,security,log,log,110,@linev it's detecting the warnings in the pull request description. the PR description is dumped in the build log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:110,testability,log,log,110,@linev it's detecting the warnings in the pull request description. the PR description is dumped in the build log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:16,deployability,build,build-log,16,It looks like a build-log parsing issue...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:22,safety,log,log,22,It looks like a build-log parsing issue...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:22,security,log,log,22,It looks like a build-log parsing issue...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:22,testability,log,log,22,It looks like a build-log parsing issue...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8318:25,availability,failur,failures,25,"> and this might trigger failures? yes, and not just here. i don't know how much of our code (and users') relies on the default being single-thread execution, but it's probably a fair amount. having to always think about thread-safety even when doing these sort of quick debugging printouts is not a 100% transparent change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:25,deployability,fail,failures,25,"> and this might trigger failures? yes, and not just here. i don't know how much of our code (and users') relies on the default being single-thread execution, but it's probably a fair amount. having to always think about thread-safety even when doing these sort of quick debugging printouts is not a 100% transparent change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:25,performance,failur,failures,25,"> and this might trigger failures? yes, and not just here. i don't know how much of our code (and users') relies on the default being single-thread execution, but it's probably a fair amount. having to always think about thread-safety even when doing these sort of quick debugging printouts is not a 100% transparent change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:25,reliability,fail,failures,25,"> and this might trigger failures? yes, and not just here. i don't know how much of our code (and users') relies on the default being single-thread execution, but it's probably a fair amount. having to always think about thread-safety even when doing these sort of quick debugging printouts is not a 100% transparent change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:228,safety,safe,safety,228,"> and this might trigger failures? yes, and not just here. i don't know how much of our code (and users') relies on the default being single-thread execution, but it's probably a fair amount. having to always think about thread-safety even when doing these sort of quick debugging printouts is not a 100% transparent change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:98,usability,user,users,98,"> and this might trigger failures? yes, and not just here. i don't know how much of our code (and users') relies on the default being single-thread execution, but it's probably a fair amount. having to always think about thread-safety even when doing these sort of quick debugging printouts is not a 100% transparent change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:13,safety,test,test,13,And for this test you can be certain that no other code in the same test binary turns on IMT?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:68,safety,test,test,68,And for this test you can be certain that no other code in the same test binary turns on IMT?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:13,testability,test,test,13,And for this test you can be certain that no other code in the same test binary turns on IMT?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:68,testability,test,test,68,And for this test you can be certain that no other code in the same test binary turns on IMT?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:173,safety,test,test,173,"Yes, the only place that turns on (and then off) IMT in this executable is https://github.com/root-project/root/blob/941025d4e9ecb486419afe7e2be250bd02bd5169/tree/dataframe/test/dataframe_interface.cxx#L356-L364",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8318:173,testability,test,test,173,"Yes, the only place that turns on (and then off) IMT in this executable is https://github.com/root-project/root/blob/941025d4e9ecb486419afe7e2be250bd02bd5169/tree/dataframe/test/dataframe_interface.cxx#L356-L364",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8318
https://github.com/root-project/root/pull/8319:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8319
https://github.com/root-project/root/issues/8323:204,energy efficiency,alloc,allocate,204,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:430,energy efficiency,alloc,allocations,430,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:157,integrability,batch,batch,157,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:185,integrability,batch,batch,185,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:265,integrability,batch,batch,265,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:384,integrability,batch,batch,384,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:480,integrability,batch,batch,480,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:157,performance,batch,batch,157,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:185,performance,batch,batch,185,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:265,performance,batch,batch,265,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:336,performance,memor,memory,336,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:384,performance,batch,batch,384,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:480,performance,batch,batch,480,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:569,performance,Memor,Memory,569,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:680,performance,Memor,Memory,680,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:196,reliability,doe,doesn,196,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:336,usability,memor,memory,336,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:569,usability,Memor,Memory,569,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:680,usability,Memor,Memory,680,"This issue is still relevant and can be fixed by https://github.com/root-project/root/pull/8324. The reproducer code just needs to be changed to not use the batch mode, because the new batch mode doesn't allocate RooDataSets on the heap anymore. When not using the batch mode in the reproducer, it also becomes necessary to disable the memory pool for `RooArgSet`, because in the non-batch mode there are also many RooArgSet heap allocations that cause the same problems. Without batch mode and without the fix PR, the reproducer reports after 100000 iterations:. ```. Memory increase = 6788. Avg increase per iteration = 0.06788. ```. with the fix PR, the final report is:. ```. Memory increase = 0. Avg increase per iteration = 0.0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/pull/8324:225,deployability,observ,observed,225,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:724,deployability,releas,release,724,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:210,performance,memor,memory,210,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:249,performance,memor,memory,249,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:331,performance,memor,memory,331,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:413,performance,cach,cached,413,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:580,performance,multi-thread,multi-threading,580,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:225,testability,observ,observed,225,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:210,usability,memor,memory,210,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:249,usability,memor,memory,249,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:331,usability,memor,memory,331,"Hi Stephan, thanks for taking a look! Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. Do you happen to know other locations where things are cached based on the RooDataSet? I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? Explaining this change in the release notes is also a good idea. I'll do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:976,availability,error,error,976,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:115,deployability,stack,stackoverflow,115,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:145,deployability,stack,stackoverflow,145,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:633,deployability,build,build,633,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:79,integrability,translat,translation,79,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:446,integrability,translat,translation,446,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:728,integrability,translat,translation,728,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1517,integrability,translat,translation,1517,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1582,integrability,translat,translation,1582,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:79,interoperability,translat,translation,79,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:446,interoperability,translat,translation,446,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:728,interoperability,translat,translation,728,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1517,interoperability,translat,translation,1517,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1582,interoperability,translat,translation,1582,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:196,modifiability,variab,variable-in-class-template,196,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:2137,modifiability,scenario,scenario,2137,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:419,performance,memor,memory,419,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:976,performance,error,error,976,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:2034,performance,memor,memory,2034,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:548,safety,test,tested,548,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:589,safety,test,test,589,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:976,safety,error,error,976,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1551,safety,test,test,1551,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1669,safety,test,test,1669,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1848,safety,test,test,1848,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1484,security,ident,identical,1484,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:91,testability,unit,unit,91,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:458,testability,unit,units,458,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:548,testability,test,tested,548,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:589,testability,test,test,589,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:740,testability,unit,units,740,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1529,testability,unit,units,1529,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1551,testability,test,test,1551,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1594,testability,unit,units,1594,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1669,testability,test,test,1669,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1848,testability,test,test,1848,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:419,usability,memor,memory,419,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:976,usability,error,error,976,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:2034,usability,memor,memory,2034,"366615/static-member-variable-in-class-template) where someone explains:. >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:. ```C++. // main.cc. void callOne();. void callTwo();. int main() {. callOne();. callTwo();. return 0;. }. ```. Then, a library that uses a class with a UniqueID as suggested in this PR:. ```C++. // mylib.cc. #ifndef FUNC_NAME. #error ""FUNC_NAME needs to be defined"". #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {. UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }. const UniqueId<MyClass> _uniqueId;. };. void FUNC_NAME() {. auto idCounterAddr = &UniqueId<MyClass>::counter;. auto idVal = static_cast<int>(MyClass{}.uniqueId().value());. std::cout << idCounterAddr << "" "" << idVal << std::endl;. }. ```. The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units. Finally, a the test script to compile all the translation units, link them together and run the executable:. ```bash. #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o. g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o. g++ -c main.cc. g++ -o main main.o one.o two.o. ./main. rm *.o main. ```. The test outputs:. ```. 0x560e77c0f198 1. 0x560e77c0f198 2. ```. So indeed, the linker makes sure that the static counter member of the `UniqueId` class will always have the same address in memory, and the instances of `MyClass` have different values of their `uniqueId_`. This is the kind of scenario you were referring to, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:233,deployability,observ,observed,233,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:471,deployability,fail,fail,471,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:843,interoperability,plug,plugin,843,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:218,performance,memor,memory,218,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:257,performance,memor,memory,257,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:339,performance,memor,memory,339,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:595,performance,time,time,595,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:665,performance,memor,memory,665,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:739,performance,cach,cached,739,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1015,performance,multi-thread,multi-threading,1015,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:471,reliability,fail,fail,471,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:457,safety,test,test,457,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:1215,safety,unsaf,unsafe,1215,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:233,testability,observ,observed,233,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:457,testability,test,test,457,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:218,usability,memor,memory,218,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:257,usability,memor,memory,257,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:339,usability,memor,memory,339,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:636,usability,stop,stopped,636,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:665,usability,memor,memory,665,"> Hi Stephan, thanks for taking a look! > . > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool. > . > Do you happen to know other locations where things are cached based on the RooDataSet? No, sorry. You can only really now with a static code analyser or clang plugin. > . > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter. > . I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right? > . Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:117,deployability,stack,stackoverflow,117,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:147,deployability,stack,stackoverflow,147,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:81,integrability,translat,translation,81,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:450,integrability,translat,translation,450,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:81,interoperability,translat,translation,81,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:450,interoperability,translat,translation,450,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:198,modifiability,variab,variable-in-class-template,198,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:423,performance,memor,memory,423,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:93,testability,unit,unit,93,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:462,testability,unit,units,462,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/pull/8324:423,usability,memor,memory,423,"> I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:. > . > > Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. > . That indeed solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/issues/8326:109,availability,error,error,109,"Thank you for the report, this looks like an issue with the pipes we create internally to capture output and error from the C++ code. I'll have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8326
https://github.com/root-project/root/issues/8326:109,performance,error,error,109,"Thank you for the report, this looks like an issue with the pipes we create internally to capture output and error from the C++ code. I'll have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8326
https://github.com/root-project/root/issues/8326:109,safety,error,error,109,"Thank you for the report, this looks like an issue with the pipes we create internally to capture output and error from the C++ code. I'll have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8326
https://github.com/root-project/root/issues/8326:109,usability,error,error,109,"Thank you for the report, this looks like an issue with the pipes we create internally to capture output and error from the C++ code. I'll have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8326
https://github.com/root-project/root/pull/8328:309,safety,review,reviewing,309,"> Hey Javier, looks good to me! Just saw some typos. Maybe `(""szZip"", ""B"", ""volume before zipping"")` makes sense to add as well for symmetry with the page source? > . > https://github.com/root-project/root/blob/6832151a556172150d53ba13c89e5ae77a80483a/tree/ntuple/v7/src/RPageStorageFile.cxx#L221. Thanks for reviewing @mxxo! +1 for that or not, @jblomer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8328:309,testability,review,reviewing,309,"> Hey Javier, looks good to me! Just saw some typos. Maybe `(""szZip"", ""B"", ""volume before zipping"")` makes sense to add as well for symmetry with the page source? > . > https://github.com/root-project/root/blob/6832151a556172150d53ba13c89e5ae77a80483a/tree/ntuple/v7/src/RPageStorageFile.cxx#L221. Thanks for reviewing @mxxo! +1 for that or not, @jblomer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8328:13,safety,review,reviewing,13,"> Thanks for reviewing @mxxo! +1 for that or not, @jblomer? +1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8328:13,testability,review,reviewing,13,"> Thanks for reviewing @mxxo! +1 for that or not, @jblomer? +1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8328:15,safety,review,reviewing,15,"> > Thanks for reviewing @mxxo! +1 for that or not, @jblomer? > . > +1. Done. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8328:15,testability,review,reviewing,15,"> > Thanks for reviewing @mxxo! +1 for that or not, @jblomer? > . > +1. Done. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8328:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8331:10,availability,sli,sliiiightly,10,ok i went sliiiightly overboard with the find/replace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8331
https://github.com/root-project/root/pull/8331:10,reliability,sli,sliiiightly,10,ok i went sliiiightly overboard with the find/replace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8331
https://github.com/root-project/root/pull/8333:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:39,modifiability,concern,concerning,39,@alja There are no changes in ui5 part concerning FileDialog - do you forget it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:39,testability,concern,concerning,39,@alja There are no changes in ui5 part concerning FileDialog - do you forget it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:199,deployability,configurat,configuration,199,@linev . I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:199,integrability,configur,configuration,199,@linev . I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:199,modifiability,configur,configuration,199,@linev . I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:23,safety,test,test,23,@linev . I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:199,security,configur,configuration,199,@linev . I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:23,testability,test,test,23,@linev . I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:123,usability,dialog,dialog,123,@linev . I have made a test example in https://github.com/alja/EveWebApp running macro collection_proxies_test.C. The file dialog will be used in FireworksWeb to open a data file and save/reload the configuration file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8334:313,energy efficiency,core,cores,313,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:938,energy efficiency,core,cores,938,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:766,integrability,compon,components,766,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:823,integrability,compon,components,823,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:766,interoperability,compon,components,766,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:823,interoperability,compon,components,823,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:766,modifiability,compon,components,766,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:823,modifiability,compon,components,823,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:505,performance,multi-thread,multi-threading,505,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:734,performance,multi-thread,multi-threading,734,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:106,reliability,doe,does,106,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:194,reliability,doe,doesn,194,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:277,reliability,Doe,Does,277,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:45,usability,behavi,behavior,45,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:292,usability,user,users,292,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:750,usability,behavi,behaviors,750,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:834,usability,interact,interact,834,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:949,usability,user,users,949,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1057,usability,clear,clear,1057,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? P.S. this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1076,deployability,log,logic,1076," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:331,energy efficiency,core,cores,331,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1262,integrability,compon,components,1262," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1262,interoperability,compon,components,1262," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1582,interoperability,plug,plug,1582," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1262,modifiability,compon,components,1262," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:659,performance,perform,perform,659,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:883,performance,multi-thread,multi-threading,883,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1230,performance,multi-thread,multi-threading,1230," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:124,reliability,doe,does,124,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:212,reliability,doe,doesn,212,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:295,reliability,Doe,Does,295,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1099,reliability,doe,doesn,1099," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:609,safety,test,test,609,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1076,safety,log,logic,1076," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1276,safety,compl,completely,1276," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1906,safety,isol,isolation,1906," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1076,security,log,logic,1076," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1276,security,compl,completely,1276," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1888,security,control,control,1888," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1906,security,iso,isolation,1906," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:609,testability,test,test,609,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1076,testability,log,logic,1076," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1888,testability,control,control,1888," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1906,testability,isol,isolation,1906," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:67,usability,behavi,behavior,67,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:310,usability,user,users,310,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:659,usability,perform,perform,659,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1246,usability,behavi,behaviors,1246," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:1489,usability,clear,clear,1489," I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases? I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning? Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has? Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. . https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:162,energy efficiency,current,current,162,"> For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with RPageStorage::SetTaskScheduler (for both page sink and source). IIRC the current design is meant to play well with experiment frameworks' TBB thread pools, i.e. we should just use that if it exists. Is that not the case for RNTuple?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:53,interoperability,plug,plug,53,"> For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with RPageStorage::SetTaskScheduler (for both page sink and source). IIRC the current design is meant to play well with experiment frameworks' TBB thread pools, i.e. we should just use that if it exists. Is that not the case for RNTuple?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:124,reliability,doe,does,124,"Might be, but the opposite of our intent :smile: we design for ROOT to work well with TBB-based frameworks (and afaik CMSSW does run with ROOT's IMT on), and we fix these sort of issues when they come up, e.g. https://sft.its.cern.ch/jira/browse/ROOT-11014 , https://sft.its.cern.ch/jira/browse/ROOT-10078",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:281,energy efficiency,schedul,scheduler,281,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:133,integrability,interfac,interface,133,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:133,interoperability,interfac,interface,133,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:133,modifiability,interfac,interface,133,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:75,performance,parallel,parallelism,75,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:281,performance,schedul,scheduler,281,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:101,security,expos,expose,101,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:287,energy efficiency,schedul,scheduler,287,"We probably have to discuss this for ROOT at large. `TTree` has a per-object IMT setting. Fitting has no knobs, only the global IMT settings. RDataFrame _for now_ has no knobs, but we were discussing with @Axel-Naumann that it might be useful if it did. RNTuple is thinking of using the scheduler itself as a customization point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:287,performance,schedul,scheduler,287,"We probably have to discuss this for ROOT at large. `TTree` has a per-object IMT setting. Fitting has no knobs, only the global IMT settings. RDataFrame _for now_ has no knobs, but we were discussing with @Axel-Naumann that it might be useful if it did. RNTuple is thinking of using the scheduler itself as a customization point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:309,usability,custom,customization,309,"We probably have to discuss this for ROOT at large. `TTree` has a per-object IMT setting. Fitting has no knobs, only the global IMT settings. RDataFrame _for now_ has no knobs, but we were discussing with @Axel-Naumann that it might be useful if it did. RNTuple is thinking of using the scheduler itself as a customization point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8334:7,testability,context,context,7,"In the context of RNTuple, this has concluded in #14831, #14807, #15724. Basically: fixing the use of the TBB task arena and adding IMT opt-out for RNTuple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8336:128,deployability,modul,modules,128,"@amadio looks like it will be still impossible to remove Python hacks in https://github.com/root-project/root/blob/master/cmake/modules/SearchRootCoreDeps.cmake: `CMake 3.14 is the minimum because in 3.12 and 3.13, despite find_package(PythonX) being present, the Numpy-related variables are not set`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:128,modifiability,modul,modules,128,"@amadio looks like it will be still impossible to remove Python hacks in https://github.com/root-project/root/blob/master/cmake/modules/SearchRootCoreDeps.cmake: `CMake 3.14 is the minimum because in 3.12 and 3.13, despite find_package(PythonX) being present, the Numpy-related variables are not set`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:278,modifiability,variab,variables,278,"@amadio looks like it will be still impossible to remove Python hacks in https://github.com/root-project/root/blob/master/cmake/modules/SearchRootCoreDeps.cmake: `CMake 3.14 is the minimum because in 3.12 and 3.13, despite find_package(PythonX) being present, the Numpy-related variables are not set`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:128,safety,modul,modules,128,"@amadio looks like it will be still impossible to remove Python hacks in https://github.com/root-project/root/blob/master/cmake/modules/SearchRootCoreDeps.cmake: `CMake 3.14 is the minimum because in 3.12 and 3.13, despite find_package(PythonX) being present, the Numpy-related variables are not set`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:64,security,hack,hacks,64,"@amadio looks like it will be still impossible to remove Python hacks in https://github.com/root-project/root/blob/master/cmake/modules/SearchRootCoreDeps.cmake: `CMake 3.14 is the minimum because in 3.12 and 3.13, despite find_package(PythonX) being present, the Numpy-related variables are not set`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:181,usability,minim,minimum,181,"@amadio looks like it will be still impossible to remove Python hacks in https://github.com/root-project/root/blob/master/cmake/modules/SearchRootCoreDeps.cmake: `CMake 3.14 is the minimum because in 3.12 and 3.13, despite find_package(PythonX) being present, the Numpy-related variables are not set`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:260,deployability,instal,install,260,"Yes, I was thinking about the move happening to 3.16. If it's only to 3.12 or 3.13, then the hacks need to stay. However, it's probably better to drop Debian 10 support and go to CMake 3.16. Debian 10 users can still have up to ROOT 6.24 if they don't want to install CMake by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:93,security,hack,hacks,93,"Yes, I was thinking about the move happening to 3.16. If it's only to 3.12 or 3.13, then the hacks need to stay. However, it's probably better to drop Debian 10 support and go to CMake 3.16. Debian 10 users can still have up to ROOT 6.24 if they don't want to install CMake by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:161,usability,support,support,161,"Yes, I was thinking about the move happening to 3.16. If it's only to 3.12 or 3.13, then the hacks need to stay. However, it's probably better to drop Debian 10 support and go to CMake 3.16. Debian 10 users can still have up to ROOT 6.24 if they don't want to install CMake by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:201,usability,user,users,201,"Yes, I was thinking about the move happening to 3.16. If it's only to 3.12 or 3.13, then the hacks need to stay. However, it's probably better to drop Debian 10 support and go to CMake 3.16. Debian 10 users can still have up to ROOT 6.24 if they don't want to install CMake by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:51,deployability,version,version,51,About debian looks like users can get higher cmake version from `stable-bpo` and `testing` repos (?): https://tracker.debian.org/pkg/cmake. @Axel-Naumann what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:51,integrability,version,version,51,About debian looks like users can get higher cmake version from `stable-bpo` and `testing` repos (?): https://tracker.debian.org/pkg/cmake. @Axel-Naumann what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:51,modifiability,version,version,51,About debian looks like users can get higher cmake version from `stable-bpo` and `testing` repos (?): https://tracker.debian.org/pkg/cmake. @Axel-Naumann what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:82,safety,test,testing,82,About debian looks like users can get higher cmake version from `stable-bpo` and `testing` repos (?): https://tracker.debian.org/pkg/cmake. @Axel-Naumann what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:82,testability,test,testing,82,About debian looks like users can get higher cmake version from `stable-bpo` and `testing` repos (?): https://tracker.debian.org/pkg/cmake. @Axel-Naumann what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:24,usability,user,users,24,About debian looks like users can get higher cmake version from `stable-bpo` and `testing` repos (?): https://tracker.debian.org/pkg/cmake. @Axel-Naumann what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:40,deployability,updat,updated,40,"So IIUC, Mac and Debian nodes should be updated with CMake 3.16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:40,safety,updat,updated,40,"So IIUC, Mac and Debian nodes should be updated with CMake 3.16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:40,security,updat,updated,40,"So IIUC, Mac and Debian nodes should be updated with CMake 3.16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:30,availability,failur,failure,30,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:105,availability,avail,available,105,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:30,deployability,fail,failure,30,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:30,performance,failur,failure,30,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:30,reliability,fail,failure,30,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:84,reliability,Doe,Does,84,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:105,reliability,availab,available,105,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:105,safety,avail,available,105,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:105,security,availab,available,105,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:173,availability,avail,available,173,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:62,deployability,fail,failing,62,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:109,deployability,modul,modules,109,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:183,deployability,instal,installed,183,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:220,deployability,modul,modules,220,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:948,energy efficiency,cpu,cpu,948,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:957,energy efficiency,gpu,gpu,957,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:109,modifiability,modul,modules,109,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:220,modifiability,modul,modules,220,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:948,performance,cpu,cpu,948,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:957,performance,gpu,gpu,957,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:62,reliability,fail,failing,62,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:173,reliability,availab,available,173,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:109,safety,modul,modules,109,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:173,safety,avail,available,173,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:220,safety,modul,modules,220,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:173,security,availab,available,173,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:913,security,ssl,ssl,913,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:250,testability,assert,asserts,250,"@Axel-Naumann @bellenot I think I know why `mac11.0/cxx17` is failing. I see it is requested in list of `all modules` that `pyroot3` should be enabled, while Python3 is not available/installed on machine: . ```AXEL: all modules = alien;arrow;asimage;asserts;builtin_afterimage;builtin_cfitsio;builtin_davix;builtin_fftw3;builtin_freetype;builtin_ftgl;builtin_gl2ps;builtin_glew;builtin_gsl;builtin_lz4;builtin_lzma;builtin_nlohmannjson;builtin_openssl;builtin_openui5;builtin_pcre;builtin_tbb;builtin_unuran;builtin_vc;builtin_vdt;builtin_veccore;builtin_xrootd;builtin_xxhash;builtin_zlib;builtin_zstd;cefweb;clad;cocoa;cuda;cudnn;daos;dataframe;davix;dcache;dev;distcc;fcgi;fftw3;fitsio;fortran;gdml;gfal;gsl_shared;gviz;http;imt;libcxx;mathmore;minuit2;mlp;monalisa;mpi;mysql;odbc;opengl;oracle;pgsql;pyroot;pyroot2;pyroot3;pyroot_legacy;pythia6;pythia6_nolink;pythia8;qt5web;r;roofit;shadowpw;spectrum;sqlite;ssl;test_distrdf_pyspark;tmva;tmva-cpu;tmva-gpu;tmva-pymva;tmva-rmva;tmva-```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:30,deployability,fail,failing,30,@oshadura then why was it not failing before?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:30,reliability,fail,failing,30,@oshadura then why was it not failing before?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:68,availability,servic,services,68,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:178,availability,avail,available,178,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:68,deployability,servic,services,68,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:120,deployability,build,build,120,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:227,deployability,updat,updated,227,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:68,integrability,servic,services,68,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:68,modifiability,servic,services,68,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:178,reliability,availab,available,178,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:178,safety,avail,available,178,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:227,safety,updat,updated,227,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:178,security,availab,available,178,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:227,security,updat,updated,227,"@bellenot Maybe my guess is wrong, checking other PR https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121249/consoleFull I see that python3.8 is actually available on this node. Do you know if CMake was updated on this node as well? (FYI I just checked on my MacOS 11 and PR works)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:11,deployability,build,build,11,@phsft-bot build just on mac11.0/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:27,deployability,updat,updated,27,> Do you know if CMake was updated on this node as well? No idea. @Axel-Naumann ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:27,safety,updat,updated,27,> Do you know if CMake was updated on this node as well? No idea. @Axel-Naumann ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:27,security,updat,updated,27,> Do you know if CMake was updated on this node as well? No idea. @Axel-Naumann ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:13,deployability,updat,updated,13,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:94,deployability,version,version,94,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:109,deployability,version,version,109,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:94,integrability,version,version,94,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:109,integrability,version,version,109,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:94,modifiability,version,version,94,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:109,modifiability,version,version,109,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:13,safety,updat,updated,13,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:13,security,updat,updated,13,"Yes cmake is updated, I will check where is a problem: . ```. sftnight@macphsft23 ~ % cmake --version. cmake version 3.18.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:117,deployability,updat,updated,117,"@bellenot I think now PR is ready, before I made a small typo. The only problem is that all MacOS nodes need to have updated CMake (e.g. see macphsft17.dyndns.cern.ch)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:117,safety,updat,updated,117,"@bellenot I think now PR is ready, before I made a small typo. The only problem is that all MacOS nodes need to have updated CMake (e.g. see macphsft17.dyndns.cern.ch)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:117,security,updat,updated,117,"@bellenot I think now PR is ready, before I made a small typo. The only problem is that all MacOS nodes need to have updated CMake (e.g. see macphsft17.dyndns.cern.ch)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:59,deployability,updat,update,59,Thanks a lot @oshadura ! I'll ask @Axel-Naumann if one can update CMake on all the MacOS nodes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:59,safety,updat,update,59,Thanks a lot @oshadura ! I'll ask @Axel-Naumann if one can update CMake on all the MacOS nodes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:59,security,updat,update,59,Thanks a lot @oshadura ! I'll ask @Axel-Naumann if one can update CMake on all the MacOS nodes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8336:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/issues/8340:24,usability,close,closely,24,This need to be checked closely. I added @lmoneta in the loop.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:103,availability,error,errors,103,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:164,availability,error,errors,164,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:720,availability,error,error,720,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:709,energy efficiency,Draw,Draw,709,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:103,performance,error,errors,103,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:164,performance,error,errors,164,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:271,performance,content,content,271,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:720,performance,error,error,720,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:88,reliability,doe,does,88,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:103,safety,error,errors,103,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:164,safety,error,errors,164,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:720,safety,error,error,720,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:30,usability,close,closely,30,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:103,usability,error,errors,103,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:164,usability,error,errors,164,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:720,usability,error,error,720,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python. import ROOT. import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) . h.AddBin(0, 0, 4, 10) . h.AddBin(4, 0, 8, 10) . h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5). h.Fill(2, 1, 0.3). h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5). h.Fill(6, 1, 0.4). h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8). h.Fill(9, 1, 0.6). h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600). h.Draw('text error'). c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2). err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2). err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1). print(err_2). print(err_3). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:112,availability,error,errors,112,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:221,availability,error,errors,221,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:112,performance,error,errors,112,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:221,performance,error,errors,221,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:112,safety,error,errors,112,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:221,safety,error,errors,221,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:112,usability,error,errors,112,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:221,usability,error,errors,221,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:152,deployability,releas,released,152,"Hi, . I agree is not good for the design, but the original problem is having TH2Poly deriving from a TH1 instead of being a separate class. Now that is released and used it is not worth changing it. . Can I close this issue ? . Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:207,usability,close,close,207,"Hi, . I agree is not good for the design, but the original problem is having TH2Poly deriving from a TH1 instead of being a separate class. Now that is released and used it is not worth changing it. . Can I close this issue ? . Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:123,availability,error,errors,123,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:123,performance,error,errors,123,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:138,performance,content,contents,138,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:123,safety,error,errors,123,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:112,security,access,access,112,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:18,usability,close,close,18,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:50,usability,behavi,behaviour,50,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:123,usability,error,errors,123,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/pull/8343:161,deployability,build,build,161,Again same problem? On which platform? I have external `hlohmann/json.hpp` (OpenSUSE) and it provided with `json_fwd.hpp`. By default ROOT always tries first to build against external version - mean in my case it will try to build with full headers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:184,deployability,version,version,184,Again same problem? On which platform? I have external `hlohmann/json.hpp` (OpenSUSE) and it provided with `json_fwd.hpp`. By default ROOT always tries first to build against external version - mean in my case it will try to build with full headers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:225,deployability,build,build,225,Again same problem? On which platform? I have external `hlohmann/json.hpp` (OpenSUSE) and it provided with `json_fwd.hpp`. By default ROOT always tries first to build against external version - mean in my case it will try to build with full headers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:184,integrability,version,version,184,Again same problem? On which platform? I have external `hlohmann/json.hpp` (OpenSUSE) and it provided with `json_fwd.hpp`. By default ROOT always tries first to build against external version - mean in my case it will try to build with full headers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:29,interoperability,platform,platform,29,Again same problem? On which platform? I have external `hlohmann/json.hpp` (OpenSUSE) and it provided with `json_fwd.hpp`. By default ROOT always tries first to build against external version - mean in my case it will try to build with full headers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:184,modifiability,version,version,184,Again same problem? On which platform? I have external `hlohmann/json.hpp` (OpenSUSE) and it provided with `json_fwd.hpp`. By default ROOT always tries first to build against external version - mean in my case it will try to build with full headers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:31,interoperability,platform,platform,31,> Again same problem? On which platform? Fedora 34:. ```. $ rpm -q json-devel. json-devel-3.9.1-2.fc34.x86_64. $ rpm -ql json-devel. /usr/include/nlohmann. /usr/include/nlohmann/json.hpp. /usr/lib64/cmake/nlohmann_json. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfigVersion.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonTargets.cmake. /usr/lib64/pkgconfig/nlohmann_json.pc. /usr/share/doc/json-devel. /usr/share/doc/json-devel/README.md. /usr/share/licenses/json-devel. /usr/share/licenses/json-devel/LICENSE.MIT. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:446,interoperability,share,share,446,> Again same problem? On which platform? Fedora 34:. ```. $ rpm -q json-devel. json-devel-3.9.1-2.fc34.x86_64. $ rpm -ql json-devel. /usr/include/nlohmann. /usr/include/nlohmann/json.hpp. /usr/lib64/cmake/nlohmann_json. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfigVersion.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonTargets.cmake. /usr/lib64/pkgconfig/nlohmann_json.pc. /usr/share/doc/json-devel. /usr/share/doc/json-devel/README.md. /usr/share/licenses/json-devel. /usr/share/licenses/json-devel/LICENSE.MIT. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:473,interoperability,share,share,473,> Again same problem? On which platform? Fedora 34:. ```. $ rpm -q json-devel. json-devel-3.9.1-2.fc34.x86_64. $ rpm -ql json-devel. /usr/include/nlohmann. /usr/include/nlohmann/json.hpp. /usr/lib64/cmake/nlohmann_json. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfigVersion.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonTargets.cmake. /usr/lib64/pkgconfig/nlohmann_json.pc. /usr/share/doc/json-devel. /usr/share/doc/json-devel/README.md. /usr/share/licenses/json-devel. /usr/share/licenses/json-devel/LICENSE.MIT. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:510,interoperability,share,share,510,> Again same problem? On which platform? Fedora 34:. ```. $ rpm -q json-devel. json-devel-3.9.1-2.fc34.x86_64. $ rpm -ql json-devel. /usr/include/nlohmann. /usr/include/nlohmann/json.hpp. /usr/lib64/cmake/nlohmann_json. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfigVersion.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonTargets.cmake. /usr/lib64/pkgconfig/nlohmann_json.pc. /usr/share/doc/json-devel. /usr/share/doc/json-devel/README.md. /usr/share/licenses/json-devel. /usr/share/licenses/json-devel/LICENSE.MIT. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:542,interoperability,share,share,542,> Again same problem? On which platform? Fedora 34:. ```. $ rpm -q json-devel. json-devel-3.9.1-2.fc34.x86_64. $ rpm -ql json-devel. /usr/include/nlohmann. /usr/include/nlohmann/json.hpp. /usr/lib64/cmake/nlohmann_json. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfigVersion.cmake. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonTargets.cmake. /usr/lib64/pkgconfig/nlohmann_json.pc. /usr/share/doc/json-devel. /usr/share/doc/json-devel/README.md. /usr/share/licenses/json-devel. /usr/share/licenses/json-devel/LICENSE.MIT. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:58,safety,test,test,58,I have better variant - I will provide PR soon. One could test from cmake if forward declaration exists,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:58,testability,test,test,58,I have better variant - I will provide PR soon. One could test from cmake if forward declaration exists,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:271,integrability,pub,public,271,Here alternative: https://github.com/root-project/root/pull/8345. Please try it on your platform. Please compile with `-Droot7=ON -Dwebgui=ON -DCMAKE_CXX_VERSION=14` flags and then try `tutorials/eve7/event_demo.C` macro. I have doubt that cling like ifdefs such this in public includes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8343:88,interoperability,platform,platform,88,Here alternative: https://github.com/root-project/root/pull/8345. Please try it on your platform. Please compile with `-Droot7=ON -Dwebgui=ON -DCMAKE_CXX_VERSION=14` flags and then try `tutorials/eve7/event_demo.C` macro. I have doubt that cling like ifdefs such this in public includes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8343
https://github.com/root-project/root/pull/8345:154,deployability,version,version,154,"@amadio . I provide special define which **enables** usage of `json_fwd.hpp` include when it is found. Means if such defines not exported correctly, full version will be used. There was a reason why such ""minified"" version of json parser is used, . probably Matevz (@osschar) can comment on this. . And we prefer to keep using it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:215,deployability,version,version,215,"@amadio . I provide special define which **enables** usage of `json_fwd.hpp` include when it is found. Means if such defines not exported correctly, full version will be used. There was a reason why such ""minified"" version of json parser is used, . probably Matevz (@osschar) can comment on this. . And we prefer to keep using it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:154,integrability,version,version,154,"@amadio . I provide special define which **enables** usage of `json_fwd.hpp` include when it is found. Means if such defines not exported correctly, full version will be used. There was a reason why such ""minified"" version of json parser is used, . probably Matevz (@osschar) can comment on this. . And we prefer to keep using it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:215,integrability,version,version,215,"@amadio . I provide special define which **enables** usage of `json_fwd.hpp` include when it is found. Means if such defines not exported correctly, full version will be used. There was a reason why such ""minified"" version of json parser is used, . probably Matevz (@osschar) can comment on this. . And we prefer to keep using it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:154,modifiability,version,version,154,"@amadio . I provide special define which **enables** usage of `json_fwd.hpp` include when it is found. Means if such defines not exported correctly, full version will be used. There was a reason why such ""minified"" version of json parser is used, . probably Matevz (@osschar) can comment on this. . And we prefer to keep using it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:215,modifiability,version,version,215,"@amadio . I provide special define which **enables** usage of `json_fwd.hpp` include when it is found. Means if such defines not exported correctly, full version will be used. There was a reason why such ""minified"" version of json parser is used, . probably Matevz (@osschar) can comment on this. . And we prefer to keep using it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:306,usability,prefer,prefer,306,"@amadio . I provide special define which **enables** usage of `json_fwd.hpp` include when it is found. Means if such defines not exported correctly, full version will be used. There was a reason why such ""minified"" version of json parser is used, . probably Matevz (@osschar) can comment on this. . And we prefer to keep using it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:101,deployability,build,building,101,"Ok, this new way should work. However, it will only actually use the forward declaration header when building ROOT and when linking against ROOT using the CMake target. If one uses `${ROOT_LIBRARIES}` (still common practice, unfortunately), the full header will be used. I still think this is more trouble than it's worth (speeding up compilation a bit), but should be fine to merge now, at least.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8345:215,reliability,pra,practice,215,"Ok, this new way should work. However, it will only actually use the forward declaration header when building ROOT and when linking against ROOT using the CMake target. If one uses `${ROOT_LIBRARIES}` (still common practice, unfortunately), the full header will be used. I still think this is more trouble than it's worth (speeding up compilation a bit), but should be fine to merge now, at least.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8349:9,availability,failur,failure,9,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8349:9,deployability,fail,failure,9,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8349:9,performance,failur,failure,9,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8349:9,reliability,fail,failure,9,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8349:4,safety,test,test,4,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8349:4,testability,test,test,4,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8350:93,availability,failur,failure,93,"https://github.com/root-project/root/pull/8352 fixes the autoloading problem that causes the failure in ""projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit"" (unrelated to this PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8350
https://github.com/root-project/root/pull/8350:93,deployability,fail,failure,93,"https://github.com/root-project/root/pull/8352 fixes the autoloading problem that causes the failure in ""projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit"" (unrelated to this PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8350
https://github.com/root-project/root/pull/8350:93,performance,failur,failure,93,"https://github.com/root-project/root/pull/8352 fixes the autoloading problem that causes the failure in ""projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit"" (unrelated to this PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8350
https://github.com/root-project/root/pull/8350:93,reliability,fail,failure,93,"https://github.com/root-project/root/pull/8352 fixes the autoloading problem that causes the failure in ""projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit"" (unrelated to this PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8350
https://github.com/root-project/root/pull/8351:42,testability,understand,understand,42,"@eguiraud . File name could help a lot to understand which file triggers the problem. Probably one should provide check like `(file ? file->GetName() : """")` in arguments list?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8351
https://github.com/root-project/root/pull/8351:28,usability,help,help,28,"@eguiraud . File name could help a lot to understand which file triggers the problem. Probably one should provide check like `(file ? file->GetName() : """")` in arguments list?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8351
https://github.com/root-project/root/pull/8351:23,availability,state,statement,23,@linev that particular statement is inside the `else` of a `if (file)` (hence the warning),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8351
https://github.com/root-project/root/pull/8351:23,integrability,state,statement,23,@linev that particular statement is inside the `else` of a `if (file)` (hence the warning),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8351
https://github.com/root-project/root/pull/8353:25,availability,failur,failures,25,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:25,deployability,fail,failures,25,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:58,deployability,build,building,58,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:25,performance,failur,failures,25,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:25,reliability,fail,failures,25,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:6,safety,test,test,6,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:6,testability,test,test,6,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:92,usability,progress,progress,92,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:11,deployability,version,version,11,the latest version compiled on my machine :disappointed: will fix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:11,integrability,version,version,11,the latest version compiled on my machine :disappointed: will fix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8353:11,modifiability,version,version,11,the latest version compiled on my machine :disappointed: will fix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/issues/8357:122,deployability,patch,patch,122,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:289,deployability,patch,patch,289,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:228,integrability,rout,route,228,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:42,modifiability,pac,packages,42,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:122,safety,patch,patch,122,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:289,safety,patch,patch,289,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:122,security,patch,patch,122,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:289,security,patch,patch,289,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:92,deployability,depend,depends,92,"OK, I'll check what to do on Windows and MacOS (i.e. all non-X platforms since `fontconfig` depends on X)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:92,integrability,depend,depends,92,"OK, I'll check what to do on Windows and MacOS (i.e. all non-X platforms since `fontconfig` depends on X)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:63,interoperability,platform,platforms,63,"OK, I'll check what to do on Windows and MacOS (i.e. all non-X platforms since `fontconfig` depends on X)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:92,modifiability,depend,depends,92,"OK, I'll check what to do on Windows and MacOS (i.e. all non-X platforms since `fontconfig` depends on X)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:92,safety,depend,depends,92,"OK, I'll check what to do on Windows and MacOS (i.e. all non-X platforms since `fontconfig` depends on X)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:92,testability,depend,depends,92,"OK, I'll check what to do on Windows and MacOS (i.e. all non-X platforms since `fontconfig` depends on X)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:88,deployability,depend,depend,88,"According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:88,integrability,depend,depend,88,"According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:88,modifiability,depend,depend,88,"According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:79,reliability,doe,does,79,"According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:88,safety,depend,depend,88,"According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:88,testability,depend,depend,88,"According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:90,deployability,depend,depend,90,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:175,deployability,build,build,175,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:90,integrability,depend,depend,90,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:125,integrability,configur,configure,125,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:90,modifiability,depend,depend,90,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:125,modifiability,configur,configure,125,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:81,reliability,doe,does,81,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:90,safety,depend,depend,90,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:125,security,configur,configure,125,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:90,testability,depend,depend,90,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:201,usability,support,supported,201,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:51,interoperability,Distribut,Distributing,51,What about replacing them with a free alternative? Distributing the microsoft fonts like this is a violation of their EULA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:77,testability,simpl,simpler,77,"> What about replacing them with a free alternative? Yes, I think it will be simpler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:77,usability,simpl,simpler,77,"> What about replacing them with a free alternative? Yes, I think it will be simpler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:99,performance,time,time,99,> @bellenot is there a solution you are going to accept? I will investigate as soon as I have some time,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:71,deployability,releas,releases,71,"[Liberation fonts](https://github.com/liberationfonts/liberation-fonts/releases) seem to be a drop-in replacement with an adequate license. They are missing `symbol.ttf` which is a font we need. [Some doc](https://www.marnel.net/wp-content/uploads/2016/11/ms-fonts_alternatives.pdf) suggests ""Symbol Neu"", but [Fedora](https://src.fedoraproject.org/rpms/google-croscore-fonts/blob/rawhide/f/google-croscore-fonts.spec#_159) seems to suggest that they are not ""released"" anymore, whatever that means. Anyone knows of a FOSS `symbol.ttf`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:460,deployability,releas,released,460,"[Liberation fonts](https://github.com/liberationfonts/liberation-fonts/releases) seem to be a drop-in replacement with an adequate license. They are missing `symbol.ttf` which is a font we need. [Some doc](https://www.marnel.net/wp-content/uploads/2016/11/ms-fonts_alternatives.pdf) suggests ""Symbol Neu"", but [Fedora](https://src.fedoraproject.org/rpms/google-croscore-fonts/blob/rawhide/f/google-croscore-fonts.spec#_159) seems to suggest that they are not ""released"" anymore, whatever that means. Anyone knows of a FOSS `symbol.ttf`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:232,performance,content,content,232,"[Liberation fonts](https://github.com/liberationfonts/liberation-fonts/releases) seem to be a drop-in replacement with an adequate license. They are missing `symbol.ttf` which is a font we need. [Some doc](https://www.marnel.net/wp-content/uploads/2016/11/ms-fonts_alternatives.pdf) suggests ""Symbol Neu"", but [Fedora](https://src.fedoraproject.org/rpms/google-croscore-fonts/blob/rawhide/f/google-croscore-fonts.spec#_159) seems to suggest that they are not ""released"" anymore, whatever that means. Anyone knows of a FOSS `symbol.ttf`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:368,integrability,repositor,repositories,368,"@Axel-Naumann Google's Noto Symbols fonts might be options, they are both free ([SIL Open Font License](https://spdx.org/licenses/OFL-1.1.html)):. * <https://fonts.google.com/noto/specimen/Noto+Sans+Symbols>. * <https://fonts.google.com/noto/specimen/Noto+Sans+Symbols+2>. PS: I have vested interest in this as someone interested in getting root into default openSUSE repositories but cannot because of this final licensing issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:368,interoperability,repositor,repositories,368,"@Axel-Naumann Google's Noto Symbols fonts might be options, they are both free ([SIL Open Font License](https://spdx.org/licenses/OFL-1.1.html)):. * <https://fonts.google.com/noto/specimen/Noto+Sans+Symbols>. * <https://fonts.google.com/noto/specimen/Noto+Sans+Symbols+2>. PS: I have vested interest in this as someone interested in getting root into default openSUSE repositories but cannot because of this final licensing issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:430,availability,down,downloaded,430,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:359,deployability,releas,releases,359,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:227,energy efficiency,Core,Core,227,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:382,energy efficiency,Core,Core,382,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:562,interoperability,distribut,distribution,562,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:575,modifiability,pac,packages,575,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:628,reliability,doe,doesn,628,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:209,usability,close,closest,209,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:14,interoperability,Standard,StandardSymbolsPS,14,I also found [StandardSymbolsPS](https://github.com/ArtifexSoftware/urw-base35-fonts/blob/master/fonts/StandardSymbolsPS.otf) as a possible replacement for `symbols.ttf`. You might find https://fontdrop.info a useful website to compare fonts.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:103,interoperability,Standard,StandardSymbolsPS,103,I also found [StandardSymbolsPS](https://github.com/ArtifexSoftware/urw-base35-fonts/blob/master/fonts/StandardSymbolsPS.otf) as a possible replacement for `symbols.ttf`. You might find https://fontdrop.info a useful website to compare fonts.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8361:38,availability,slo,slow,38,"### Speed. It's actually surprisingly slow, when listing a couple of histograms. `time rootls -l -t ~/build/root/master/rwd17/tutorials/hsimple.root` takes 0.7s on a fairly fast machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:102,deployability,build,build,102,"### Speed. It's actually surprisingly slow, when listing a couple of histograms. `time rootls -l -t ~/build/root/master/rwd17/tutorials/hsimple.root` takes 0.7s on a fairly fast machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:59,integrability,coupl,couple,59,"### Speed. It's actually surprisingly slow, when listing a couple of histograms. `time rootls -l -t ~/build/root/master/rwd17/tutorials/hsimple.root` takes 0.7s on a fairly fast machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:59,modifiability,coupl,couple,59,"### Speed. It's actually surprisingly slow, when listing a couple of histograms. `time rootls -l -t ~/build/root/master/rwd17/tutorials/hsimple.root` takes 0.7s on a fairly fast machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:82,performance,time,time,82,"### Speed. It's actually surprisingly slow, when listing a couple of histograms. `time rootls -l -t ~/build/root/master/rwd17/tutorials/hsimple.root` takes 0.7s on a fairly fast machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:38,reliability,slo,slow,38,"### Speed. It's actually surprisingly slow, when listing a couple of histograms. `time rootls -l -t ~/build/root/master/rwd17/tutorials/hsimple.root` takes 0.7s on a fairly fast machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:59,testability,coupl,couple,59,"### Speed. It's actually surprisingly slow, when listing a couple of histograms. `time rootls -l -t ~/build/root/master/rwd17/tutorials/hsimple.root` takes 0.7s on a fairly fast machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:133,security,sign,signal,133,"### Details. It'd be nice to show. * number of entries, number of entries outside range, mean, stddev for histograms; maybe sumw2 to signal whether that's calculated or not. * `TFile`'s compression algo and level. * branches' data type, compression ratio, size in bytes; compression level and algo if different from `TFile`'s. * number of `TTree` entries. @guitargeek what's missing for RooFit classes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:32,energy efficiency,current,current,32,"### RNTuple ""tree"" output. e.g. current output just lists them as opaque objects:. ```. $ rootls -t test80X_NANO_rntuple.root . ROOT::Experimental::RNTuple May 27 19:09 2021 Events;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 LuminosityBlocks;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 MetaData;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 ParameterSets;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 Runs;1 ""object title"" . TObjString May 27 19:09 2021 tag;1 ""Collectable string class"" . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:174,integrability,Event,Events,174,"### RNTuple ""tree"" output. e.g. current output just lists them as opaque objects:. ```. $ rootls -t test80X_NANO_rntuple.root . ROOT::Experimental::RNTuple May 27 19:09 2021 Events;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 LuminosityBlocks;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 MetaData;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 ParameterSets;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 Runs;1 ""object title"" . TObjString May 27 19:09 2021 tag;1 ""Collectable string class"" . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:402,modifiability,Paramet,ParameterSets,402,"### RNTuple ""tree"" output. e.g. current output just lists them as opaque objects:. ```. $ rootls -t test80X_NANO_rntuple.root . ROOT::Experimental::RNTuple May 27 19:09 2021 Events;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 LuminosityBlocks;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 MetaData;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 ParameterSets;1 ""object title"" . ROOT::Experimental::RNTuple May 27 19:09 2021 Runs;1 ""object title"" . TObjString May 27 19:09 2021 tag;1 ""Collectable string class"" . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:93,availability,cluster,cluster,93,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:541,availability,Cluster,Cluster,541,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:603,availability,cluster,clusters,603,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:971,availability,Cluster,Cluster,971,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1033,availability,cluster,clusters,1033,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1081,availability,backup,backup,1081,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1108,availability,Cluster,Cluster,1108,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1170,availability,cluster,clusters,1170,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:93,deployability,cluster,cluster,93,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:541,deployability,Cluster,Cluster,541,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:603,deployability,cluster,clusters,603,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:971,deployability,Cluster,Cluster,971,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1033,deployability,cluster,clusters,1033,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1108,deployability,Cluster,Cluster,1108,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1170,deployability,cluster,clusters,1170,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:942,energy efficiency,current,current,942,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:275,interoperability,format,format,275,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:11,reliability,doe,does,11,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1081,reliability,backup,backup,1081,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1081,safety,backup,backup,1081,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:250,usability,user,user,250,"* `rootls` does not print enough information about a TTree, `rootls -t` prints too much: all cluster ranges in the file, which might be _a lot_. * `rootls -t f.root` prints information about _each namecycle_ of a tree -- that's almost never what the user wants. * the output format of `rootls -t` is difficult to parse by eye. compare:. ```. ~ rootls -t $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree Mar 27 15:37 2018 myDataset;1 ""myDataset"". nPart ""nPart/I"" 89. px ""px[nPart]/D"" 2318. py ""py[nPart]/D"" 2318. E ""E[nPart]/D"" 2317. Cluster INCLUSIVE ranges:. - # 0: [0, 2]. The total number of clusters is 1. ```. with e.g. ```. > rootbr $ROOTSYS/tutorials/dataframe/df017_vecOpsHEP.root. TTree myDataset [3]. ├── Int_t nPart. ├── Double_t px: px[nPart]. ├── Double_t py: py[nPart]. └── Double_t E: E[nPart]. ```. (gets worse with multiple trees or namecycles of a tree:. ```. /tmp rootls -t f.root. TTree Jun 07 21:29 2021 t;2 ""t"" [current cycle]. x ""x/I"" 138. Cluster INCLUSIVE ranges:. - # 0: [0, 1]. The total number of clusters is 1. TTree Jun 07 21:29 2021 t;1 ""t"" [backup cycle]. x ""x/I"" 69. Cluster INCLUSIVE ranges:. - # 0: [0, 0]. The total number of clusters is 1. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:911,availability,backup,backup,911,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1062,availability,backup,backup,1062,"re addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1179,availability,backup,backup,1179,"ycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursivel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1310,availability,backup,backup,1310,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:285,energy efficiency,Profil,Profile,285,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:345,energy efficiency,Profil,Profile,345,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:807,energy efficiency,Profil,Profile,807,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:833,energy efficiency,current,current,833,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:885,energy efficiency,Profil,Profile,885,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:986,energy efficiency,current,current,986,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1120,energy efficiency,current,current,1120,"es of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1244,energy efficiency,current,current,1244,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1702,energy efficiency,current,current,1702,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1912,integrability,rout,route,1912,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:414,interoperability,distribut,distribution,414,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:472,interoperability,distribut,distribution,472,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:971,interoperability,distribut,distribution,971,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1047,interoperability,distribut,distribution,1047,"nfusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadula",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1580,interoperability,specif,specific,1580,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:2135,interoperability,format,format,2135,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:2207,interoperability,format,format,2207,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:285,performance,Profil,Profile,285,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:345,performance,Profil,Profile,345,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:807,performance,Profil,Profile,807,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:885,performance,Profil,Profile,885,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1485,performance,time,time,1485,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:911,reliability,backup,backup,911,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1062,reliability,backup,backup,1062,"re addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1179,reliability,backup,backup,1179,"ycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursivel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1310,reliability,backup,backup,1310,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:911,safety,backup,backup,911,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1062,safety,backup,backup,1062,"re addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1179,safety,backup,backup,1179,"ycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursivel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1310,safety,backup,backup,1310,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:19,testability,context,context,19,"To give a bit more context, `rootls` was even more confusing before addressing #7053 since it was printing multiple namecycles of a objects *without* stating they were multiple namecycles . Example with ROOT 6.22.08. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1414,testability,understand,understand,1414,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1522,usability,user,users,1522,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:1995,usability,effectiv,effectively,1995,"``. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH1F Jun 12 10:00 2021 hpx ""This is the px distribution"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TH2F Jun 12 10:00 2021 hpxpy ""py vs px"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple"". ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77. ```. [~]: rootls -l myfile.root . TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]. TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]. TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]. TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]. TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]. TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]. TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]. TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]. ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees. ```. vpadulan@fedorathinkpad-T550 [~]: rootls -h. [...]. -l, --longListing Use a long listing format. -t, --treeListing Print tree recursively and use a long listing format. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8361:143,usability,user,user-images,143,`rootls -t` also has a problem with long lines. this is what happens with a file with certain branches that have long names:. ![image](https://user-images.githubusercontent.com/10999034/122401221-b38a1f00-cf7c-11eb-8626-ce609bb5d61f.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/issues/8363:78,deployability,Releas,Release,78,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8363
https://github.com/root-project/root/issues/8363:86,deployability,Version,Version,86,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8363
https://github.com/root-project/root/issues/8363:114,deployability,releas,release,114,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8363
https://github.com/root-project/root/issues/8363:100,energy efficiency,schedul,scheduled,100,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8363
https://github.com/root-project/root/issues/8363:86,integrability,Version,Version,86,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8363
https://github.com/root-project/root/issues/8363:86,modifiability,Version,Version,86,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8363
https://github.com/root-project/root/issues/8363:100,performance,schedul,scheduled,100,Hi @cxwx! The requested feature is now added to master. It should be added in Release Version 6.28 (scheduled for release in May).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8363
https://github.com/root-project/root/issues/8365:2122,availability,operat,operator,2122," (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread_mutex_init (in /usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2302,availability,operat,operator,2302,") (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4148,availability,operat,operator,4148,"nd-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). by 0x11D4FE: main (main.cxx:82). Address 0x265c1600 is 16 bytes inside a block of size 56 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x7ABA901: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (Main",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4328,availability,operat,operator,4328,"9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). by 0x11D4FE: main (main.cxx:82). Address 0x265c1600 is 16 bytes inside a block of size 56 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x7ABA901: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). Block was alloc'd by thread #1. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: 1, at address 0x265C1600. at 0x5BDACDE: TUnixSyste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:6351,availability,operat,operator,6351," (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:6531,availability,operat,operator,6531,") (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::L",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2,deployability,manag,managed,2,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:69,deployability,patch,patch,69,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:84,deployability,patch,patch,84,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:151,deployability,patch,patch,151,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3071,deployability,observ,observed,3071,"ide a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). by 0x11D4FE: main (main.cxx:82). Address",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2,energy efficiency,manag,managed,2,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13,energy efficiency,reduc,reduce,13,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2099,energy efficiency,alloc,alloc,2099,"em::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2954,energy efficiency,alloc,alloc,2954,"void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsign",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4125,energy efficiency,alloc,alloc,4125,"algrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). by 0x11D4FE: main (main.cxx:82). Address 0x265c1600 is 16 bytes inside a block of size 56 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x7ABA901: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5179,energy efficiency,alloc,alloc,5179,"sr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x7ABA901: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). Block was alloc'd by thread #1. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: 1, at address 0x265C1600. at 0x5BDACDE: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:6328,energy efficiency,alloc,alloc,6328,"em::DispatchTimers(bool) (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7183,energy efficiency,alloc,alloc,7183,"void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1429,interoperability,conflict,conflicts,1429,"?? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5658,interoperability,conflict,conflicts,5658,"mer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). Block was alloc'd by thread #1. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: 1, at address 0x265C1600. at 0x5BDACDE: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1061,performance,Lock,Locks,1061,"ched patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1484,performance,Lock,Locks,1484,"ux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3042,performance,Lock,Lock,3042,"ress 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). by 0x11D4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5270,performance,Lock,Locks,5270,"igned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x7ABA901: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). Block was alloc'd by thread #1. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: 1, at address 0x265C1600. at 0x5BDACDE: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Add",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5713,performance,Lock,Locks,5713,"w::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). Block was alloc'd by thread #1. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: 1, at address 0x265C1600. at 0x5BDACDE: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7483,performance,Lock,Lock,7483,"g) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7534,performance,Lock,Lock,7534,"tor new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:8097,performance,lock,lock,8097,"(dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9041,performance,lock,lock,9041,"tem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9263,performance,Lock,Lock,9263,"tem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9314,performance,Lock,Lock,9314,"tem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2,safety,manag,managed,2,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:69,safety,patch,patch,69,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:84,safety,patch,patch,84,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:151,safety,patch,patch,151,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:69,security,patch,patch,69,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:84,security,patch,patch,84,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:151,security,patch,patch,151,"I managed to reduce a bit the number of data races with the attached patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TTh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1061,security,Lock,Locks,1061,"ched patch. . [race.patch.zip](https://github.com/root-project/root/files/6620295/race.patch.zip). Now I get:. ```. ---Thread-Announcement------------------------------------------. Thread #2 was created. at 0x6D6070E: clone (clone.S:71). by 0x60E8EC4: create_thread (createthread.c:100). by 0x60E8EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797). by 0x4C38A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1484,security,Lock,Locks,1484,"ux.so). by 0x7ABA260: TPosixThread::Run(TThread*) (TPosixThread.cxx:52). by 0x7AB61CA: TThread::Run(void*) (TThread.cxx:576). by 0x4E5D108: RThread::Start() (RThread.cpp:62). by 0x4E6C34B: MainWindow::DoStartDAQ() (MainWindow.cpp:1216). by 0x4E6DB7C: MainWindow::AcquirePRBS() (MainWindow.cpp:1476). by 0x11D697: main (main.cxx:94). ---Thread-Announcement------------------------------------------. Thread #1 is the program's root thread. ----------------------------------------------------------------. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: none. at 0x5BDAAB9: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2956). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3042,security,Lock,Lock,3042,"ress 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). by 0x11D4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5270,security,Lock,Locks,5270,"igned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x7ABA901: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). Block was alloc'd by thread #1. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: 1, at address 0x265C1600. at 0x5BDACDE: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Add",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5713,security,Lock,Locks,5713,"w::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). Block was alloc'd by thread #1. Possible data race during write of size 1 at 0xB2D0758 by thread #1. Locks held: 1, at address 0x265C1600. at 0x5BDACDE: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2976). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). by 0x11D768: main (main.cxx:112). This conflicts with a previous read of size 1 by thread #2. Locks held: none. at 0x5BDAF58: TUnixSystem::ResetTimer(TTimer*) (TUnixSystem.cxx:3010). by 0x5BDADAE: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2987). by 0x7AB7E06: TThreadTimer::TThreadTimer(long) (TThread.cxx:1209). by 0x7AB750D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1042). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7248,security,sign,signal,7248,"(TThread.cxx:828). Address 0xb2d0758 is 168 bytes inside a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7483,security,Lock,Lock,7483,"g) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7534,security,Lock,Lock,7534,"tor new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:8097,security,lock,lock,8097,"(dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. Process terminating with default action of signal 2 (SIGINT). at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9041,security,lock,lock,9041,"tem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9263,security,Lock,Lock,9263,"tem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9314,security,Lock,Lock,9314,"tem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ----------------------------------------------------------------. Thread #2: Exiting thread still holds 1 lock. at 0x60EEAD3: futex_wait_cancelable (futex-internal.h:88). by 0x60EEAD3: __pthread_cond_wait_common (pthread_cond_wait.c:502). by 0x60EEAD3: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:655). by 0x4C38DC3: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9A02: TPosixCondition::Wait() (TPosixCondition.cxx:65). by 0x7AB765D: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1069). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). ----------------------------------------------------------------. Thread #1: Exiting thread still holds 1 lock. at 0x60F21FD: __lll_lock_wait (lowlevellock.S:135). by 0x60EB0F3: pthread_mutex_lock (pthread_mutex_lock.c:115). by 0x4C35FD6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9F0D: TPosixMutex::Lock() (TPosixMutex.cxx:76). by 0x7A991BC: TMutex::Lock() (TMutex.cxx:48). by 0x7AB7EB7: TThreadTimer::Notify() (TThread.cxx:1220). by 0x5ACC1D9: TTimer::CheckTimer(TTime const&) (TTimer.cxx:132). by 0x5BDAC20: TUnixSystem::DispatchTimers(bool) (TUnixSystem.cxx:2967). by 0x5BD5A48: TUnixSystem::DispatchOneEvent(bool) (TUnixSystem.cxx:1100). by 0x5AB6BC2: TSystem::InnerLoop() (TSystem.cxx:409). by 0x5AB6953: TSystem::Run() (TSystem.cxx:359). by 0x5A3F120: TApplication::Run(bool) (TApplication.cxx:1624). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3071,testability,observ,observed,3071,"ide a block of size 672 alloc'd. at 0x4C3359F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x5A9F485: TStorage::ObjectAlloc(unsigned long) (TStorage.cxx:330). by 0x4E5E9DD: TObject::operator new(unsigned long) (TObject.h:167). by 0x5A2C9D3: TROOT::InitSystem() (TROOT.cxx:1926). by 0x5A277F6: TROOT::TROOT(char const*, char const*, void (**)()) (TROOT.cxx:667). by 0x5A32A0C: ROOT::Internal::TROOTAllocator::TROOTAllocator() (TROOT.cxx:334). by 0x5A267B6: ROOT::Internal::GetROOT1() (TROOT.cxx:376). by 0x5A26B62: ROOT::GetROOT() (TROOT.cxx:466). by 0x5A31563: __static_initialization_and_destruction_0(int, int) (TROOT.cxx:584). by 0x5A315AA: _GLOBAL__sub_I_TROOT.cxx (TROOT.cxx:3125). by 0x40108D2: call_init (dl-init.c:72). by 0x40108D2: _dl_init (dl-init.c:119). by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so). Block was alloc'd by thread #1. ----------------------------------------------------------------. Lock at 0x265C1600 was first observed. at 0x4C39F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x7AB9D77: TPosixMutex::TPosixMutex(bool) (TPosixMutex.cxx:42). by 0x7ABA912: TPosixThreadFactory::CreateMutexImp(bool) (TPosixThreadFactory.cxx:45). by 0x7A9913B: TMutex::TMutex(bool) (TMutex.cxx:36). by 0x7A99280: TMutex::Factory(bool) (TMutex.cxx:89). by 0x5AB6DC1: TSystem::AddTimer(TTimer*) (TSystem.cxx:479). by 0x5BDAD8E: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2986). by 0x53C5642: TGTextView::Init(unsigned long) (TGTextView.cxx:101). by 0x53C58C3: TGTextView::TGTextView(TGWindow const*, unsigned int, unsigned int, int, unsigned int, unsigned long) (TGTextView.cxx:122). by 0x52C6394: TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:72). by 0x4E6810B: MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:614). by 0x11D4FE: main (main.cxx:82). Address",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:333,availability,error,error,333,"After the changes from https://github.com/root-project/root/pull/8562 and https://github.com/root-project/root/pull/8572, I am left only with this data race:. - TList::NewLink vs TList::FindObject. ![image](https://user-images.githubusercontent.com/10653970/123883394-f225bf00-d916-11eb-869f-ab5d021c6f68.png). - And then I see this error, that might be the reason of the freeze of my program. ![image](https://user-images.githubusercontent.com/10653970/123883669-7b3cf600-d917-11eb-8ac9-67a1e782282b.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:333,performance,error,error,333,"After the changes from https://github.com/root-project/root/pull/8562 and https://github.com/root-project/root/pull/8572, I am left only with this data race:. - TList::NewLink vs TList::FindObject. ![image](https://user-images.githubusercontent.com/10653970/123883394-f225bf00-d916-11eb-869f-ab5d021c6f68.png). - And then I see this error, that might be the reason of the freeze of my program. ![image](https://user-images.githubusercontent.com/10653970/123883669-7b3cf600-d917-11eb-8ac9-67a1e782282b.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:333,safety,error,error,333,"After the changes from https://github.com/root-project/root/pull/8562 and https://github.com/root-project/root/pull/8572, I am left only with this data race:. - TList::NewLink vs TList::FindObject. ![image](https://user-images.githubusercontent.com/10653970/123883394-f225bf00-d916-11eb-869f-ab5d021c6f68.png). - And then I see this error, that might be the reason of the freeze of my program. ![image](https://user-images.githubusercontent.com/10653970/123883669-7b3cf600-d917-11eb-8ac9-67a1e782282b.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:215,usability,user,user-images,215,"After the changes from https://github.com/root-project/root/pull/8562 and https://github.com/root-project/root/pull/8572, I am left only with this data race:. - TList::NewLink vs TList::FindObject. ![image](https://user-images.githubusercontent.com/10653970/123883394-f225bf00-d916-11eb-869f-ab5d021c6f68.png). - And then I see this error, that might be the reason of the freeze of my program. ![image](https://user-images.githubusercontent.com/10653970/123883669-7b3cf600-d917-11eb-8ac9-67a1e782282b.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:333,usability,error,error,333,"After the changes from https://github.com/root-project/root/pull/8562 and https://github.com/root-project/root/pull/8572, I am left only with this data race:. - TList::NewLink vs TList::FindObject. ![image](https://user-images.githubusercontent.com/10653970/123883394-f225bf00-d916-11eb-869f-ab5d021c6f68.png). - And then I see this error, that might be the reason of the freeze of my program. ![image](https://user-images.githubusercontent.com/10653970/123883669-7b3cf600-d917-11eb-8ac9-67a1e782282b.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:411,usability,user,user-images,411,"After the changes from https://github.com/root-project/root/pull/8562 and https://github.com/root-project/root/pull/8572, I am left only with this data race:. - TList::NewLink vs TList::FindObject. ![image](https://user-images.githubusercontent.com/10653970/123883394-f225bf00-d916-11eb-869f-ab5d021c6f68.png). - And then I see this error, that might be the reason of the freeze of my program. ![image](https://user-images.githubusercontent.com/10653970/123883669-7b3cf600-d917-11eb-8ac9-67a1e782282b.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:127,availability,error,error,127,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:127,performance,error,error,127,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:208,performance,lock,lock,208,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:188,reliability,Doe,Does,188,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:98,safety,safe,safe,98,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:127,safety,error,error,127,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:208,security,lock,lock,208,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:127,usability,error,error,127,"> TList::NewLink vs TList::FindObject. Is this still an issue after making the collection 'thread-safe'? > And then I see this error, that might be the reason of the freeze of my program. Does it say 'which' lock is still being held?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:291,deployability,log,log,291,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:782,deployability,version,version,782,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:495,energy efficiency,core,core,495,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:670,energy efficiency,core,core,670,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:782,integrability,version,version,782,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:778,interoperability,XML,XML,778,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:782,modifiability,version,version,782,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:408,performance,time,timer,408,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:541,performance,time,time,541,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:98,safety,compl,completely,98,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
