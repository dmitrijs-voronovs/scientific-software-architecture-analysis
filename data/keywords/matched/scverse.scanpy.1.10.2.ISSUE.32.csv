id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/scverse/scanpy/issues/2778:1441,safety,Error,Error,1441,"r branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable and hence why it's throwing the error. ### Versions. <details>. ```. scanpy 1.9.6. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:1528,safety,modul,module,1528,"r branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable and hence why it's throwing the error. ### Versions. <details>. ```. scanpy 1.9.6. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:2274,safety,error,error,2274,"r branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable and hence why it's throwing the error. ### Versions. <details>. ```. scanpy 1.9.6. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:439,security,availab,available,439,"Can't use `sc.pl.spatial` - `TypeError: can't multiply sequence by non-int of type 'float`; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. """,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:1240,security,control,control,1240,"s on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable an",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:1240,testability,control,control,1240,"s on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable an",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:1464,testability,Trace,Traceback,1464,"r branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable and hence why it's throwing the error. ### Versions. <details>. ```. scanpy 1.9.6. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:220,usability,confirm,confirmed,220,"Can't use `sc.pl.spatial` - `TypeError: can't multiply sequence by non-int of type 'float`; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. """,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:303,usability,confirm,confirmed,303,"Can't use `sc.pl.spatial` - `TypeError: can't multiply sequence by non-int of type 'float`; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. """,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:612,usability,error,error,612,"Can't use `sc.pl.spatial` - `TypeError: can't multiply sequence by non-int of type 'float`; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. """,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:686,usability,Minim,Minimal,686,"Can't use `sc.pl.spatial` - `TypeError: can't multiply sequence by non-int of type 'float`; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. """,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:1441,usability,Error,Error,1441,"r branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable and hence why it's throwing the error. ### Versions. <details>. ```. scanpy 1.9.6. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:1678,usability,user,user,1678,"r branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable and hence why it's throwing the error. ### Versions. <details>. ```. scanpy 1.9.6. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/issues/2778:2274,usability,error,error,2274,"r branch of scanpy. ### What happened? I'm trying to use `sc.pl.spatial` with the dataset that is available on 10X Visium with the sample ID `CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma`. I can open and do some basic QC just fine, but when I try to plot, I get the error `TypeError: can't multiply sequence by non-int of type 'float`. ### Minimal code sample. ```python. import scanpy as sc. import anndata as an. import pandas as pd. import numpy as np. import matplotlib as mpl. import matplotlib.pyplot as plt. import seaborn as sns. import scanorama. sc.set_figure_params(facecolor=""white"", figsize=(8, 8)). sc.settings.verbosity = 3. # Loading dataset. adata = sc.read_visium(. path=r""\external"",. count_file=""CytAssist_FFPE_Human_Lung_Squamous_Cell_Carcinoma_filtered_feature_bc_matrix.h5"",. load_images=True,. source_image_path=r""\spatial"",. ). adata.var_names_make_unique(). # Quality control. adata.var[""mito""] = adata.var_names.str.startswith(""MT-""). sc.pp.calculate_qc_metrics(. adata, qc_vars=[""mito""], percent_top=None, log1p=False, inplace=True. ). sc.pl.spatial(adata). ```. ### Error output. ```pytb. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""\scanpy\plotting\_tools\scatterplots.py"", line 1002, in spatial. File ""\plotting\_tools\scatterplots.py"", line 391, in embedding. # if user did not set alpha, set alpha to 0.7. File ""\scanpy\plotting\_utils.py"", line 1107, in circles. if scale_factor != 1.0:. TypeError: can't multiply sequence by non-int of type 'float'. ```. The json file on the spatial folder with the scale factors is as follows:. ```json. {. ""regist_target_img_scalef"": 0.16836435,. ""tissue_hires_scalef"": 0.056121446,. ""tissue_lowres_scalef"": 0.016836435,. ""fiducial_diameter_fullres"": 384.18505640709947,. ""spot_diameter_fullres"": 256.12337093806633. }. ```. `tissue_hires_scalef` is being passed as `scale_factor` variable and hence why it's throwing the error. ### Versions. <details>. ```. scanpy 1.9.6. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2778
https://github.com/scverse/scanpy/pull/2779:439,deployability,releas,release,439,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:464,deployability,Releas,Release,464,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:241,safety,review,review,241,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:341,safety,Test,Tests,341,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:241,testability,review,review,241,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:341,testability,Test,Tests,341,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:92,usability,guid,guidelines,92,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:123,usability,guid,guide,123,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:219,usability,workflow,workflow,219,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/pull/2779:325,usability,Close,Closes,325,Fix anndata warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779
https://github.com/scverse/scanpy/issues/2780:324,deployability,log,log,324,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:384,deployability,log,log-normalized,384,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:155,modifiability,paramet,parameters,155,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:324,safety,log,log,324,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:384,safety,log,log-normalized,384,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:324,security,log,log,324,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:384,security,log,log-normalized,384,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:324,testability,log,log,324,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2780:384,testability,log,log-normalized,384,"`highly_variable_genes(flavor='seurat')` results differ from Seurat’s HVG results; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780
https://github.com/scverse/scanpy/issues/2781:247,availability,slo,slow,247,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:330,energy efficiency,core,core,330,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:575,energy efficiency,alloc,allocated,575,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:114,modifiability,paramet,parameters,114,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:0,performance,Perform,Performance,0,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:357,performance,memor,memory,357,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:555,performance,memor,memory,555,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:664,performance,perform,performance,664,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:1050,performance,Parallel,Parallel,1050,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:1305,performance,bottleneck,bottlenecking,1305,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:1323,performance,perform,performance,1323,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:247,reliability,slo,slow,247,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:453,reliability,pra,practically,453,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:1265,reliability,doe,doesn,1265,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:1335,safety,except,except,1335,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:29,testability,Regress,Regress,29,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:0,usability,Perform,Performance,0,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:357,usability,memor,memory,357,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:555,usability,memor,memory,555,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:664,usability,perform,performance,664,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/issues/2781:1323,usability,perform,performance,1323,"Performance improvements for Regress Out; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I am using `regress_out` and it is painfully slow. Even on a system where I set `n_jobs=36` and `sc.settings.n_jobs = 36`, each core of which has 36Gib of memory, I find that . ```. sc.pp.regress_out(adata, ['total_counts', ], n_jobs=n_jobs). ```. is practically unusable. At the moment that calculation is at `985` minutes. Looking at `htop` while the memory is certainly allocated (`191 Gib / 1.48Tb`), it _feels_ like setting `n_jobs` at all actually hinders performance.... I've checked the [source code](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L580) so I know that [`n_jobs`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L631C5-L631C55). should be set correctly. ```python. n_jobs = sett.n_jobs if n_jobs is None else n_jobs # NOTE: sett.n_jobs defaults to 1. # ... res = Parallel(n_jobs=n_jobs)(delayed(_regress_out_chunk)(task) for task in tasks). ```. Looking at [`_regress_out_chunk`](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L692), there really doesn't seem to be anything necessarily bottlenecking the performance except for either setting the [chunk length](https://github.com/scverse/scanpy/blob/master/scanpy/preprocessing/_simple.py#L662C5-L662C14) in `regress_out`, or just the size of the dataset... ```python. len_chunk = np.ceil(min(1000, X.shape[1]) / n_jobs).astype(int). ```. Am I missing something?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2781
https://github.com/scverse/scanpy/pull/2782:453,deployability,releas,release,453,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:478,deployability,Releas,Release,478,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:251,safety,review,review,251,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:355,safety,Test,Tests,355,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:251,testability,review,review,251,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:355,testability,Test,Tests,355,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:102,usability,guid,guidelines,102,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:133,usability,guid,guide,133,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:229,usability,workflow,workflow,229,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2782:335,usability,Close,Closes,335,Fix Seurat n_top_genes default; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2427. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782
https://github.com/scverse/scanpy/pull/2785:419,deployability,releas,release,419,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:444,deployability,Releas,Release,444,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:18,safety,test,tests,18,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:244,safety,review,review,244,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:346,safety,Test,Tests,346,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:481,safety,test,tests,481,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:18,testability,test,tests,18,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:244,testability,review,review,244,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:346,testability,Test,Tests,346,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:481,testability,test,tests,481,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:95,usability,guid,guidelines,95,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:126,usability,guid,guide,126,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:222,usability,workflow,workflow,222,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2785:328,usability,Close,Closes,328,Fix scrublet plot tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: tests only change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785
https://github.com/scverse/scanpy/pull/2786:452,deployability,releas,release,452,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:477,deployability,Releas,Release,477,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:5,safety,test,test,5,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:240,safety,review,review,240,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:342,safety,Test,Tests,342,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:563,safety,test,tests,563,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:5,testability,test,test,5,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:240,testability,review,review,240,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:342,testability,Test,Tests,342,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:563,testability,test,tests,563,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:91,usability,guid,guidelines,91,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:122,usability,guid,guide,122,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:218,usability,workflow,workflow,218,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:324,usability,Close,Closes,324,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/pull/2786:536,usability,help,help,536,Show test durations; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786
https://github.com/scverse/scanpy/issues/2788:1813,availability,sli,slice,1813,"ub.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:30,deployability,API,APIs,30,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:157,deployability,version,version,157,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:478,deployability,observ,observed,478,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:563,deployability,api,api,563,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:691,deployability,api,api,691,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:784,deployability,version,version,784,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:866,deployability,observ,observed,866,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1266,deployability,version,version,1266,"functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1512,deployability,version,version,1512,"](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psut",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1981,deployability,Version,Versions,1981,"lotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session info",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2993,deployability,updat,updated,2993," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1465,energy efficiency,current,currently,1465,"ault of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. pa",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1584,energy efficiency,current,current,1584,"pby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2095,energy efficiency,cloud,cloudpickle,2095," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:30,integrability,API,APIs,30,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:157,integrability,version,version,157,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:563,integrability,api,api,563,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:691,integrability,api,api,691,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:784,integrability,version,version,784,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1266,integrability,version,version,1266,"functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1512,integrability,version,version,1512,"](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psut",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1747,integrability,batch,batch,1747," will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1981,integrability,Version,Versions,1981,"lotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session info",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:30,interoperability,API,APIs,30,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:563,interoperability,api,api,563,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:691,interoperability,api,api,691,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2498,interoperability,plug,pluggy,2498," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:157,modifiability,version,version,157,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:784,modifiability,version,version,784,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1174,modifiability,paramet,parameter,1174,"X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1266,modifiability,version,version,1266,"functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1512,modifiability,version,version,1512,"](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psut",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1981,modifiability,Version,Versions,1981,"lotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session info",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2468,modifiability,pac,packaging,2468," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1747,performance,batch,batch,1747," will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1813,reliability,sli,slice,1813,"ub.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:968,safety,except,except,968,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1320,safety,avoid,avoid,1320,"nore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. l",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1669,safety,test,tests,1669,"docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklea",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2993,safety,updat,updated,2993," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2973,security,Session,Session,2973," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2993,security,updat,updated,2993," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:478,testability,observ,observed,478,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:866,testability,observ,observed,866,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1669,testability,test,tests,1669,"docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklea",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:117,usability,confirm,confirmed,117,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:200,usability,confirm,confirmed,200,"Scanpy uses deprecated Pandas APIs; - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. Many scanpy functions raise warnings, to the point that people ignore them when they happen. - [x] #2678. - Deprecated `is_categorical_dtype`. - Deprecated `pandas.value_counts`. - [x] #2789. - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1592,usability,behavi,behavior,1592,"#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:1860,usability,document,documentation,1860,"bserved=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby). - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/issues/2788:2760,usability,tool,toolz,2760," `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”. - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning. - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead. - same for nanmean/SeriesGroupBy.mean. - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```. -----. anndata 0.10.3. scanpy 1.10.0.dev178+ga073532a. -----. PIL 10.1.0. asciitree NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2023.12.1. dateutil 2.8.2. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jinja2 3.1.2. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.2. packaging 23.2. pandas 2.1.4. pluggy 1.3.0. psutil 5.9.7. py NA. pyparsing 3.1.1. pytest 7.4.3. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 69.0.2. setuptools_scm NA. six 1.16.0. sklearn 1.3.2. sparse 0.14.0. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.12. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 14 2023, 09:36:21) [GCC 13.2.1 20230801]. Linux-6.6.7-zen1-1-zen-x86_64-with-glibc2.38. -----. Session information updated at 2023-12-19 16:08. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788
https://github.com/scverse/scanpy/pull/2789:422,deployability,releas,release,422,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:447,deployability,Releas,Release,447,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:245,safety,review,review,245,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:349,safety,Test,Tests,349,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:245,testability,review,review,245,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:349,testability,Test,Tests,349,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:96,usability,guid,guidelines,96,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:127,usability,guid,guide,127,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:223,usability,workflow,workflow,223,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2789:329,usability,Close,Closes,329,Fix more pandas warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2788. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789
https://github.com/scverse/scanpy/pull/2790:468,deployability,releas,release,468,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:493,deployability,Releas,Release,493,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:0,interoperability,Format,Format,0,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:256,safety,review,review,256,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:358,safety,Test,Tests,358,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:256,testability,review,review,256,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:358,testability,Test,Tests,358,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:107,usability,guid,guidelines,107,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:138,usability,guid,guide,138,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:234,usability,workflow,workflow,234,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/pull/2790:340,usability,Close,Closes,340,Format code in docstrings with Ruff; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev process. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev process.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2790
https://github.com/scverse/scanpy/issues/2791:642,availability,error,error,642,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1773,availability,Error,Error,1773,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:8,deployability,version,version,8,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:211,deployability,version,version,211,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:347,deployability,instal,install,347,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:589,deployability,instal,installed,589,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:620,deployability,build,build,620,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:753,deployability,instal,installed,753,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:799,deployability,depend,dependency,799,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:961,deployability,depend,dependencies,961,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1038,deployability,build,build,1038,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1084,deployability,depend,depends,1084,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1621,deployability,version,version,1621,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1806,deployability,Version,Versions,1806,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:8,integrability,version,version,8,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:211,integrability,version,version,211,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:799,integrability,depend,dependency,799,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:961,integrability,depend,dependencies,961,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1084,integrability,depend,depends,1084,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1571,integrability,sub,subdir,1571,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1621,integrability,version,version,1621,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1806,integrability,Version,Versions,1806,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1552,interoperability,platform,platform,1552,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:8,modifiability,version,version,8,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:211,modifiability,version,version,211,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:495,modifiability,pac,package,495,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:659,modifiability,pac,package,659,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:799,modifiability,depend,dependency,799,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:882,modifiability,pac,package,882,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:961,modifiability,depend,dependencies,961,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1084,modifiability,depend,depends,1084,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1253,modifiability,pac,packaging,1253,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1621,modifiability,version,version,1621,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1806,modifiability,Version,Versions,1806,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:642,performance,error,error,642,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1200,performance,network,networkx,1200,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1592,performance,time,timestamp,1592,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1773,performance,Error,Error,1773,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:642,safety,error,error,642,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:799,safety,depend,dependency,799,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:961,safety,depend,dependencies,961,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1084,safety,depend,depends,1084,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1700,safety,test,test,1700,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1773,safety,Error,Error,1773,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1200,security,network,networkx,1200,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1382,security,session,session-info,1382,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:799,testability,depend,dependency,799,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:961,testability,depend,dependencies,961,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1084,testability,depend,depends,1084,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1700,testability,test,test,1700,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:171,usability,confirm,confirmed,171,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:254,usability,confirm,confirmed,254,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:642,usability,error,error,642,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1328,usability,learn,learn,1328,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1436,usability,learn,learn,1436,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1652,usability,Minim,Minimal,1652,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/issues/2791:1773,usability,Error,Error,1773,"Seaborn version requirement inconsistency; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`. Conda raised a solving issue due to . `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`. I tried the second build (1ab_1) and the error stayed:. ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:. ```json. {. ""arch"": null,. ""build"": ""pyhd8ed1ab_1"",. ""build_number"": 1,. ""depends"": [. ""anndata >=0.7.4"",. ""get-annotations"",. ""h5py >=3"",. ""joblib"",. ""matplotlib-base >=3.6"",. ""natsort"",. ""networkx >=2.3"",. ""numba >=0.41"",. ""numpy >=1.17"",. ""packaging"",. ""pandas >=1.1.1,!=2.1.2"",. ""patsy"",. ""python >=3.8"",. ""scikit-learn >=0.24"",. ""scipy >=1.4"",. ""seaborn !=0.13.0"",. ""session-info"",. ""statsmodels >=0.11"",. ""tqdm"",. ""umap-learn >=0.3.10"". ],. ""license"": ""BSD-3-Clause"",. ""license_family"": ""BSD"",. ""name"": ""scanpy"",. ""noarch"": ""python"",. ""platform"": null,. ""subdir"": ""noarch"",. ""timestamp"": 1699376683854,. ""version"": ""1.9.6"". }. ```. ### Minimal code sample. ```python. conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge. ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791
https://github.com/scverse/scanpy/pull/2792:57,availability,consist,consistency,57,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:507,deployability,releas,release,507,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:616,deployability,Releas,Release,616,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:641,deployability,updat,update,641,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:650,deployability,depend,depending,650,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:688,deployability,updat,update,688,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1846,deployability,integr,integration,1846,"` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:4603,deployability,contain,contain,4603,"ript ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1468,energy efficiency,current,currently,1468,"lowing box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.met",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3216,energy efficiency,load,load,3216," `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reporte",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3668,energy efficiency,adapt,adapted,3668,"itions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, so",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:5879,energy efficiency,adapt,adapted,5879,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:650,integrability,depend,depending,650,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:982,integrability,batch,batches-in-which-genes-are-highly-variable,982,".pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which the",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1068,integrability,batch,batches,1068,"rovement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide whi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1344,integrability,batch,batches,1344," Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1385,integrability,batch,batches-in-which-genes-are-highly-variable,1385,">. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1696,integrability,batch,batches,1696,"dance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR sugge",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1846,integrability,integr,integration,1846,"` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1983,integrability,batch,batches,1983,"es-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2639,integrability,batch,batch,2639,"res`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3305,integrability,filter,filterin,3305,"up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3668,integrability,adapt,adapted,3668,"itions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, so",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3915,integrability,batch,batch,3915,"spected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:4011,integrability,standardiz,standardized,4011,"ng the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seur",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:4813,integrability,filter,filterin,4813,"ts/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R s",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:5879,integrability,adapt,adapted,5879,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1846,interoperability,integr,integration,1846,"` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3668,interoperability,adapt,adapted,3668,"itions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, so",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:4011,interoperability,standard,standardized,4011,"ng the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seur",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:5879,interoperability,adapt,adapted,5879,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:650,modifiability,depend,depending,650,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1016,modifiability,variab,variable,1016,"le_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly vari",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1419,modifiability,variab,variable,1419," #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and S",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1846,modifiability,integr,integration,1846,"` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2016,modifiability,variab,variable,2016,"able and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2094,modifiability,variab,variable,2094,"[Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. *",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3668,modifiability,adapt,adapted,3668,"itions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, so",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:5879,modifiability,adapt,adapted,5879,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:982,performance,batch,batches-in-which-genes-are-highly-variable,982,".pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which the",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1068,performance,batch,batches,1068,"rovement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide whi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1344,performance,batch,batches,1344," Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1385,performance,batch,batches-in-which-genes-are-highly-variable,1385,">. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1696,performance,batch,batches,1696,"dance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR sugge",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1983,performance,batch,batches,1983,"es-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2639,performance,batch,batch,2639,"res`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3216,performance,load,load,3216," `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reporte",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3915,performance,batch,batch,3915,"spected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1846,reliability,integr,integration,1846,"` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2270,reliability,doe,does,2270,"e/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.da",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3383,reliability,doe,doesnt,3383,"r=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flav",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:4891,reliability,doe,doesnt,4891,"rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from ht",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:331,safety,review,review,331,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:532,safety,Test,Tests,532,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:641,safety,updat,update,641,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:650,safety,depend,depending,650,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:688,safety,updat,update,688,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2529,safety,avoid,avoid,2529,"results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_var",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3627,safety,test,tests,3627," on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by S",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3814,safety,test,tests,3814,"and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filt",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:5838,safety,test,tests,5838,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:6024,safety,test,tests,6024,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:641,security,updat,update,641,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:688,security,updat,update,688,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1846,security,integr,integration,1846,"` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:331,testability,review,review,331,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:532,testability,Test,Tests,532,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:650,testability,depend,depending,650,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:726,testability,Context,Context,726,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:1846,testability,integr,integration,1846,"` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3627,testability,test,tests,3627," on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by S",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3814,testability,test,tests,3814,"and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filt",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:3939,testability,assert,assert,3939,"ation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, mi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:4097,testability,assert,assert,4097,"xamples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:4229,testability,assert,assert,4229," data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],. pbmc.var[""variances_norm""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],. pbmc.var[""means""],. ). # Another quantity reported by both. assert np.allclose(. pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],. pbmc.var[""variances""]),. ). ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.lo",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:5838,testability,test,tests,5838,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:6024,testability,test,tests,6024,"tching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py. pmbc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures. pbmc.obs[""dummy_tech""] = ""source_1"". pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2"". pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""source_3"". pbmc.obs.loc[pbmc.obs.index[1500:2000], ""dummy_tech""] = ""source_4"". pbmc.obs.loc[pbmc.obs.index[2000:], ""dummy_tech""] = ""source_5"". # default settings in scanpy are the same as for Seurat. seurat_v3_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3"", batch_key=""dummy_tech"", inplace=False). seurat_v3_paper_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_paper"", batch_key=""dummy_tech"", inplace=False). seurat_v3_implementation_hvg = sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3_implementation"", batch_key=""dummy_tech"", inplace=False). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat_batch = pd.read_csv(""scanpy/scanpy/tests/_scripts/seurat_hvg_v3_batch.csv"", index_col=0). seu = pd.Index(pbmc3k_tutorial_FindVariableGenes_seurat_batch[""x""].values). ```. Matching genes `'seurat_v3'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_hvg[seurat_v3_hvg.highly_variable].index)). ```. `764`. Matching genes `'seurat_v3_paper'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_paper_hvg[seurat_v3_paper_hvg.highly_variable].index)). ```. `1990`. Matching genes `'seurat_v3_implementation'` and `FindVariableGenes`. ```. len(seu.intersection(seurat_v3_implementation_hvg[seurat_v3_implementation_hvg.highly_variable].index)). ```. `1990`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:57,usability,consist,consistency,57,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:182,usability,guid,guidelines,182,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:213,usability,guid,guide,213,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:309,usability,workflow,workflow,309,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:663,usability,feedback,feedback,663,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:697,usability,guidanc,guidance,697,"`sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"")` consistency improvement and implementation discussion; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Adresses #2088 and adresses #1733. <!-- Only check the following box if you did not include release notes -->. - [x] Tests included or not required because: They are required and some suggested. - [x] Release notes. - [x] Doc update - depending on feedback here. - [x] Doc update - guidance scanpy vs seurat. **Context**. As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:. - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*). - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented). . causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2520,usability,help,helps,2520,"y in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.h",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2792:2904,usability,close,closely,2904,"n Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**. All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al. If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**. This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733. OR. -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**. - Good when no `batch_key` used:. ```py. import numpy as np. import pandas as pd. import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(). # use the exact filterin from Seurat tutorial. sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw. sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat. sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial). pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg w",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792
https://github.com/scverse/scanpy/pull/2793:0,deployability,Updat,Update,0,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:494,deployability,releas,release,494,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:519,deployability,Releas,Release,519,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:24,modifiability,variab,variabes,24,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:34,modifiability,variab,variables,34,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:0,safety,Updat,Update,0,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:265,safety,review,review,265,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:365,safety,Test,Tests,365,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:0,security,Updat,Update,0,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:265,testability,review,review,265,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:365,testability,Test,Tests,365,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:116,usability,guid,guidelines,116,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:147,usability,guid,guide,147,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:243,usability,workflow,workflow,243,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:349,usability,Close,Closes,349,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:422,usability,document,documentation,422,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/pull/2793:573,usability,document,documentation,573,"Update _docs.py; typo, `variabes->variables`. <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [ ] Closes #. - [X] Tests included or not required because:. small change in documentation. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. minor change in documentation.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2793
https://github.com/scverse/scanpy/issues/2795:457,availability,down,downstream,457,"Use correct reading functions for datasets; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. ```. /home/zeth/miniconda3/envs/pertpy/lib/python3.11/site-packages/anndata/__init__.py:51: FutureWarning: `anndata.read` is deprecated, use `anndata.read_h5ad` instead. `ad.read` will be removed in mid 2024. warnings.warn(. ```. They raise warnings in downstream frameworks. Some are catching the Futurewarning, but some are not",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2795
https://github.com/scverse/scanpy/issues/2795:116,modifiability,paramet,parameters,116,"Use correct reading functions for datasets; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. ```. /home/zeth/miniconda3/envs/pertpy/lib/python3.11/site-packages/anndata/__init__.py:51: FutureWarning: `anndata.read` is deprecated, use `anndata.read_h5ad` instead. `ad.read` will be removed in mid 2024. warnings.warn(. ```. They raise warnings in downstream frameworks. Some are catching the Futurewarning, but some are not",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2795
https://github.com/scverse/scanpy/issues/2795:263,modifiability,pac,packages,263,"Use correct reading functions for datasets; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. ```. /home/zeth/miniconda3/envs/pertpy/lib/python3.11/site-packages/anndata/__init__.py:51: FutureWarning: `anndata.read` is deprecated, use `anndata.read_h5ad` instead. `ad.read` will be removed in mid 2024. warnings.warn(. ```. They raise warnings in downstream frameworks. Some are catching the Futurewarning, but some are not",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2795
https://github.com/scverse/scanpy/pull/2796:65,deployability,Updat,Update,65,Backport PR #2793 on branch 1.9.x (Fix typo); Backport PR #2793: Update _docs.py,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2796
https://github.com/scverse/scanpy/pull/2796:65,safety,Updat,Update,65,Backport PR #2793 on branch 1.9.x (Fix typo); Backport PR #2793: Update _docs.py,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2796
https://github.com/scverse/scanpy/pull/2796:65,security,Updat,Update,65,Backport PR #2793 on branch 1.9.x (Fix typo); Backport PR #2793: Update _docs.py,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2796
https://github.com/scverse/scanpy/issues/2797:21,energy efficiency,draw,draw,21,"New plot function to draw the relations between 2 categorical adata.obs variables?; ### What kind of feature would you like to request? New plotting function: A kind of plot you would like to seein `sc.pl`? ### Please describe your wishes. Hello Scanpy,. Thank you for developing this amazing package. I have 2 categorical variables in `adata.obs`. ```python. adata_sub2.obs['patient']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 C106_N. ... . TTTGCGCAGACACGAC-1-SMC25T SMC25T. TTTGCGCCATGGAATA-1-SMC25T SMC25T. TTTGCGCCATGTTCCC-1-SMC25T SMC25T. TTTGGTTGTAGGGTAC-1-SMC25T SMC25T. TTTGTCAAGAGGGATA-1-SMC25T SMC25T. Name: patient, Length: 44245, dtype: category. Categories (39, object): ['C106_N', 'C126_N', 'C130_N', 'C133_N', ..., 'C138_T', 'C168_T', 'SMC17T', 'SMC20T']. ```. ```python. adata_sub2.obs['type']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 Normal. ... . TTTGCGCAGACACGAC-1-SMC25T NMCAD. TTTGCGCCATGGAATA-1-SMC25T NMCAD. TTTGCGCCATGTTCCC-1-SMC25T NMCAD. TTTGGTTGTAGGGTAC-1-SMC25T NMCAD. TTTGTCAAGAGGGATA-1-SMC25T NMCAD. Name: type, Length: 44245, dtype: category. Categories (3, object): ['Normal', 'NMCAD', 'MCAD']. ```. I know Scanpy has `sc.pl.matrixplot()`, and we can make matrix plot for gene set score, like. ```python. sc.pl.matrixplot(adata_sub2, var_names=['Normal_signature'], groupby='patient', use_raw=True, dendrogram=False, cmap='inferno', standard_scale='var', swap_axes=True, save='27.pdf'). ```. <img width=""1052"" alt=""image"" src=""https://github.com/scverse/scanpy/assets/75048821/ccde5e13-ae61-4a04-b098-e693e9543103"">. Could you please let me know whether Scanpy can make a matrixplot-like plot showing the ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2797
https://github.com/scverse/scanpy/issues/2797:2152,energy efficiency,green,green,2152,"nt']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 C106_N. ... . TTTGCGCAGACACGAC-1-SMC25T SMC25T. TTTGCGCCATGGAATA-1-SMC25T SMC25T. TTTGCGCCATGTTCCC-1-SMC25T SMC25T. TTTGGTTGTAGGGTAC-1-SMC25T SMC25T. TTTGTCAAGAGGGATA-1-SMC25T SMC25T. Name: patient, Length: 44245, dtype: category. Categories (39, object): ['C106_N', 'C126_N', 'C130_N', 'C133_N', ..., 'C138_T', 'C168_T', 'SMC17T', 'SMC20T']. ```. ```python. adata_sub2.obs['type']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 Normal. ... . TTTGCGCAGACACGAC-1-SMC25T NMCAD. TTTGCGCCATGGAATA-1-SMC25T NMCAD. TTTGCGCCATGTTCCC-1-SMC25T NMCAD. TTTGGTTGTAGGGTAC-1-SMC25T NMCAD. TTTGTCAAGAGGGATA-1-SMC25T NMCAD. Name: type, Length: 44245, dtype: category. Categories (3, object): ['Normal', 'NMCAD', 'MCAD']. ```. I know Scanpy has `sc.pl.matrixplot()`, and we can make matrix plot for gene set score, like. ```python. sc.pl.matrixplot(adata_sub2, var_names=['Normal_signature'], groupby='patient', use_raw=True, dendrogram=False, cmap='inferno', standard_scale='var', swap_axes=True, save='27.pdf'). ```. <img width=""1052"" alt=""image"" src=""https://github.com/scverse/scanpy/assets/75048821/ccde5e13-ae61-4a04-b098-e693e9543103"">. Could you please let me know whether Scanpy can make a matrixplot-like plot showing the 'type' grouped by 'patient'? like:. ```python. sc.pl.matrixplot(adata_sub2, var_names=['type'], groupby='patient', palette={'Normal': 'blue', 'NMCAD': 'green', 'MCAD': 'red'}, dendrogram=False, swap_axes=True, save='27.pdf'). ```. <img width=""824"" alt=""image"" src=""https://github.com/scverse/scanpy/assets/75048821/7fc4f8eb-c53c-49a2-ac91-ccdbacee81e2"">. Thank you! Best,. Yuanjian",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2797
https://github.com/scverse/scanpy/issues/2797:72,modifiability,variab,variables,72,"New plot function to draw the relations between 2 categorical adata.obs variables?; ### What kind of feature would you like to request? New plotting function: A kind of plot you would like to seein `sc.pl`? ### Please describe your wishes. Hello Scanpy,. Thank you for developing this amazing package. I have 2 categorical variables in `adata.obs`. ```python. adata_sub2.obs['patient']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 C106_N. ... . TTTGCGCAGACACGAC-1-SMC25T SMC25T. TTTGCGCCATGGAATA-1-SMC25T SMC25T. TTTGCGCCATGTTCCC-1-SMC25T SMC25T. TTTGGTTGTAGGGTAC-1-SMC25T SMC25T. TTTGTCAAGAGGGATA-1-SMC25T SMC25T. Name: patient, Length: 44245, dtype: category. Categories (39, object): ['C106_N', 'C126_N', 'C130_N', 'C133_N', ..., 'C138_T', 'C168_T', 'SMC17T', 'SMC20T']. ```. ```python. adata_sub2.obs['type']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 Normal. ... . TTTGCGCAGACACGAC-1-SMC25T NMCAD. TTTGCGCCATGGAATA-1-SMC25T NMCAD. TTTGCGCCATGTTCCC-1-SMC25T NMCAD. TTTGGTTGTAGGGTAC-1-SMC25T NMCAD. TTTGTCAAGAGGGATA-1-SMC25T NMCAD. Name: type, Length: 44245, dtype: category. Categories (3, object): ['Normal', 'NMCAD', 'MCAD']. ```. I know Scanpy has `sc.pl.matrixplot()`, and we can make matrix plot for gene set score, like. ```python. sc.pl.matrixplot(adata_sub2, var_names=['Normal_signature'], groupby='patient', use_raw=True, dendrogram=False, cmap='inferno', standard_scale='var', swap_axes=True, save='27.pdf'). ```. <img width=""1052"" alt=""image"" src=""https://github.com/scverse/scanpy/assets/75048821/ccde5e13-ae61-4a04-b098-e693e9543103"">. Could you please let me know whether Scanpy can make a matrixplot-like plot showing the ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2797
https://github.com/scverse/scanpy/issues/2797:293,modifiability,pac,package,293,"New plot function to draw the relations between 2 categorical adata.obs variables?; ### What kind of feature would you like to request? New plotting function: A kind of plot you would like to seein `sc.pl`? ### Please describe your wishes. Hello Scanpy,. Thank you for developing this amazing package. I have 2 categorical variables in `adata.obs`. ```python. adata_sub2.obs['patient']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 C106_N. ... . TTTGCGCAGACACGAC-1-SMC25T SMC25T. TTTGCGCCATGGAATA-1-SMC25T SMC25T. TTTGCGCCATGTTCCC-1-SMC25T SMC25T. TTTGGTTGTAGGGTAC-1-SMC25T SMC25T. TTTGTCAAGAGGGATA-1-SMC25T SMC25T. Name: patient, Length: 44245, dtype: category. Categories (39, object): ['C106_N', 'C126_N', 'C130_N', 'C133_N', ..., 'C138_T', 'C168_T', 'SMC17T', 'SMC20T']. ```. ```python. adata_sub2.obs['type']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 Normal. ... . TTTGCGCAGACACGAC-1-SMC25T NMCAD. TTTGCGCCATGGAATA-1-SMC25T NMCAD. TTTGCGCCATGTTCCC-1-SMC25T NMCAD. TTTGGTTGTAGGGTAC-1-SMC25T NMCAD. TTTGTCAAGAGGGATA-1-SMC25T NMCAD. Name: type, Length: 44245, dtype: category. Categories (3, object): ['Normal', 'NMCAD', 'MCAD']. ```. I know Scanpy has `sc.pl.matrixplot()`, and we can make matrix plot for gene set score, like. ```python. sc.pl.matrixplot(adata_sub2, var_names=['Normal_signature'], groupby='patient', use_raw=True, dendrogram=False, cmap='inferno', standard_scale='var', swap_axes=True, save='27.pdf'). ```. <img width=""1052"" alt=""image"" src=""https://github.com/scverse/scanpy/assets/75048821/ccde5e13-ae61-4a04-b098-e693e9543103"">. Could you please let me know whether Scanpy can make a matrixplot-like plot showing the ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2797
https://github.com/scverse/scanpy/issues/2797:323,modifiability,variab,variables,323,"New plot function to draw the relations between 2 categorical adata.obs variables?; ### What kind of feature would you like to request? New plotting function: A kind of plot you would like to seein `sc.pl`? ### Please describe your wishes. Hello Scanpy,. Thank you for developing this amazing package. I have 2 categorical variables in `adata.obs`. ```python. adata_sub2.obs['patient']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 C106_N. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 C106_N. ... . TTTGCGCAGACACGAC-1-SMC25T SMC25T. TTTGCGCCATGGAATA-1-SMC25T SMC25T. TTTGCGCCATGTTCCC-1-SMC25T SMC25T. TTTGGTTGTAGGGTAC-1-SMC25T SMC25T. TTTGTCAAGAGGGATA-1-SMC25T SMC25T. Name: patient, Length: 44245, dtype: category. Categories (39, object): ['C106_N', 'C126_N', 'C130_N', 'C133_N', ..., 'C138_T', 'C168_T', 'SMC17T', 'SMC20T']. ```. ```python. adata_sub2.obs['type']. AAACCTGAGGTTACCT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTCAGAAGC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGGTGCTCTTC-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCCCATTAT-1-C106_N_1_1_0_c1_v2 Normal. AAACCTGTCGGAGCAA-1-C106_N_1_1_0_c1_v2 Normal. ... . TTTGCGCAGACACGAC-1-SMC25T NMCAD. TTTGCGCCATGGAATA-1-SMC25T NMCAD. TTTGCGCCATGTTCCC-1-SMC25T NMCAD. TTTGGTTGTAGGGTAC-1-SMC25T NMCAD. TTTGTCAAGAGGGATA-1-SMC25T NMCAD. Name: type, Length: 44245, dtype: category. Categories (3, object): ['Normal', 'NMCAD', 'MCAD']. ```. I know Scanpy has `sc.pl.matrixplot()`, and we can make matrix plot for gene set score, like. ```python. sc.pl.matrixplot(adata_sub2, var_names=['Normal_signature'], groupby='patient', use_raw=True, dendrogram=False, cmap='inferno', standard_scale='var', swap_axes=True, save='27.pdf'). ```. <img width=""1052"" alt=""image"" src=""https://github.com/scverse/scanpy/assets/75048821/ccde5e13-ae61-4a04-b098-e693e9543103"">. Could you please let me know whether Scanpy can make a matrixplot-like plot showing the ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2797
https://github.com/scverse/scanpy/pull/2798:247,availability,down,downstream,247,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:99,deployability,Releas,Release,99,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:0,modifiability,Refact,Refactoring,0,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:258,modifiability,pac,packages,258,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:0,performance,Refactor,Refactoring,0,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:206,performance,time,time,206,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:14,safety,test,test,14,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:42,safety,Test,Tests,42,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:14,testability,test,test,14,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2798:42,testability,Test,Tests,42,Refactoring t-test default warning; - [X] Tests included or not required because it's minor. - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798
https://github.com/scverse/scanpy/pull/2800:464,deployability,releas,release,464,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:489,deployability,Releas,Release,489,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:587,integrability,wrap,wrapped,587,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:791,modifiability,pac,packages,791,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:264,safety,review,review,264,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:366,safety,Test,Tests,366,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:264,testability,review,review,264,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:366,testability,Test,Tests,366,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:115,usability,guid,guidelines,115,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:146,usability,guid,guide,146,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:242,usability,workflow,workflow,242,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2800:348,usability,Close,Closes,348,"Rely on scanpydoc for prose return sections; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff. -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>. +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800
https://github.com/scverse/scanpy/pull/2801:734,availability,sli,slightly,734,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:444,deployability,releas,release,444,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:469,deployability,Releas,Release,469,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:768,deployability,depend,dependency,768,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:768,integrability,depend,dependency,768,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:768,modifiability,depend,dependency,768,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:734,reliability,sli,slightly,734,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:269,safety,review,review,269,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:371,safety,Test,Tests,371,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:535,safety,test,test,535,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:768,safety,depend,dependency,768,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:672,security,expos,exposed,672,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:269,testability,review,review,269,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:371,testability,Test,Tests,371,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:535,testability,test,test,535,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:768,testability,depend,dependency,768,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:120,usability,guid,guidelines,120,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:151,usability,guid,guide,151,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:247,usability,workflow,workflow,247,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2801:353,usability,Close,Closes,353,"Fix `scanpy.read_10x_mtx`’s `gex_only=True` mode; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`). - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801
https://github.com/scverse/scanpy/pull/2802:123,deployability,updat,updated,123,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2802:9,integrability,compon,components,9,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2802:9,interoperability,compon,components,9,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2802:9,modifiability,compon,components,9,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2802:20,modifiability,paramet,parameter,20,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2802:60,modifiability,paramet,parameter,60,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2802:123,safety,updat,updated,123,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2802:123,security,updat,updated,123,"Add tSNE components parameter; Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. This allows for 3D plotting requested by [https://github.com/scverse/scanpy/issues/460](https://github.com/scverse/scanpy/issues/460) and [https://github.com/scverse/scanpy/issues/1435](https://github.com/scverse/scanpy/issues/1435). ![tsne](https://github.com/scverse/scanpy/assets/48340051/6a2083d2-7506-4006-81f8-9779d3ce2b14).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2802
https://github.com/scverse/scanpy/pull/2803:351,deployability,updat,updated,351,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:602,deployability,releas,release,602,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:627,deployability,Releas,Release,627,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:5,integrability,compon,components,5,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:5,interoperability,compon,components,5,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:5,modifiability,compon,components,5,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:16,modifiability,paramet,parameter,16,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:288,modifiability,paramet,parameter,288,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:246,safety,review,review,246,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:351,safety,updat,updated,351,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:460,safety,Test,Tests,460,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:525,safety,test,tests,525,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:351,security,updat,updated,351,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:246,testability,review,review,246,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:460,testability,Test,Tests,460,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:525,testability,test,tests,525,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:97,usability,guid,guidelines,97,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:128,usability,guid,guide,128,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:224,usability,workflow,workflow,224,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/pull/2803:441,usability,Close,Closes,441,"tSNE components parameter; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #460. - [ ] Tests included or not required because: Not included but can add tests if necessary. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803
https://github.com/scverse/scanpy/issues/2804:350,availability,error,error,350,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:441,availability,error,error,441,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:528,availability,error,error,528,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:652,availability,cluster,clusters,652,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:690,availability,cluster,cluster,690,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:730,availability,Error,Error,730,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:812,availability,cluster,cluster,812,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:869,availability,cluster,cluster,869,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1973,availability,cluster,cluster,1973,"__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2124,availability,cluster,cluster,2124,"ting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. set",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:12,deployability,contain,contains,12,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:210,deployability,version,version,210,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:471,deployability,contain,contains,471,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:652,deployability,cluster,clusters,652,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:690,deployability,cluster,cluster,690,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:812,deployability,cluster,cluster,812,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:869,deployability,cluster,cluster,869,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1973,deployability,cluster,cluster,1973,"__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2124,deployability,cluster,cluster,2124,"ting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. set",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2264,deployability,contain,contains,2264,"/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2302,deployability,Version,Versions,2302,"heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:706,energy efficiency,heat,heatmap,706,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:885,energy efficiency,heat,heatmap,885,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1199,energy efficiency,heat,heatmap,1199,"latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkag",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1306,energy efficiency,heat,heatmap,1306," ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2457,energy efficiency,cloud,cloudpickle,2457,"n _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.6. yaml 6.0. zarr 2.15.0. zipp NA. -----. Python 3.8.15 | packaged by conda-forge | (default, Nov 22 2022, 08:46:39) [GCC 10.4.0]. Linux-3.10.0-1127.el7",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:210,integrability,version,version,210,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:447,integrability,messag,message,447,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2302,integrability,Version,Versions,2302,"heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:447,interoperability,messag,message,447,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:210,modifiability,version,version,210,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:428,modifiability,pac,package,428,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:945,modifiability,pac,packages,945,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1108,modifiability,pac,packages,1108,"at this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-pac",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1253,modifiability,pac,packages,1253,"irmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linka",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1412,modifiability,pac,packages,1412," the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1602,modifiability,pac,packages,1602,"es_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1774,modifiability,pac,packages,1774,"eatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1958,modifiability,pac,packages,1958,"lotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2109,modifiability,pac,packages,2109,"ges/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setupto",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2302,modifiability,Version,Versions,2302,"heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:2950,modifiability,pac,packaging,2950,"drogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.6. yaml 6.0. zarr 2.15.0. zipp NA. -----. Python 3.8.15 | packaged by conda-forge | (default, Nov 22 2022, 08:46:39) [GCC 10.4.0]. Linux-3.10.0-1127.el7.x86_64-x86_64-with-glibc2.10. -----. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:3369,modifiability,pac,packaged,3369,"drogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.6. yaml 6.0. zarr 2.15.0. zipp NA. -----. Python 3.8.15 | packaged by conda-forge | (default, Nov 22 2022, 08:46:39) [GCC 10.4.0]. Linux-3.10.0-1127.el7.x86_64-x86_64-with-glibc2.10. -----. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:350,performance,error,error,350,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:441,performance,error,error,441,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:528,performance,error,error,528,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:730,performance,Error,Error,730,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:350,safety,error,error,350,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:441,safety,error,error,441,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:528,safety,error,error,528,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:730,safety,Error,Error,730,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:170,usability,confirm,confirmed,170,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:253,usability,confirm,confirmed,253,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:350,usability,error,error,350,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:441,usability,error,error,441,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:528,usability,error,error,528,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:560,usability,Minim,Minimal,560,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:730,usability,Error,Error,730,"Linkage 'Z' contains negative distances.; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I'm encountering an error when running the sc.pl.rank_genes_groups_heatmap function in the scanpy package. The error message is ""Linkage 'Z' contains negative distances."" What could be causing this error and how can I fix it? ### Minimal code sample. ```python. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby='clusters',show_gene_labels=True,save='cluster.markers.heatmap.svg'). ```. ### Error output. ```pytb. sc.pl.rank_genes_groups_heatmap(adata, n_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:1790,usability,tool,tools,1790,"_genes=10, groupby=cluster,show_gene_labels=True,save=(id+'_processed.top10.cluster.markers.heatmap.svg')). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 673, in rank_genes_groups_heatmap. return _rank_genes_groups_plot(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 592, in _rank_genes_groups_plot. return heatmap(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1087, in heatmap. dendro_data = _reorder_categories_after_dendrogram(. File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2134, in _reorder_categories_after_dendrogram. key = _get_dendrogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. mark",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/issues/2804:3263,usability,tool,toolz,3263,"drogram_key(adata, dendrogram, groupby). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 2236, in _get_dendrogram_key. dendrogram(adata, groupby, key_added=dendrogram_key). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py"", line 143, in dendrogram. dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 3301, in dendrogram. is_valid_linkage(Z, throw=True, name='Z'). File ""/opt/conda/envs/st/lib/python3.8/site-packages/scipy/cluster/hierarchy.py"", line 2280, in is_valid_linkage. raise ValueError('Linkage %scontains negative distances.' %. ValueError: Linkage 'Z' contains negative distances. ```. ### Versions. <details>. ```. -----. anndata 0.8.0. scanpy 1.9.3. -----. PIL 9.4.0. asciitree NA. beta_ufunc NA. binom_ufunc NA. cairocffi 1.6.1. cffi 1.15.1. cloudpickle 2.2.1. colorama 0.4.6. cycler 0.10.0. cython_runtime NA. cytoolz 0.12.0. dask 2022.11.1. dateutil 2.8.2. defusedxml 0.7.1. entrypoints 0.4. fasteners 0.17.3. fsspec 2023.6.0. google NA. h5py 3.7.0. igraph 0.9.11. jinja2 3.0.3. joblib 1.2.0. kiwisolver 1.4.4. leidenalg 0.8.10. llvmlite 0.39.1. louvain 0.7.1. lz4 4.3.2. markupsafe 2.1.3. matplotlib 3.5.2. mpl_toolkits NA. msgpack 1.0.5. natsort 8.2.0. nbinom_ufunc NA. numba 0.56.4. numcodecs 0.11.0. numexpr 2.8.4. numpy 1.21.6. packaging 23.1. pandas 1.5.3. pkg_resources NA. psutil 5.9.5. pyarrow 8.0.0. pycparser 2.21. pyparsing 3.1.0. pytz 2023.3. scipy 1.7.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.0.1. snappy NA. sphinxcontrib NA. tblib 1.7.0. texttable 1.6.7. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. typing_extensions NA. wcwidth 0.2.6. yaml 6.0. zarr 2.15.0. zipp NA. -----. Python 3.8.15 | packaged by conda-forge | (default, Nov 22 2022, 08:46:39) [GCC 10.4.0]. Linux-3.10.0-1127.el7.x86_64-x86_64-with-glibc2.10. -----. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2804
https://github.com/scverse/scanpy/pull/2805:456,deployability,build,build,456,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:520,deployability,releas,release,520,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:545,deployability,Releas,Release,545,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:716,deployability,contain,contains,716,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:780,deployability,integr,integrate,780,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:967,deployability,build,build,967,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1169,deployability,build,builds,1169,"ev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴─────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1369,deployability,API,API,1369,"es/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1459,deployability,api,api,1459,". <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1923,deployability,version,versions,1923,"ttps://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │. │ results │ │ # │ blocks │ ... │ │. │ │ ├───┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3602,deployability,modul,module,3602,──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3639,deployability,modul,module,3639,─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3714,deployability,modul,module,3714,──────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total co,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3736,deployability,modul,module,3736,────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3785,deployability,modul,module,3785,───────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_to,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4757,deployability,version,version,4757,"rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:6190,deployability,updat,updated,6190," used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If an AnnData is passed, determines whether a copy is returned. min_counts int (default: 1)Cells with counts less than │ │ │ │ │. │ │ │ │ │ │ min_counts are filtered out during normalization. Return type: UnionType[AnnData, ndarray, spmatrix, None] Returns: Returns None if copy=False, else returns an updated AnnData object. Sets the following fields: adata.Xnumpy.ndarray | │ │ │ │ │. │ │ │ │ │ │ scipy.sparse._csr.csr_matrix (dtype float)Normalized count data matrix. Examples >>> import scanpy as sc >>> adata = AnnData(np.array([[1, 0], [3, 0], [5, 6]], dtype=np.float32)) >>> print(adata.X.sum(axis=1)) [ 1. 3. 11.] >>> │ │ │ │ │. │ │ │ │ │ │ sc.pp.normalize_per_cell(adata) >>> print(adata.obs) n_counts 0 1.0 1 3.0 2 11.0 >>> print(adata.X.sum(axis=1)) [3. 3. 3.] >>> sc.pp.normalize_per_cell( ... adata, counts_per_cell_after=1, ... key_n_counts='n_counts2', ... ) >>> print(adata.obs) │ │ │ │ │. │ │ │ │ │ │ n_counts n_counts2 0 1.0 3.0 1 3.0 3.0 2 11.0 3.0 >>> print(adata.X.sum(axis=1)) [1. 1. 1.] │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ ╰───┴",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:780,integrability,integr,integrate,780,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1369,integrability,API,API,1369,"es/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1459,integrability,api,api,1459,". <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1923,integrability,version,versions,1923,"ttps://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │. │ results │ │ # │ blocks │ ... │ │. │ │ ├───┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4757,integrability,version,version,4757,"rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4896,integrability,filter,filter,4896,"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If an AnnDa",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4979,integrability,filter,filtering,4979,"───────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If an AnnData is passed, determines whether a copy is returned. min_counts int (default: 1)Cells",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:6045,integrability,filter,filtered,6045,"nplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If an AnnData is passed, determines whether a copy is returned. min_counts int (default: 1)Cells with counts less than │ │ │ │ │. │ │ │ │ │ │ min_counts are filtered out during normalization. Return type: UnionType[AnnData, ndarray, spmatrix, None] Returns: Returns None if copy=False, else returns an updated AnnData object. Sets the following fields: adata.Xnumpy.ndarray | │ │ │ │ │. │ │ │ │ │ │ scipy.sparse._csr.csr_matrix (dtype float)Normalized count data matrix. Examples >>> import scanpy as sc >>> adata = AnnData(np.array([[1, 0], [3, 0], [5, 6]], dtype=np.float32)) >>> print(adata.X.sum(axis=1)) [ 1. 3. 11.] >>> │ │ │ │ │. │ │ │ │ │ │ sc.pp.normalize_per_cell(adata) >>> print(adata.obs) n_counts 0 1.0 1 3.0 2 11.0 >>> print(adata.X.sum(axis=1)) [3. 3. 3.] >>> sc.pp.normalize_per_cell( ... adata, counts_per_cell_after=1, ... key_n_counts='n_counts2', ... ) >>> print(adata.obs) │ │ │ │ │. │ │ │ │ │ │ n_counts n_counts2 0 1.0 3.0 1 3.0 3.0 2 11.0 3.0 >>> print(adata.X.sum(axis=1)) [1. 1. 1.] │ │ │ │ │. │ │ │ │ ╰───┴───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:780,interoperability,integr,integrate,780,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1369,interoperability,API,API,1369,"es/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1459,interoperability,api,api,1459,". <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:770,modifiability,extens,extension,770,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:780,modifiability,integr,integrate,780,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1923,modifiability,version,versions,1923,"ttps://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │. │ results │ │ # │ blocks │ ... │ │. │ │ ├───┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3602,modifiability,modul,module,3602,──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3639,modifiability,modul,module,3639,─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3714,modifiability,modul,module,3714,──────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total co,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3736,modifiability,modul,module,3736,────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3785,modifiability,modul,module,3785,───────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_to,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4757,modifiability,version,version,4757,"rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:5304,modifiability,Paramet,Parameters,5304,"────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If an AnnData is passed, determines whether a copy is returned. min_counts int (default: 1)Cells with counts less than │ │ │ │ │. │ │ │ │ │ │ min_counts are filtered out during normalization. Return type: UnionType[AnnData, ndarray, spmatrix, None] Returns: Returns None if copy=False, else returns an updated AnnData object. Sets the following fields: adata.Xnumpy.ndarray | │ │ │ │ │. │ │ │ │ │ │ scipy.sparse._csr.csr_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3106,performance,content,content,3106, │ │ │ │ │ ╰───┴────────╯ │ │. │ │ ╰───┴────────────┴────────────────╯ │. │ query │ filter_cells │. │ │ ╭───┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │. │ results │ │ # │ blocks │ ... │ │. │ │ ├───┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬─────,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4386,performance,content,content,4386,"┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_ob",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:780,reliability,integr,integrate,780,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4888,reliability,doe,doesn,4888,"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:242,safety,review,review,242,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:386,safety,Test,Tests,386,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3602,safety,modul,module,3602,──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3639,safety,modul,module,3639,─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3714,safety,modul,module,3714,──────────────────────────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total co,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3736,safety,modul,module,3736,────────────────────────────────────────────────────────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:3785,safety,modul,module,3785,───────────┼─────┤ │. │ │ │ 0 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ figdir (scanpy._settings.ScanpyConfig property) file_format_data (scanpy._settings.ScanpyConfig property) file_format_figs (scanpy._settings.ScanpyConfig property) filter_cells() (in module scanpy.pp) filter_genes() (in module scanpy.pp) │ ... │ │ │ │. │ │ │ │ │ │ filter_genes_dispersion() (in module scanpy.pl) (in module scanpy.pp) filter_rank_genes_groups() (in module scanpy.tl) │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_to,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:4859,safety,except,except,4859,"─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ │ 1 │ ╭───┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────╮ │ ... │ │. │ │ │ │ │ # │ content │ ... │ │ │ │. │ │ │ │ ├───┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────┤ │ │ │. │ │ │ │ │ 0 │ Normalize total counts per cell. Warning Deprecated since version 1.3.7: Use normalize_total() instead. The new function is equivalent to the present function, except that the new function doesn’t filter cells based on min_counts, use │ ... │ │ │ │. │ │ │ │ │ │ filter_cells() if filtering is needed. some arguments were renamed copy is replaced by inplace Normalize each cell by total counts over all genes, so that every cell has the same total count after normalization. Similar functions are used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:6190,safety,updat,updated,6190," used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If an AnnData is passed, determines whether a copy is returned. min_counts int (default: 1)Cells with counts less than │ │ │ │ │. │ │ │ │ │ │ min_counts are filtered out during normalization. Return type: UnionType[AnnData, ndarray, spmatrix, None] Returns: Returns None if copy=False, else returns an updated AnnData object. Sets the following fields: adata.Xnumpy.ndarray | │ │ │ │ │. │ │ │ │ │ │ scipy.sparse._csr.csr_matrix (dtype float)Normalized count data matrix. Examples >>> import scanpy as sc >>> adata = AnnData(np.array([[1, 0], [3, 0], [5, 6]], dtype=np.float32)) >>> print(adata.X.sum(axis=1)) [ 1. 3. 11.] >>> │ │ │ │ │. │ │ │ │ │ │ sc.pp.normalize_per_cell(adata) >>> print(adata.obs) n_counts 0 1.0 1 3.0 2 11.0 >>> print(adata.X.sum(axis=1)) [3. 3. 3.] >>> sc.pp.normalize_per_cell( ... adata, counts_per_cell_after=1, ... key_n_counts='n_counts2', ... ) >>> print(adata.obs) │ │ │ │ │. │ │ │ │ │ │ n_counts n_counts2 0 1.0 3.0 1 3.0 3.0 2 11.0 3.0 >>> print(adata.X.sum(axis=1)) [1. 1. 1.] │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ ╰───┴",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:780,security,integr,integrate,780,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:1115,security,hack,hack,1115,"bution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │. │ │ │ │ │ │ # │ slug │ │ │. │ │ │ │ │ ├───┼────────┤ │ │. │ │ │ │ │ │ 0 │ latest │ │ │. │ │ │ ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:6190,security,updat,updated,6190," used, for │ │ │ │ │. │ │ │ │ │ │ example, by Seurat [Satija15], Cell Ranger [Zheng17] or SPRING [Weinreb17]. Parameters: data AnnData | ndarray | spmatrixThe (annotated) data matrix of shape n_obs × n_vars. Rows correspond to cells and columns to genes. counts_per_cell_after │ │ │ │ │. │ │ │ │ │ │ Optional[float] (default: None)If None, after normalization, each cell has a total count equal to the median of the counts_per_cell before normalization. counts_per_cell Optional[ndarray] (default: None)Precomputed counts per cell. key_n_counts │ │ │ │ │. │ │ │ │ │ │ str (default: 'n_counts')Name of the field in adata.obs where the total counts per cell are stored. copy bool (default: False)If an AnnData is passed, determines whether a copy is returned. min_counts int (default: 1)Cells with counts less than │ │ │ │ │. │ │ │ │ │ │ min_counts are filtered out during normalization. Return type: UnionType[AnnData, ndarray, spmatrix, None] Returns: Returns None if copy=False, else returns an updated AnnData object. Sets the following fields: adata.Xnumpy.ndarray | │ │ │ │ │. │ │ │ │ │ │ scipy.sparse._csr.csr_matrix (dtype float)Normalized count data matrix. Examples >>> import scanpy as sc >>> adata = AnnData(np.array([[1, 0], [3, 0], [5, 6]], dtype=np.float32)) >>> print(adata.X.sum(axis=1)) [ 1. 3. 11.] >>> │ │ │ │ │. │ │ │ │ │ │ sc.pp.normalize_per_cell(adata) >>> print(adata.obs) n_counts 0 1.0 1 3.0 2 11.0 >>> print(adata.X.sum(axis=1)) [3. 3. 3.] >>> sc.pp.normalize_per_cell( ... adata, counts_per_cell_after=1, ... key_n_counts='n_counts2', ... ) >>> print(adata.obs) │ │ │ │ │. │ │ │ │ │ │ n_counts n_counts2 0 1.0 3.0 1 3.0 3.0 2 11.0 3.0 >>> print(adata.X.sum(axis=1)) [1. 1. 1.] │ │ │ │ │. │ │ │ │ ╰───┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────╯ │ │ │. │ │ ╰───┴",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:242,testability,review,review,242,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:386,testability,Test,Tests,386,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:780,testability,integr,integrate,780,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:93,usability,guid,guidelines,93,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:124,usability,guid,guide,124,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:220,usability,workflow,workflow,220,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:326,usability,Close,Closes,326,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:677,usability,support,support,677,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/pull/2805:736,usability,custom,customizations,736,"Add rtd-sphinx-search; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes https://github.com/scverse/scanpy/issues/2763. - [x] Tests included or not required because: manually checked using rtd PR build. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121. - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console. $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells. ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮. │ count │ 2 │. │ next │ │. │ previous │ │. │ │ ╭───┬────────────┬────────────────╮ │. │ projects │ │ # │ slug │ versions │ │. │ │ ├───┼────────────┼────────────────┤ │. │ │ │ 0 │ icb-scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805
https://github.com/scverse/scanpy/issues/2806:532,availability,Error,Error,532,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:703,availability,down,download,703,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:6867,availability,error,error,6867,"port numpy as np. >>> import matplotlib. >>> import seaborn as sns. >>> !ls -lh ./H004/. -rwxrwxrwx. 1 nikolay nikolay 49K Mar 25 2021 barcodes.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 424K Mar 25 2021 features.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 101M Mar 25 2021 matrix.mtx.gz. >>> adata = sc.read_10x_mtx(. ... './H004/', . ... var_names='gene_symbols', . ... cache=True). >>> adata.var_names_make_unique(). >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUS",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:7363,availability,Error,Error,7363,"n. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSM",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8641,availability,error,error,8641,26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. p,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:53,deployability,updat,update,53,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:295,deployability,version,version,295,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:470,deployability,updat,update,470,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:857,deployability,instal,installed,857,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:878,deployability,version,version,878,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:940,deployability,version,version,940,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:972,deployability,instal,install,972,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1075,deployability,Version,Version,1075,"age to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1083,deployability,Build,Build,1083,"0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyuti",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1225,deployability,api,api-compat,1225,"n reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyutils 1.6.1 h166bdaf_0 conda-forge. kiwisolver 1.4.5 py311h9547e67_1 conda-forge. krb5 1.21.2 h659d440_0 conda-forge. lcms2 2.16 hb7c19ff_0 conda-f",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8561,deployability,Version,Versions,8561,SG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_clien,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8594,deployability,log,logging,8594,26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psut,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10489,deployability,updat,updated,10489,". pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10547,deployability,version,version,10547,"ometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:12446,deployability,updat,updated,12446,"dated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:32. ```. </Details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:295,integrability,version,version,295,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:878,integrability,version,version,878,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:940,integrability,version,version,940,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1075,integrability,Version,Version,1075,"age to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1225,integrability,api,api-compat,1225,"n reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyutils 1.6.1 h166bdaf_0 conda-forge. kiwisolver 1.4.5 py311h9547e67_1 conda-forge. krb5 1.21.2 h659d440_0 conda-forge. lcms2 2.16 hb7c19ff_0 conda-f",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8561,integrability,Version,Versions,8561,SG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_clien,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10547,integrability,version,version,10547,"ometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1048,interoperability,Platform,Platform,1048," update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1225,interoperability,api,api-compat,1225,"n reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyutils 1.6.1 h166bdaf_0 conda-forge. kiwisolver 1.4.5 py311h9547e67_1 conda-forge. krb5 1.21.2 h659d440_0 conda-forge. lcms2 2.16 hb7c19ff_0 conda-f",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:4398,interoperability,stub,stubs,4398,_0 conda-forge. libssh2 1.11.0 h0841786_0 conda-forge. libstdcxx-ng 13.2.0 h7e041cc_3 conda-forge. libtiff 4.6.0 ha9c0a0a_2 conda-forge. libuuid 2.38.1 h0b41bf4_0 conda-forge. libwebp-base 1.3.2 hd590300_0 conda-forge. libxcb 1.15 h0b41bf4_0 conda-forge. libxcrypt 4.4.36 hd590300_1 conda-forge. libxml2 2.11.6 h232c23b_0 conda-forge. libzlib 1.2.13 hd590300_5 conda-forge. llvmlite 0.41.1 py311ha6695c7_0 conda-forge. matplotlib-base 3.8.2 py311h54ef318_0 conda-forge. munkres 1.1.4 pyh9f0ad1d_0 conda-forge. natsort 8.4.0 pyhd8ed1ab_0 conda-forge. ncurses 6.4 h59595ed_2 conda-forge. networkx 3.2.1 pyhd8ed1ab_0 conda-forge. numba 0.58.1 py311h96b013e_0 conda-forge. numpy 1.26.3 py311h64a7726_0 conda-forge. openjpeg 2.5.0 h488ebb8_3 conda-forge. openssl 3.2.0 hd590300_1 conda-forge. packaging 23.2 pyhd8ed1ab_0 conda-forge. pandas 2.1.4 py311h320fe9a_0 conda-forge. patsy 0.5.6 pyhd8ed1ab_0 conda-forge. pillow 10.2.0 py311ha6c5da5_0 conda-forge. pip 23.3.2 pyhd8ed1ab_0 conda-forge. pthread-stubs 0.4 h36c2ea0_1001 conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-forge. session-info 1.0.0 pyhd8ed1ab_0 conda-forge. setuptools 69.0.3 pyhd8ed1ab_0 conda-forge. six 1.16.0 pyh6c4a22f_0 conda-forge. statsmodels 0.14.1 py311h1f0f07a_0 conda-forge. stdlib-list 0.8.0 pyhd8ed1ab_0 conda-forge. tbb 2021.11.0 h00ab1b0_0 conda-forge. threadpoolctl 3.2.0 pyha21a80b_0 conda-forge. tk 8.6.13 noxft_h4845f30_101 conda-forge. tqdm 4.66.1 pyhd8ed1ab_0 conda-forge. tzdata 2023d h0c530f3_0 ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:9529,interoperability,platform,platformdirs,9529,"ws x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:11450,interoperability,platform,platformdirs,11450,"2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:75,modifiability,pac,package,75,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:295,modifiability,version,version,295,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:492,modifiability,pac,package,492,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:878,modifiability,version,version,878,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:940,modifiability,version,version,940,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1075,modifiability,Version,Version,1075,"age to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:4189,modifiability,pac,packaging,4189,conda-forge. libnghttp2 1.58.0 h47da74e_1 conda-forge. libnsl 2.0.1 hd590300_0 conda-forge. libopenblas 0.3.25 pthreads_h413a1c8_0 conda-forge. libpng 1.6.39 h753d276_0 conda-forge. libsqlite 3.44.2 h2797004_0 conda-forge. libssh2 1.11.0 h0841786_0 conda-forge. libstdcxx-ng 13.2.0 h7e041cc_3 conda-forge. libtiff 4.6.0 ha9c0a0a_2 conda-forge. libuuid 2.38.1 h0b41bf4_0 conda-forge. libwebp-base 1.3.2 hd590300_0 conda-forge. libxcb 1.15 h0b41bf4_0 conda-forge. libxcrypt 4.4.36 hd590300_1 conda-forge. libxml2 2.11.6 h232c23b_0 conda-forge. libzlib 1.2.13 hd590300_5 conda-forge. llvmlite 0.41.1 py311ha6695c7_0 conda-forge. matplotlib-base 3.8.2 py311h54ef318_0 conda-forge. munkres 1.1.4 pyh9f0ad1d_0 conda-forge. natsort 8.4.0 pyhd8ed1ab_0 conda-forge. ncurses 6.4 h59595ed_2 conda-forge. networkx 3.2.1 pyhd8ed1ab_0 conda-forge. numba 0.58.1 py311h96b013e_0 conda-forge. numpy 1.26.3 py311h64a7726_0 conda-forge. openjpeg 2.5.0 h488ebb8_3 conda-forge. openssl 3.2.0 hd590300_1 conda-forge. packaging 23.2 pyhd8ed1ab_0 conda-forge. pandas 2.1.4 py311h320fe9a_0 conda-forge. patsy 0.5.6 pyhd8ed1ab_0 conda-forge. pillow 10.2.0 py311ha6c5da5_0 conda-forge. pip 23.3.2 pyhd8ed1ab_0 conda-forge. pthread-stubs 0.4 h36c2ea0_1001 conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-forge. session-info 1.0.0 pyhd8ed1ab_0 conda-forge. setuptools 69.0.3 pyhd8ed1ab_0 conda-forge. six 1.16.0 pyh6c4a22f_0 conda-forge. statsmodels 0.14.1 py311h1f0f07a_0 conda-forge. stdlib-list 0.8.0 pyhd8ed,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8561,modifiability,Version,Versions,8561,SG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_clien,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8966,modifiability,deco,decorator,8966,ns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:9452,modifiability,pac,packaging,9452,"000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10341,modifiability,pac,packaged,10341,"atplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10547,modifiability,version,version,10547,"ometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10874,modifiability,deco,decorator,10874,"1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:11360,modifiability,pac,packaging,11360,"| (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:12298,modifiability,pac,packaged,12298,"dated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:32. ```. </Details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:532,performance,Error,Error,532,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1469,performance,cach,cached-property,1469,"of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyutils 1.6.1 h166bdaf_0 conda-forge. kiwisolver 1.4.5 py311h9547e67_1 conda-forge. krb5 1.21.2 h659d440_0 conda-forge. lcms2 2.16 hb7c19ff_0 conda-forge. ld_impl_linux-64 2.40 h41732ed_0 conda-forge. lerc 4.0.0 h27087fc_0 conda-forge. libaec 1.1.2 h59595ed_1 conda-forge. libblas 3.9.0 20_linux64_openblas conda-forge. libbrotlicommon 1.1.0 hd590300_1 conda-forge. libbrotlidec 1.1.0 hd590300_1 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:3987,performance,network,networkx,3987,oc 2.9.3 default_h554bfaf_1009 conda-forge. libiconv 1.17 hd590300_2 conda-forge. libjpeg-turbo 3.0.0 hd590300_1 conda-forge. liblapack 3.9.0 20_linux64_openblas conda-forge. libllvm14 14.0.6 hcd5def8_4 conda-forge. libnghttp2 1.58.0 h47da74e_1 conda-forge. libnsl 2.0.1 hd590300_0 conda-forge. libopenblas 0.3.25 pthreads_h413a1c8_0 conda-forge. libpng 1.6.39 h753d276_0 conda-forge. libsqlite 3.44.2 h2797004_0 conda-forge. libssh2 1.11.0 h0841786_0 conda-forge. libstdcxx-ng 13.2.0 h7e041cc_3 conda-forge. libtiff 4.6.0 ha9c0a0a_2 conda-forge. libuuid 2.38.1 h0b41bf4_0 conda-forge. libwebp-base 1.3.2 hd590300_0 conda-forge. libxcb 1.15 h0b41bf4_0 conda-forge. libxcrypt 4.4.36 hd590300_1 conda-forge. libxml2 2.11.6 h232c23b_0 conda-forge. libzlib 1.2.13 hd590300_5 conda-forge. llvmlite 0.41.1 py311ha6695c7_0 conda-forge. matplotlib-base 3.8.2 py311h54ef318_0 conda-forge. munkres 1.1.4 pyh9f0ad1d_0 conda-forge. natsort 8.4.0 pyhd8ed1ab_0 conda-forge. ncurses 6.4 h59595ed_2 conda-forge. networkx 3.2.1 pyhd8ed1ab_0 conda-forge. numba 0.58.1 py311h96b013e_0 conda-forge. numpy 1.26.3 py311h64a7726_0 conda-forge. openjpeg 2.5.0 h488ebb8_3 conda-forge. openssl 3.2.0 hd590300_1 conda-forge. packaging 23.2 pyhd8ed1ab_0 conda-forge. pandas 2.1.4 py311h320fe9a_0 conda-forge. patsy 0.5.6 pyhd8ed1ab_0 conda-forge. pillow 10.2.0 py311ha6c5da5_0 conda-forge. pip 23.3.2 pyhd8ed1ab_0 conda-forge. pthread-stubs 0.4 h36c2ea0_1001 conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-for,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:6231,performance,cach,cache,6231,"0_0 conda-forge. threadpoolctl 3.2.0 pyha21a80b_0 conda-forge. tk 8.6.13 noxft_h4845f30_101 conda-forge. tqdm 4.66.1 pyhd8ed1ab_0 conda-forge. tzdata 2023d h0c530f3_0 conda-forge. umap-learn 0.5.5 py311h38be061_0 conda-forge. wheel 0.42.0 pyhd8ed1ab_0 conda-forge. xorg-libxau 1.0.11 hd590300_0 conda-forge. xorg-libxdmcp 1.1.3 h7f98852_0 conda-forge. xz 5.2.6 h166bdaf_0 conda-forge. zstd 1.5.5 hfc55251_0 conda-forge. ```. 2) I imported the scanpy, seaborn, pandas, numpy and matplotlib libraries. Then I called the `read_10x_mtx()` function. The code is given below. ```pycon. >>> import scanpy as sc. >>> import pandas as pd. >>> import numpy as np. >>> import matplotlib. >>> import seaborn as sns. >>> !ls -lh ./H004/. -rwxrwxrwx. 1 nikolay nikolay 49K Mar 25 2021 barcodes.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 424K Mar 25 2021 features.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 101M Mar 25 2021 matrix.mtx.gz. >>> adata = sc.read_10x_mtx(. ... './H004/', . ... var_names='gene_symbols', . ... cache=True). >>> adata.var_names_make_unique(). >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:6867,performance,error,error,6867,"port numpy as np. >>> import matplotlib. >>> import seaborn as sns. >>> !ls -lh ./H004/. -rwxrwxrwx. 1 nikolay nikolay 49K Mar 25 2021 barcodes.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 424K Mar 25 2021 features.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 101M Mar 25 2021 matrix.mtx.gz. >>> adata = sc.read_10x_mtx(. ... './H004/', . ... var_names='gene_symbols', . ... cache=True). >>> adata.var_names_make_unique(). >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUS",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:7299,performance,cach,cache,7299,"ene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. .",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:7363,performance,Error,Error,7363,"n. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSM",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8641,performance,error,error,8641,26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. p,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:28,reliability,doe,does,28,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:445,reliability,doe,does,445,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:53,safety,updat,update,53,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:470,safety,updat,update,470,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:532,safety,Error,Error,532,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1734,safety,except,exceptiongroup,1734, https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyutils 1.6.1 h166bdaf_0 conda-forge. kiwisolver 1.4.5 py311h9547e67_1 conda-forge. krb5 1.21.2 h659d440_0 conda-forge. lcms2 2.16 hb7c19ff_0 conda-forge. ld_impl_linux-64 2.40 h41732ed_0 conda-forge. lerc 4.0.0 h27087fc_0 conda-forge. libaec 1.1.2 h59595ed_1 conda-forge. libblas 3.9.0 20_linux64_openblas conda-forge. libbrotlicommon 1.1.0 hd590300_1 conda-forge. libbrotlidec 1.1.0 hd590300_1 conda-forge. libbrotlienc 1.1.0 hd590300_1 conda-forge. libcblas 3.9.0 20_linux64_openblas conda-forge. libcurl 8.5.0 hca28451_0 conda-forge. libdeflate 1.19 hd590300_0 conda-forge. libedit 3.1.20191231 he28a2e2_2 conda-forge. libev 4.33 hd590300_2 conda-forge. li,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:6867,safety,error,error,6867,"port numpy as np. >>> import matplotlib. >>> import seaborn as sns. >>> !ls -lh ./H004/. -rwxrwxrwx. 1 nikolay nikolay 49K Mar 25 2021 barcodes.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 424K Mar 25 2021 features.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 101M Mar 25 2021 matrix.mtx.gz. >>> adata = sc.read_10x_mtx(. ... './H004/', . ... var_names='gene_symbols', . ... cache=True). >>> adata.var_names_make_unique(). >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUS",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:7363,safety,Error,Error,7363,"n. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSM",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8594,safety,log,logging,8594,26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psut,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8641,safety,error,error,8641,26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. p,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10489,safety,updat,updated,10489,". pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:12446,safety,updat,updated,12446,"dated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:32. ```. </Details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:53,security,updat,update,53,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:470,security,updat,update,470,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1421,security,certif,certificates,1421,"x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyutils 1.6.1 h166bdaf_0 conda-forge. kiwisolver 1.4.5 py311h9547e67_1 conda-forge. krb5 1.21.2 h659d440_0 conda-forge. lcms2 2.16 hb7c19ff_0 conda-forge. ld_impl_linux-64 2.40 h41732ed_0 conda-forge. lerc 4.0.0 h27087fc_0 conda-forge. libaec 1.1.2 h59595ed_1 conda-forge. libblas 3.9.0 20_linux64_openblas conda-forge. libbrotlicommon 1.1.0 hd59",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:1563,security,certif,certifi,1563,v.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda-forge. icu 73.2 h59595ed_0 conda-forge. joblib 1.3.2 pyhd8ed1ab_0 conda-forge. keyutils 1.6.1 h166bdaf_0 conda-forge. kiwisolver 1.4.5 py311h9547e67_1 conda-forge. krb5 1.21.2 h659d440_0 conda-forge. lcms2 2.16 hb7c19ff_0 conda-forge. ld_impl_linux-64 2.40 h41732ed_0 conda-forge. lerc 4.0.0 h27087fc_0 conda-forge. libaec 1.1.2 h59595ed_1 conda-forge. libblas 3.9.0 20_linux64_openblas conda-forge. libbrotlicommon 1.1.0 hd590300_1 conda-forge. libbrotlidec 1.1.0 hd590300_1 conda-forge. libbrotlienc 1.1.0 hd590300_1 conda-forge. libcblas 3.9.0 20_linux64_openblas,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:3987,security,network,networkx,3987,oc 2.9.3 default_h554bfaf_1009 conda-forge. libiconv 1.17 hd590300_2 conda-forge. libjpeg-turbo 3.0.0 hd590300_1 conda-forge. liblapack 3.9.0 20_linux64_openblas conda-forge. libllvm14 14.0.6 hcd5def8_4 conda-forge. libnghttp2 1.58.0 h47da74e_1 conda-forge. libnsl 2.0.1 hd590300_0 conda-forge. libopenblas 0.3.25 pthreads_h413a1c8_0 conda-forge. libpng 1.6.39 h753d276_0 conda-forge. libsqlite 3.44.2 h2797004_0 conda-forge. libssh2 1.11.0 h0841786_0 conda-forge. libstdcxx-ng 13.2.0 h7e041cc_3 conda-forge. libtiff 4.6.0 ha9c0a0a_2 conda-forge. libuuid 2.38.1 h0b41bf4_0 conda-forge. libwebp-base 1.3.2 hd590300_0 conda-forge. libxcb 1.15 h0b41bf4_0 conda-forge. libxcrypt 4.4.36 hd590300_1 conda-forge. libxml2 2.11.6 h232c23b_0 conda-forge. libzlib 1.2.13 hd590300_5 conda-forge. llvmlite 0.41.1 py311ha6695c7_0 conda-forge. matplotlib-base 3.8.2 py311h54ef318_0 conda-forge. munkres 1.1.4 pyh9f0ad1d_0 conda-forge. natsort 8.4.0 pyhd8ed1ab_0 conda-forge. ncurses 6.4 h59595ed_2 conda-forge. networkx 3.2.1 pyhd8ed1ab_0 conda-forge. numba 0.58.1 py311h96b013e_0 conda-forge. numpy 1.26.3 py311h64a7726_0 conda-forge. openjpeg 2.5.0 h488ebb8_3 conda-forge. openssl 3.2.0 hd590300_1 conda-forge. packaging 23.2 pyhd8ed1ab_0 conda-forge. pandas 2.1.4 py311h320fe9a_0 conda-forge. patsy 0.5.6 pyhd8ed1ab_0 conda-forge. pillow 10.2.0 py311ha6c5da5_0 conda-forge. pip 23.3.2 pyhd8ed1ab_0 conda-forge. pthread-stubs 0.4 h36c2ea0_1001 conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-for,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:4995,security,session,session-info,4995," pyhd8ed1ab_0 conda-forge. numba 0.58.1 py311h96b013e_0 conda-forge. numpy 1.26.3 py311h64a7726_0 conda-forge. openjpeg 2.5.0 h488ebb8_3 conda-forge. openssl 3.2.0 hd590300_1 conda-forge. packaging 23.2 pyhd8ed1ab_0 conda-forge. pandas 2.1.4 py311h320fe9a_0 conda-forge. patsy 0.5.6 pyhd8ed1ab_0 conda-forge. pillow 10.2.0 py311ha6c5da5_0 conda-forge. pip 23.3.2 pyhd8ed1ab_0 conda-forge. pthread-stubs 0.4 h36c2ea0_1001 conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-forge. session-info 1.0.0 pyhd8ed1ab_0 conda-forge. setuptools 69.0.3 pyhd8ed1ab_0 conda-forge. six 1.16.0 pyh6c4a22f_0 conda-forge. statsmodels 0.14.1 py311h1f0f07a_0 conda-forge. stdlib-list 0.8.0 pyhd8ed1ab_0 conda-forge. tbb 2021.11.0 h00ab1b0_0 conda-forge. threadpoolctl 3.2.0 pyha21a80b_0 conda-forge. tk 8.6.13 noxft_h4845f30_101 conda-forge. tqdm 4.66.1 pyhd8ed1ab_0 conda-forge. tzdata 2023d h0c530f3_0 conda-forge. umap-learn 0.5.5 py311h38be061_0 conda-forge. wheel 0.42.0 pyhd8ed1ab_0 conda-forge. xorg-libxau 1.0.11 hd590300_0 conda-forge. xorg-libxdmcp 1.1.3 h7f98852_0 conda-forge. xz 5.2.6 h166bdaf_0 conda-forge. zstd 1.5.5 hfc55251_0 conda-forge. ```. 2) I imported the scanpy, seaborn, pandas, numpy and matplotlib libraries. Then I called the `read_10x_mtx()` function. The code is given below. ```pycon. >>> import scanpy as sc. >>> import pandas as pd. >>> import numpy as np. >>> import matplotlib. >>> import seaborn as sns. >>> !ls -lh ./H004/. -rwxrwxrwx. 1 nikolay nikolay 49K Mar 25 2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8594,security,log,logging,8594,26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psut,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8625,security,session,session,8625, Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pur,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8814,security,certif,certifi,8814,USG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:9087,security,iso,isoduration,9087,NSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10009,security,soc,socks,10009,".0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. j",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10469,security,Session,Session,10469,"s 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. pro",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10489,security,updat,updated,10489,". pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10722,security,certif,certifi,10722,"ns NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:10995,security,iso,isoduration,10995," 1.3.0. socks 1.7.1. stack_data 0.6.2. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. thre",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:11946,security,soc,socks,11946,"dated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:32. ```. </Details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:12426,security,Session,Session,12426,"dated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:32. ```. </Details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:12446,security,updat,updated,12446,"dated at 2024-01-14 04:38. ```. </Details>. # **working version**. <Details>. ```. -----. anndata 0.10.3. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythonjsonlogger NA. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. socks 1.7.1. stack_data 0.6.2. statsmodels 0.14.1. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. uri_template NA. urllib3 2.1.0. wcwidth 0.2.13. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. jupyterlab 4.0.10. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-6.6.9-200.fc39.x86_64-x86_64-with-glibc2.38. -----. Session information updated at 2024-01-14 04:32. ```. </Details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:4398,testability,stub,stubs,4398,_0 conda-forge. libssh2 1.11.0 h0841786_0 conda-forge. libstdcxx-ng 13.2.0 h7e041cc_3 conda-forge. libtiff 4.6.0 ha9c0a0a_2 conda-forge. libuuid 2.38.1 h0b41bf4_0 conda-forge. libwebp-base 1.3.2 hd590300_0 conda-forge. libxcb 1.15 h0b41bf4_0 conda-forge. libxcrypt 4.4.36 hd590300_1 conda-forge. libxml2 2.11.6 h232c23b_0 conda-forge. libzlib 1.2.13 hd590300_5 conda-forge. llvmlite 0.41.1 py311ha6695c7_0 conda-forge. matplotlib-base 3.8.2 py311h54ef318_0 conda-forge. munkres 1.1.4 pyh9f0ad1d_0 conda-forge. natsort 8.4.0 pyhd8ed1ab_0 conda-forge. ncurses 6.4 h59595ed_2 conda-forge. networkx 3.2.1 pyhd8ed1ab_0 conda-forge. numba 0.58.1 py311h96b013e_0 conda-forge. numpy 1.26.3 py311h64a7726_0 conda-forge. openjpeg 2.5.0 h488ebb8_3 conda-forge. openssl 3.2.0 hd590300_1 conda-forge. packaging 23.2 pyhd8ed1ab_0 conda-forge. pandas 2.1.4 py311h320fe9a_0 conda-forge. patsy 0.5.6 pyhd8ed1ab_0 conda-forge. pillow 10.2.0 py311ha6c5da5_0 conda-forge. pip 23.3.2 pyhd8ed1ab_0 conda-forge. pthread-stubs 0.4 h36c2ea0_1001 conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-forge. session-info 1.0.0 pyhd8ed1ab_0 conda-forge. setuptools 69.0.3 pyhd8ed1ab_0 conda-forge. six 1.16.0 pyh6c4a22f_0 conda-forge. statsmodels 0.14.1 py311h1f0f07a_0 conda-forge. stdlib-list 0.8.0 pyhd8ed1ab_0 conda-forge. tbb 2021.11.0 h00ab1b0_0 conda-forge. threadpoolctl 3.2.0 pyha21a80b_0 conda-forge. tk 8.6.13 noxft_h4845f30_101 conda-forge. tqdm 4.66.1 pyhd8ed1ab_0 conda-forge. tzdata 2023d h0c530f3_0 ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8594,testability,log,logging,8594,26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psut,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:255,usability,confirm,confirmed,255,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:338,usability,confirm,confirmed,338,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:532,usability,Error,Error,532,"The read_10x_mtx() function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024; Scanpy=1.9.6); ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024). (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: . https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:. https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:. ```console. $ conda --version. conda 23.10.0. $ conda install scanpy. # Channels:. # - conda-forge. # - bioconda. # - defaults. # Platform: linux-64. # Name Version Build Channel. _libgcc_mutex 0.1 conda_forge conda-forge. _openmp_mutex 4.5 2_gnu conda-forge. anndata 0.10.4 pyhd8ed1ab_0 conda-forge. array-api-compat 1.4 pyhd8ed1ab_0 conda-forge. brotli 1.1.0 hd590300_1 conda-forge. brotli-bin 1.1.0 hd590300_1 conda-forge. bzip2 1.0.8 hd590300_5 conda-forge. c-ares 1.25.0 hd590300_0 conda-forge. ca-certificates 2023.11.17 hbcca054_0 conda-forge. cached-property 1.5.2 hd8ed1ab_1 conda-forge. cached_property 1.5.2 pyha770c72_1 conda-forge. certifi 2023.11.17 pyhd8ed1ab_0 conda-forge. colorama 0.4.6 pyhd8ed1ab_0 conda-forge. contourpy 1.2.0 py311h9547e67_0 conda-forge. cycler 0.12.1 pyhd8ed1ab_0 conda-forge. exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge. fonttools 4.47.2 py311h459d7ec_0 conda-forge. freetype 2.12.1 h267a509_2 conda-forge. get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge. h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge. hdf5 1.14.3 nompi_h4f84152_100 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:4827,usability,learn,learn,4827,"-base 3.8.2 py311h54ef318_0 conda-forge. munkres 1.1.4 pyh9f0ad1d_0 conda-forge. natsort 8.4.0 pyhd8ed1ab_0 conda-forge. ncurses 6.4 h59595ed_2 conda-forge. networkx 3.2.1 pyhd8ed1ab_0 conda-forge. numba 0.58.1 py311h96b013e_0 conda-forge. numpy 1.26.3 py311h64a7726_0 conda-forge. openjpeg 2.5.0 h488ebb8_3 conda-forge. openssl 3.2.0 hd590300_1 conda-forge. packaging 23.2 pyhd8ed1ab_0 conda-forge. pandas 2.1.4 py311h320fe9a_0 conda-forge. patsy 0.5.6 pyhd8ed1ab_0 conda-forge. pillow 10.2.0 py311ha6c5da5_0 conda-forge. pip 23.3.2 pyhd8ed1ab_0 conda-forge. pthread-stubs 0.4 h36c2ea0_1001 conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-forge. session-info 1.0.0 pyhd8ed1ab_0 conda-forge. setuptools 69.0.3 pyhd8ed1ab_0 conda-forge. six 1.16.0 pyh6c4a22f_0 conda-forge. statsmodels 0.14.1 py311h1f0f07a_0 conda-forge. stdlib-list 0.8.0 pyhd8ed1ab_0 conda-forge. tbb 2021.11.0 h00ab1b0_0 conda-forge. threadpoolctl 3.2.0 pyha21a80b_0 conda-forge. tk 8.6.13 noxft_h4845f30_101 conda-forge. tqdm 4.66.1 pyhd8ed1ab_0 conda-forge. tzdata 2023d h0c530f3_0 conda-forge. umap-learn 0.5.5 py311h38be061_0 conda-forge. wheel 0.42.0 pyhd8ed1ab_0 conda-forge. xorg-libxau 1.0.11 hd590300_0 conda-forge. xorg-libxdmcp 1.1.3 h7f98852_0 conda-forge. xz 5.2.6 h166bdaf_0 conda-forge. zstd 1.5.5 hfc55251_0 conda-forge. ```. 2) I imported the scanpy, seaborn, pandas, numpy and matplotlib libraries. Then I called the `read_10x_mtx()` function. The code is given below. ```pycon. >>> import scanp",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:5419,usability,learn,learn,5419,"conda-forge. pynndescent 0.5.11 pyhca7485f_0 conda-forge. pyparsing 3.1.1 pyhd8ed1ab_0 conda-forge. python 3.11.7 hab00c5b_1_cpython conda-forge. python-dateutil 2.8.2 pyhd8ed1ab_0 conda-forge. python-tzdata 2023.4 pyhd8ed1ab_0 conda-forge. python_abi 3.11 4_cp311 conda-forge. pytz 2023.3.post1 pyhd8ed1ab_0 conda-forge. readline 8.2 h8228510_1 conda-forge. scanpy 1.9.6 pyhd8ed1ab_1 conda-forge. scikit-learn 1.3.2 py311hc009520_2 conda-forge. scipy 1.11.4 py311h64a7726_0 conda-forge. seaborn 0.13.1 hd8ed1ab_0 conda-forge. seaborn-base 0.13.1 pyhd8ed1ab_0 conda-forge. session-info 1.0.0 pyhd8ed1ab_0 conda-forge. setuptools 69.0.3 pyhd8ed1ab_0 conda-forge. six 1.16.0 pyh6c4a22f_0 conda-forge. statsmodels 0.14.1 py311h1f0f07a_0 conda-forge. stdlib-list 0.8.0 pyhd8ed1ab_0 conda-forge. tbb 2021.11.0 h00ab1b0_0 conda-forge. threadpoolctl 3.2.0 pyha21a80b_0 conda-forge. tk 8.6.13 noxft_h4845f30_101 conda-forge. tqdm 4.66.1 pyhd8ed1ab_0 conda-forge. tzdata 2023d h0c530f3_0 conda-forge. umap-learn 0.5.5 py311h38be061_0 conda-forge. wheel 0.42.0 pyhd8ed1ab_0 conda-forge. xorg-libxau 1.0.11 hd590300_0 conda-forge. xorg-libxdmcp 1.1.3 h7f98852_0 conda-forge. xz 5.2.6 h166bdaf_0 conda-forge. zstd 1.5.5 hfc55251_0 conda-forge. ```. 2) I imported the scanpy, seaborn, pandas, numpy and matplotlib libraries. Then I called the `read_10x_mtx()` function. The code is given below. ```pycon. >>> import scanpy as sc. >>> import pandas as pd. >>> import numpy as np. >>> import matplotlib. >>> import seaborn as sns. >>> !ls -lh ./H004/. -rwxrwxrwx. 1 nikolay nikolay 49K Mar 25 2021 barcodes.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 424K Mar 25 2021 features.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 101M Mar 25 2021 matrix.mtx.gz. >>> adata = sc.read_10x_mtx(. ... './H004/', . ... var_names='gene_symbols', . ... cache=True). >>> adata.var_names_make_unique(). >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:6867,usability,error,error,6867,"port numpy as np. >>> import matplotlib. >>> import seaborn as sns. >>> !ls -lh ./H004/. -rwxrwxrwx. 1 nikolay nikolay 49K Mar 25 2021 barcodes.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 424K Mar 25 2021 features.tsv.gz. -rwxrwxrwx. 1 nikolay nikolay 101M Mar 25 2021 matrix.mtx.gz. >>> adata = sc.read_10x_mtx(. ... './H004/', . ... var_names='gene_symbols', . ... cache=True). >>> adata.var_names_make_unique(). >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUS",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:7077,usability,Minim,Minimal,7077,".gz. -rwxrwxrwx. 1 nikolay nikolay 101M Mar 25 2021 matrix.mtx.gz. >>> adata = sc.read_10x_mtx(. ... './H004/', . ... var_names='gene_symbols', . ... cache=True). >>> adata.var_names_make_unique(). >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 493",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:7363,usability,Error,Error,7363,"n. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. **The problem is the error in importing gene names both when using id and when using symbolic labeling. All genes have the same name. if you use `anndata=0.10.3` instead of `anndata=0.10.4`, then everything works correctly.**. ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. import matplotlib. import seaborn as sns. path='<path_to_files>'. adata = sc.read_10x_mtx(. path, . var_names='gene_symbols', . cache=True). adata.var_names_make_unique(). adata.var. ```. ### Error output. ```pycon. >>> # then anndata=0.10.4. >>> print(adata.var). gene_ids feature_types. Gm26206 ENSMUSG00000064842 Gene Expression. Gm26206-1 ENSMUSG00000064842 Gene Expression. Gm26206-2 ENSMUSG00000064842 Gene Expression. Gm26206-3 ENSMUSG00000064842 Gene Expression. Gm26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSM",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2806:8641,usability,error,error,8641,26206-4 ENSMUSG00000064842 Gene Expression. ... ... ... Gm26206-55445 ENSMUSG00000064842 Gene Expression. Gm26206-55446 ENSMUSG00000064842 Gene Expression. Gm26206-55447 ENSMUSG00000064842 Gene Expression. Gm26206-55448 ENSMUSG00000064842 Gene Expression. Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]. ```. ### Expected. ```pycon. >>> # then anndata=0.10.3. >>> print(adata.var). gene_ids feature_types. 4933401J01Rik ENSMUSG00000102693 Gene Expression. Gm26206 ENSMUSG00000064842 Gene Expression. Xkr4 ENSMUSG00000051951 Gene Expression. Gm18956 ENSMUSG00000102851 Gene Expression. Gm37180 ENSMUSG00000103377 Gene Expression. ... ... ... mt-Nd6 ENSMUSG00000064368 Gene Expression. mt-Te ENSMUSG00000064369 Gene Expression. mt-Cytb ENSMUSG00000064370 Gene Expression. mt-Tt ENSMUSG00000064371 Gene Expression. mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]. ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.2.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.2.0. attrs 23.2.0. babel 2.14.0. brotli 1.1.0. certifi 2023.11.17. cffi 1.16.0. charset_normalizer 3.3.2. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.6. ipykernel 6.28.0. isoduration NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_events 0.9.0. jupyter_server 2.12.4. jupyterlab_server 2.25.2. kiwisolver 1.4.5. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.26.3. overrides NA. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.8.0. pickleshare 0.7.5. platformdirs 4.1.0. prometheus_client NA. prompt_toolkit 3.0.42. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. p,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806
https://github.com/scverse/scanpy/issues/2807:5,usability,support,support,5,"Dask support for pp.highly_variable_genes (""cellranger"" flavor); After (or with) https://github.com/scverse/scanpy/issues/2777, we should also support the “cellranger” flavor. See also:. - #2808 . Blocked by. - https://github.com/dask/dask/issues/10853",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2807
https://github.com/scverse/scanpy/issues/2807:143,usability,support,support,143,"Dask support for pp.highly_variable_genes (""cellranger"" flavor); After (or with) https://github.com/scverse/scanpy/issues/2777, we should also support the “cellranger” flavor. See also:. - #2808 . Blocked by. - https://github.com/dask/dask/issues/10853",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2807
https://github.com/scverse/scanpy/issues/2808:5,usability,support,support,5,"Dask support for pp.highly_variable_genes (""seurat_v3"" flavor(s)); We should support Dask for the “seurat_v3” flavor. But probably after:. - #2777. - #2807. - #2792. That one changes to the “seurat_v3” flavor",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2808
https://github.com/scverse/scanpy/issues/2808:77,usability,support,support,77,"Dask support for pp.highly_variable_genes (""seurat_v3"" flavor(s)); We should support Dask for the “seurat_v3” flavor. But probably after:. - #2777. - #2807. - #2792. That one changes to the “seurat_v3” flavor",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2808
https://github.com/scverse/scanpy/pull/2809:273,deployability,Depend,Depends,273,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:494,deployability,releas,release,494,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:519,deployability,Releas,Release,519,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:273,integrability,Depend,Depends,273,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:570,integrability,batch,batched,570,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:273,modifiability,Depend,Depends,273,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:570,performance,batch,batched,570,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:258,safety,review,review,258,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:273,safety,Depend,Depends,273,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:396,safety,Test,Tests,396,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:258,testability,review,review,258,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:273,testability,Depend,Depends,273,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:396,testability,Test,Tests,396,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:0,usability,Support,Support,0,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:109,usability,guid,guidelines,109,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:140,usability,guid,guide,140,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:236,usability,workflow,workflow,236,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:362,usability,Close,Closes,362,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2809:376,usability,close,closes,376,"Support Dask in highly_variable_genes; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2777, closes #2807. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>. <thead>. <tr>. <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>. <tr>. <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>. <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809
https://github.com/scverse/scanpy/pull/2810:437,deployability,releas,release,437,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:462,deployability,Releas,Release,462,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:237,safety,review,review,237,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:339,safety,Test,Tests,339,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:237,testability,review,review,237,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:339,testability,Test,Tests,339,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:88,usability,guid,guidelines,88,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:119,usability,guid,guide,119,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:215,usability,workflow,workflow,215,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/pull/2810:321,usability,Close,Closes,321,Fix hvg warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810
https://github.com/scverse/scanpy/issues/2813:105,energy efficiency,current,currently,105,"Test full dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; These functions currently accept dask arrays, but use numpy functions on them. We have to add tests that check that they stay Dask arrays",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813
https://github.com/scverse/scanpy/issues/2813:0,safety,Test,Test,0,"Test full dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; These functions currently accept dask arrays, but use numpy functions on them. We have to add tests that check that they stay Dask arrays",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813
https://github.com/scverse/scanpy/issues/2813:183,safety,test,tests,183,"Test full dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; These functions currently accept dask arrays, but use numpy functions on them. We have to add tests that check that they stay Dask arrays",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813
https://github.com/scverse/scanpy/issues/2813:0,testability,Test,Test,0,"Test full dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; These functions currently accept dask arrays, but use numpy functions on them. We have to add tests that check that they stay Dask arrays",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813
https://github.com/scverse/scanpy/issues/2813:183,testability,test,tests,183,"Test full dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; These functions currently accept dask arrays, but use numpy functions on them. We have to add tests that check that they stay Dask arrays",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813
https://github.com/scverse/scanpy/issues/2813:15,usability,support,support,15,"Test full dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; These functions currently accept dask arrays, but use numpy functions on them. We have to add tests that check that they stay Dask arrays",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813
https://github.com/scverse/scanpy/pull/2814:278,deployability,releas,release,278,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:303,deployability,Releas,Release,303,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:0,safety,Test,Test,0,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:180,safety,Test,Tests,180,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:363,safety,test,tests,363,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:0,testability,Test,Test,0,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:180,testability,Test,Tests,180,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:363,testability,test,tests,363,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:15,usability,support,support,15,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2814:160,usability,Close,Closes,160,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`; <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2813. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814
https://github.com/scverse/scanpy/pull/2815:505,deployability,releas,release,505,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:530,deployability,Releas,Release,530,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:303,safety,review,review,303,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:407,safety,Test,Tests,407,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:303,testability,review,review,303,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:407,testability,Test,Tests,407,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:154,usability,guid,guidelines,154,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:185,usability,guid,guide,185,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:281,usability,workflow,workflow,281,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2815:387,usability,Close,Closes,387,(feat): `igraph` leiden implementation now included as an option in `sc.tl.leiden`; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #1053. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815
https://github.com/scverse/scanpy/pull/2816:565,availability,down,down,565,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:662,availability,down,down,662,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:886,availability,failur,failures,886,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:958,availability,consist,consistency,958,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:975,availability,failur,failure,975,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:8,deployability,depend,dependency,8,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:318,deployability,releas,release,318,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:483,deployability,depend,dependencies,483,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:886,deployability,fail,failures,886,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:975,deployability,fail,failure,975,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:1045,deployability,updat,updates,1045,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:8,integrability,depend,dependency,8,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:483,integrability,depend,dependencies,483,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:8,modifiability,depend,dependency,8,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:483,modifiability,depend,dependencies,483,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:886,performance,failur,failures,886,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:975,performance,failur,failure,975,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:886,reliability,fail,failures,886,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:975,reliability,fail,failure,975,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:8,safety,depend,dependency,8,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:19,safety,test,test,19,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:248,safety,review,review,248,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:357,safety,test,tests,357,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:385,safety,test,test,385,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:483,safety,depend,dependencies,483,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:592,safety,test,tests,592,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:794,safety,compl,completley,794,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:836,safety,test,tests,836,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:970,safety,test,test,970,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:1040,safety,Test,Test,1040,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:1045,safety,updat,updates,1045,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:1118,safety,test,test,1118,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:794,security,compl,completley,794,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:1045,security,updat,updates,1045,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:8,testability,depend,dependency,8,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:19,testability,test,test,19,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:248,testability,review,review,248,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:357,testability,test,tests,357,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:385,testability,test,test,385,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:483,testability,depend,dependencies,483,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:592,testability,test,tests,592,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:836,testability,test,tests,836,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:970,testability,test,test,970,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:1040,testability,Test,Test,1040,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:1118,testability,test,test,1118,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:0,usability,Minim,Minimum,0,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:99,usability,guid,guidelines,99,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:130,usability,guid,guide,130,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:226,usability,workflow,workflow,226,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:475,usability,minim,minimal,475,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2816:958,usability,consist,consistency,958,"Minimum dependency test job; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests. - [x] Figure out PCA test case with anndata 0.8.0. - [x] Add CI job. - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`. - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests). - Maybe 0.8 is low enough? - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314. * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken. * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688. * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816
https://github.com/scverse/scanpy/pull/2817:4,deployability,version,version,4,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:425,deployability,releas,release,425,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:450,deployability,Releas,Release,450,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:4,integrability,version,version,4,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:4,modifiability,version,version,4,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:250,safety,review,review,250,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:352,safety,Test,Tests,352,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:567,safety,test,tests,567,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:250,testability,review,review,250,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:352,testability,Test,Tests,352,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:567,testability,test,tests,567,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:12,usability,help,helper,12,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:101,usability,guid,guidelines,101,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:132,usability,guid,guide,132,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:228,usability,workflow,workflow,228,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2817:334,usability,Close,Closes,334,"Use version helper everywhere; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817
https://github.com/scverse/scanpy/pull/2818:12,deployability,version,version,12,"Revert ""Use version helper everywhere""; Reverts scverse/scanpy#2817 I would like a chance to review and actually come to a conclusion here. cc: @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2818
https://github.com/scverse/scanpy/pull/2818:12,integrability,version,version,12,"Revert ""Use version helper everywhere""; Reverts scverse/scanpy#2817 I would like a chance to review and actually come to a conclusion here. cc: @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2818
https://github.com/scverse/scanpy/pull/2818:12,modifiability,version,version,12,"Revert ""Use version helper everywhere""; Reverts scverse/scanpy#2817 I would like a chance to review and actually come to a conclusion here. cc: @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2818
https://github.com/scverse/scanpy/pull/2818:93,safety,review,review,93,"Revert ""Use version helper everywhere""; Reverts scverse/scanpy#2817 I would like a chance to review and actually come to a conclusion here. cc: @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2818
https://github.com/scverse/scanpy/pull/2818:93,testability,review,review,93,"Revert ""Use version helper everywhere""; Reverts scverse/scanpy#2817 I would like a chance to review and actually come to a conclusion here. cc: @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2818
https://github.com/scverse/scanpy/pull/2818:20,usability,help,helper,20,"Revert ""Use version helper everywhere""; Reverts scverse/scanpy#2817 I would like a chance to review and actually come to a conclusion here. cc: @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2818
https://github.com/scverse/scanpy/issues/2819:534,availability,error,errors,534,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:562,availability,error,error,562,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:779,availability,Error,Error,779,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:220,deployability,version,version,220,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:812,deployability,Version,Versions,812,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:220,integrability,version,version,220,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:812,integrability,Version,Versions,812,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:220,modifiability,version,version,220,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:812,modifiability,Version,Versions,812,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:534,performance,error,errors,534,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:562,performance,error,error,562,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:779,performance,Error,Error,779,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:534,safety,error,errors,534,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:562,safety,error,error,562,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:779,safety,Error,Error,779,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:180,usability,confirm,confirmed,180,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:263,usability,confirm,confirmed,263,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:534,usability,error,errors,534,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:562,usability,error,error,562,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:587,usability,effectiv,effective,587,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:656,usability,Minim,Minimal,656,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2819:779,usability,Error,Error,779,"Incorrect number setting ofr highly_variable_genes; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). Hi, I intend to use n_top_gene to determine the number of hvgs I intend to have, but I met such errors. I used to meet this error previously, but no effective solutions. . Could you please double check it? Thanks. ### Minimal code sample. ![image](https://github.com/scverse/scanpy/assets/43333475/08fe247f-bd56-4b6c-b9e5-5a69499e7b44). ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>. anndata 0.9.2. scanpy 1.9.6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2819
https://github.com/scverse/scanpy/issues/2821:0,availability,error,error,0,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:383,availability,error,error,383,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:458,availability,error,error,458,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1488,availability,Error,Error,1488,"other group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:202,deployability,version,version,202,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1664,deployability,modul,module,1664,"e sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2135,deployability,contain,contain,2135,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2164,deployability,Version,Versions,2164,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:202,integrability,version,version,202,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:464,integrability,messag,message,464,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2164,integrability,Version,Versions,2164,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:464,interoperability,messag,message,464,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:202,modifiability,version,version,202,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1664,modifiability,modul,module,1664,"e sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1739,modifiability,pac,packages,1739,"dentity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1889,modifiability,layer,layer,1889,"'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1968,modifiability,pac,packages,1968,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2164,modifiability,Version,Versions,2164,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2797,modifiability,pac,packaged,2797,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:0,performance,error,error,0,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:383,performance,error,error,383,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:458,performance,error,error,458,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1488,performance,Error,Error,1488,"other group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:0,safety,error,error,0,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:383,safety,error,error,383,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:458,safety,error,error,458,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1488,safety,Error,Error,1488,"other group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1565,safety,test,test,1565," type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1664,safety,modul,module,1664,"e sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2610,safety,valid,validators,2610,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2267,security,soc,socks,2267,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2610,security,validat,validators,2610,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1565,testability,test,test,1565," type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1600,testability,Trace,Traceback,1600,"? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:0,usability,error,error,0,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:162,usability,confirm,confirmed,162,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:245,usability,confirm,confirmed,245,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:383,usability,error,error,383,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:458,usability,error,error,458,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:656,usability,Minim,Minimal,656,"error in sc.tl.rank_genes_groups; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hi all. I was having issues generating rank gene groups. The error is as below. When I used the ""Manuscript_Identity"" group, I got such error message, but when I used another group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_gene",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1488,usability,Error,Error,1488,"other group ""CellType_Category"", it worked. These two groups are in the same type. Could you tell me how to fix it? Look forward to your response, thanks a lot! ### Minimal code sample. ```python. sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1755,usability,tool,tools,1755,"aw=False). adata_sc.obs['CellType_Category'].cat.categories. Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',. 'Stromal'],. dtype='object'). adata_sc.obs['Manuscript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp N",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:1984,usability,tool,tools,1984,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2821:2484,usability,tool,toolz,2484,"cript_Identity'].cat.categories. Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',. 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',. 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',. 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',. 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',. 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',. 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',. 'ncMonocyte', 'pDC'],. dtype='object'). ```. ### Error output. ```pytb. WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups. test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts). File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__. raise ValueError(. ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample. ```. ### Versions. <details>. ```. setuptools 69.0.3. shapely 2.0.2. six 1.16.0. skimage 0.20.0. sklearn 1.3.2. socks 1.7.1. spatial_image 0.3.0. spatialdata 0.0.15. squidpy 1.3.1. stack_data 0.6.2. statsmodels 0.14.1. sympy 1.12. tangram 1.0.4. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tifffile 2023.12.9. tlz 0.12.0. toolz 0.12.0. torch 2.1.2+cu121. torchgen NA. tqdm 4.66.1. traitlets 5.14.1. typing_extensions NA. umap 0.5.5. urllib3 2.1.0. validators 0.22.0. wcwidth 0.2.13. xarray 2023.12.0. xarray_dataclasses 1.7.0. xarray_schema 0.0.3. xrspatial 0.3.7. yaml 6.0.1. zarr 2.16.1. zipp NA. zoneinfo NA. -----. Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]. Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821
https://github.com/scverse/scanpy/issues/2822:636,availability,error,errors,636,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1151,availability,Error,Error,1151,"y been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.po",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:224,deployability,version,version,224,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:351,deployability,instal,install,351,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:453,deployability,version,version,453,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:686,deployability,log,logging,686,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1184,deployability,Version,Versions,1184,"irmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. sess",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:2715,deployability,updat,updated,2715,"hite'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0.2.0. statsmodels 0.14.1. threadpoolctl 3.1.0. tornado 6.3.3. tqdm 4.65.0. traitlets 5.7.1. typing_extensions NA. umap 0.5.5. wcwidth 0.2.5. yaml 6.0.1. zmq 23.2.0. zoneinfo NA. zstandard 0.19.0. -----. IPython 8.12.0. jupyter_client 7.4.9. jupyter_core 5.5.0. notebook 6.5.4. -----. Python 3.10.11 (main, May 16 2023, 00:28:57) [GCC 11.2.0]. Linux-6.2.0-37-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-23 21:45. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:224,integrability,version,version,224,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:453,integrability,version,version,453,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1062,integrability,sub,subsequent,1062,"make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1184,integrability,Version,Versions,1184,"irmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. sess",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1852,interoperability,platform,platformdirs,1852,"hite'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0.2.0. statsmodels 0.14.1. threadpoolctl 3.1.0. tornado 6.3.3. tqdm 4.65.0. traitlets 5.7.1. typing_extensions NA. umap 0.5.5. wcwidth 0.2.5. yaml 6.0.1. zmq 23.2.0. zoneinfo NA. zstandard 0.19.0. -----. IPython 8.12.0. jupyter_client 7.4.9. jupyter_core 5.5.0. notebook 6.5.4. -----. Python 3.10.11 (main, May 16 2023, 00:28:57) [GCC 11.2.0]. Linux-6.2.0-37-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-23 21:45. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:224,modifiability,version,version,224,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:453,modifiability,version,version,453,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:978,modifiability,variab,variable,978,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:994,modifiability,variab,variables-axis,994,"omething wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1184,modifiability,Version,Versions,1184,"irmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. sess",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1402,modifiability,deco,decorator,1402,"ing wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0.2.0. statsmodels 0.14.1. threadpoolctl 3.1.0. tornado 6.3.3. tqdm 4.65.0. traitlets 5.7.1. typing_extension",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1744,modifiability,pac,packaging,1744,"acecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0.2.0. statsmodels 0.14.1. threadpoolctl 3.1.0. tornado 6.3.3. tqdm 4.65.0. traitlets 5.7.1. typing_extensions NA. umap 0.5.5. wcwidth 0.2.5. yaml 6.0.1. zmq 23.2.0. zoneinfo NA. zstandard 0.19.0. -----. IPython 8.12.0. jupyter_client 7.4.9. jupyter_core 5.5.0. notebook 6.5.4. -----. Python 3.10.11 (main, May 16 2023, 00:28:57) [GCC 11.2.0]. Linux-6.2.0-37-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-23 21:45. ```. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:636,performance,error,errors,636,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1017,performance,cach,cache,1017," read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1040,performance,cach,cache,1040,"data-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1151,performance,Error,Error,1151,"y been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.po",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1294,performance,bottleneck,bottleneck,1294," master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:636,safety,error,errors,636,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:686,safety,log,logging,686,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1151,safety,Error,Error,1151,"y been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.po",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:2715,safety,updat,updated,2715,"hite'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0.2.0. statsmodels 0.14.1. threadpoolctl 3.1.0. tornado 6.3.3. tqdm 4.65.0. traitlets 5.7.1. typing_extensions NA. umap 0.5.5. wcwidth 0.2.5. yaml 6.0.1. zmq 23.2.0. zoneinfo NA. zstandard 0.19.0. -----. IPython 8.12.0. jupyter_client 7.4.9. jupyter_core 5.5.0. notebook 6.5.4. -----. Python 3.10.11 (main, May 16 2023, 00:28:57) [GCC 11.2.0]. Linux-6.2.0-37-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-23 21:45. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:686,security,log,logging,686,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:2695,security,Session,Session,2695,"hite'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0.2.0. statsmodels 0.14.1. threadpoolctl 3.1.0. tornado 6.3.3. tqdm 4.65.0. traitlets 5.7.1. typing_extensions NA. umap 0.5.5. wcwidth 0.2.5. yaml 6.0.1. zmq 23.2.0. zoneinfo NA. zstandard 0.19.0. -----. IPython 8.12.0. jupyter_client 7.4.9. jupyter_core 5.5.0. notebook 6.5.4. -----. Python 3.10.11 (main, May 16 2023, 00:28:57) [GCC 11.2.0]. Linux-6.2.0-37-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-23 21:45. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:2715,security,updat,updated,2715,"hite'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.post1. ruamel NA. scipy 1.11.3. session_info 1.0.0. setuptools 68.0.0. setuptools_scm NA. six 1.16.0. sklearn 1.3.0. sphinxcontrib NA. stack_data 0.2.0. statsmodels 0.14.1. threadpoolctl 3.1.0. tornado 6.3.3. tqdm 4.65.0. traitlets 5.7.1. typing_extensions NA. umap 0.5.5. wcwidth 0.2.5. yaml 6.0.1. zmq 23.2.0. zoneinfo NA. zstandard 0.19.0. -----. IPython 8.12.0. jupyter_client 7.4.9. jupyter_core 5.5.0. notebook 6.5.4. -----. Python 3.10.11 (main, May 16 2023, 00:28:57) [GCC 11.2.0]. Linux-6.2.0-37-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-23 21:45. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:686,testability,log,logging,686,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:184,usability,confirm,confirmed,184,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:267,usability,confirm,confirmed,267,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:503,usability,Minim,Minimal,503,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:636,usability,error,errors,636,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:672,usability,hint,hints,672,"Something wrong with read_10x_mtx using anndata-0.10.4; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2822:1151,usability,Error,Error,1151,"y been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0. I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python. import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=False) # write a cache file for faster subsequent reading. # sc.pl.highest_expr_genes(adata, n_top=20, ). adata.X.nnz. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.9.2. scanpy 1.9.5. -----. PIL 9.5.0. asttokens NA. backcall 0.2.0. bottleneck 1.3.5. cffi 1.16.0. comm 0.1.2. cycler 0.12.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.6.7. decorator 4.4.2. defusedxml 0.7.1. entrypoints 0.4. executing 1.2.0. google NA. h5py 3.7.0. hurry NA. ipykernel 6.25.0. ipython_genutils 0.2.0. ipywidgets 8.0.4. jedi 0.18.1. joblib 1.2.0. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.0. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numexpr 2.8.7. numpy 1.26.0. packaging 23.2. pandas 1.5.3. parso 0.8.3. patsy 0.5.6. pexpect 4.8.0. pickleshare 0.7.5. pkg_resources NA. platformdirs 3.10.0. prompt_toolkit 3.0.36. psutil 5.9.0. ptyprocess 0.7.0. pure_eval 0.2.2. pyarrow 13.0.0. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.15.1. pynndescent 0.5.11. pyparsing 3.0.9. pytz 2023.3.po",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822
https://github.com/scverse/scanpy/issues/2823:221,interoperability,format,formatting,221,"Returning/changing genes as upper case instead of capitalized after running rank_genes_groups; . ### Please describe your wishes. I need the genes from rank_genes_groups function to be returned as upper case (keeping the formatting from my original adata) instead of defaulting to capitalized. It seems that genes will be saved as capitalized under ""adata.uns[""rank_genes_groups""][""names""]"" while my original adata has the genes upper case. How can I change the adata.uns[""rank_genes_groups""][""names""] to apply the upper function? It seems to return a weird numpy.ndarray type. Thank you",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2823
https://github.com/scverse/scanpy/issues/2825:607,availability,Error,Error,607,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:228,deployability,version,version,228,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:354,deployability,upgrad,upgrading,354,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:1542,deployability,Version,Versions,1542,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:228,integrability,version,version,228,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:1542,integrability,Version,Versions,1542,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:50,modifiability,variab,variable,50,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:228,modifiability,version,version,228,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:354,modifiability,upgrad,upgrading,354,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:472,modifiability,variab,variable,472,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:686,modifiability,pac,packages,686,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:739,modifiability,Variab,Variable,739,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:1542,modifiability,Version,Versions,1542,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:607,performance,Error,Error,607,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:1603,reliability,doe,does,1603,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:607,safety,Error,Error,607,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:1119,safety,test,test,1119,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:1119,testability,test,test,1119,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:188,usability,confirm,confirmed,188,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:271,usability,confirm,confirmed,271,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:533,usability,Minim,Minimal,533,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:607,usability,Error,Error,607,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/issues/2825:726,usability,User,UserWarning,726,"read_10x_mtx() with annData 0.10.4 only reads one variable; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(). The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python. S = scanpy.read_10x_mtx(mydata). ```. ### Error output. ```pytb. /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`. utils.warn_names_duplicates(""var""). In [6]: S.var_names. Out[6]: . Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L',. ... 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',. 'NOC2L', 'NOC2L'],. dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3. Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names. Out[5]: . Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',. 'AGRN', 'RNF223', 'C1orf159',. ... 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',. 'MT-ND5', 'MT-ND6', 'MT-CYB'],. dtype='object', length=18085). ```. ### Versions. Scanpy 1.9.6. annData 0.10.3 works, annData 0.10.4 does not. <details>. ```. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825
https://github.com/scverse/scanpy/pull/2826:14,deployability,releas,release,14,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:442,deployability,releas,release,442,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:467,deployability,Releas,Release,467,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:242,safety,review,review,242,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:344,safety,Test,Tests,344,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:242,testability,review,review,242,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:344,testability,Test,Tests,344,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:93,usability,guid,guidelines,93,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:124,usability,guid,guide,124,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:220,usability,workflow,workflow,220,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2826:326,usability,Close,Closes,326,Prepare 1.9.7 release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2826
https://github.com/scverse/scanpy/pull/2827:49,deployability,releas,release,49,Backport PR #2826 on branch 1.9.x (Prepare 1.9.7 release); Backport PR #2826: Prepare 1.9.7 release,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2827
https://github.com/scverse/scanpy/pull/2827:92,deployability,releas,release,92,Backport PR #2826 on branch 1.9.x (Prepare 1.9.7 release); Backport PR #2826: Prepare 1.9.7 release,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2827
https://github.com/scverse/scanpy/issues/2828:702,deployability,api,api,702,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:232,energy efficiency,Current,Currently,232,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:702,integrability,api,api,702,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:816,integrability,transform,transformer,816,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:702,interoperability,api,api,702,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:816,interoperability,transform,transformer,816,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:36,modifiability,paramet,parameters,36,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:163,modifiability,pac,package,163,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:576,modifiability,pac,package,576,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:602,modifiability,pac,package,602,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:941,modifiability,pac,package,941,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:130,safety,test,test,130,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:1155,safety,test,test,1155,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:1163,safety,test,test,1163,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:1178,safety,test,test,1178,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:130,testability,test,test,130,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:1155,testability,test,test,1155,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:1163,testability,test,test,1163,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2828:1178,testability,test,test,1178,"Unify `method`/`flavor`/`backend`/… parameters; I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…. - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger). - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`. - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**. > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction). - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_. - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828
https://github.com/scverse/scanpy/issues/2829:711,availability,Error,Error,711,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:227,deployability,version,version,227,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:227,integrability,version,version,227,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:0,modifiability,Paramet,Parameter,0,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:227,modifiability,version,version,227,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:578,modifiability,extens,extension,578,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:711,performance,Error,Error,711,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:711,safety,Error,Error,711,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:187,usability,confirm,confirmed,187,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:270,usability,confirm,confirmed,270,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:509,usability,custom,custom,509,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:564,usability,custom,custom,564,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:637,usability,Minim,Minimal,637,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2829:711,usability,Error,Error,711,"Parameter docs render text in backticks as `<cite/>` text; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I expect `<code/>`, not `<cite/>`. ![grafik](https://github.com/scverse/scanpy/assets/291575/0874f428-c7a6-495f-9451-502afdc28c13). It has nothing to do with our custom the following, I checked:. 1. scanpydoc. 2. our custom `cite` extension. I assume it’s MyST breaking `default_role`. ### Minimal code sample. ```markdown. Params. ------. foo. 	x `y` z. ```. ### Error output. ```html. <dt>foo. <dd>x <cite>y</cite> z. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2829
https://github.com/scverse/scanpy/issues/2830:910,availability,error,error,910,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:1514,availability,Error,Error,1514,"ote that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:3129,availability,sli,slice,3129,"umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palet",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:3574,availability,slo,slow,3574,"toutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PI",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:38,deployability,releas,release,38,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:221,deployability,version,version,221,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:369,deployability,version,version,369,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:496,deployability,version,versions,496,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:534,deployability,updat,update,534,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:558,deployability,version,version,558,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:812,deployability,version,version,812,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4382,deployability,contain,contain,4382,". 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4504,deployability,Version,Versions,4504,"1 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_clie",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:5692,deployability,updat,updated,5692,"canpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16:44. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:221,integrability,version,version,221,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:369,integrability,version,version,369,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:496,integrability,version,versions,496,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:558,integrability,version,version,558,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:812,integrability,version,version,812,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:2396,integrability,compon,components,2396," range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_ma",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4504,integrability,Version,Versions,4504,"1 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_clie",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:839,interoperability,compatib,compatible,839,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:2396,interoperability,compon,components,2396," range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_ma",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:5002,interoperability,platform,platformdirs,5002,"canpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16:44. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:221,modifiability,version,version,221,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:369,modifiability,version,version,369,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:496,modifiability,version,versions,496,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:558,modifiability,version,version,558,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:583,modifiability,pac,packages,583,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:812,modifiability,version,version,812,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:1777,modifiability,pac,packages,1777,"thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in en",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:2197,modifiability,pac,packages,2197,"canpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/sca",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:2396,modifiability,compon,components,2396," range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_ma",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:2420,modifiability,layer,layer,2420," sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:3189,modifiability,pac,packages,3189,"ite-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modif",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:3727,modifiability,pac,packages,3727,"wargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4074,modifiability,pac,packages,4074,"=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4504,modifiability,Version,Versions,4504,"1 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_clie",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4692,modifiability,deco,decorator,4692,"/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updat",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4944,modifiability,pac,packaging,4944,"canpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16:44. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:5562,modifiability,pac,packaged,5562,"canpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16:44. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:910,performance,error,error,910,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:1514,performance,Error,Error,1514,"ote that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:3129,reliability,sli,slice,3129,"umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palet",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:3533,reliability,doe,does,3533,"legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:3574,reliability,slo,slow,3574,"toutline, colorbar_loc, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs). 258 for count, (value_to_plot, dims) in enumerate(zip(color, dimensions)):. 259 color_source_vector = _get_color_source_vector(. 260 adata,. 261 value_to_plot,. (...). 265 groups=groups,. 266 ). --> 267 color_vector, categorical = _color_vector(. 268 adata,. 269 value_to_plot,. 270 color_source_vector,. 271 palette=palette,. 272 na_color=na_color,. 273 ). 275 # Order points. 276 order = slice(None). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PI",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:534,safety,updat,update,534,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:910,safety,error,error,910,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:1514,safety,Error,Error,1514,"ote that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4709,safety,except,exceptiongroup,4709,"n3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:5692,safety,updat,updated,5692,"canpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16:44. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:534,security,updat,update,534,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4188,security,modif,modify,4188,"ckages/scanpy/plotting/_tools/scatterplots.py:1230, in _color_vector(adata, values_key, values, palette, na_color). 1226 if values.dtype == bool:. 1227 values = pd.Categorical(values.astype(str)). 1228 color_map = {. 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:4402,security,sign,signature,4402," 1229 k: to_hex(v). -> 1230 for k, v in _get_palette(adata, values_key, palette=palette).items(). 1231 }. 1232 # If color_map does not have unique values, this can be slow as the. 1233 # result is not categorical. 1234 color_vector = pd.Categorical(values.map(color_map)). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. trait",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:5672,security,Session,Session,5672,"canpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16:44. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:5692,security,updat,updated,5692,"canpy/plotting/_tools/scatterplots.py:1197, in _get_palette(adata, values_key, palette). 1195 _utils._set_default_colors_for_categorical_obs(adata, values_key). 1196 else:. -> 1197 _utils._validate_palette(adata, values_key). 1198 return dict(zip(values.categories, adata.uns[color_key])). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_utils.py:357, in _validate_palette(adata, key). 355 _palette.append(color). 356 # Don't modify if nothing changed. --> 357 if _palette is None or np.equal(_palette, adata.uns[color_key]).all():. 358 return. 359 adata.uns[color_key] = _palette. UFuncTypeError: ufunc 'equal' did not contain a loop with signature matching types (<class 'numpy.dtype[str_]'>, <class 'numpy.dtype[str_]'>) -> None. ```. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.7. -----. PIL 10.2.0. appnope 0.1.3. asttokens NA. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. llvmlite 0.41.1. matplotlib 3.8.2. matplotlib_inline 0.1.6. mpl_toolkits NA. natsort 8.4.0. numba 0.58.1. numpy 1.23.0. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. platformdirs 4.1.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pynndescent 0.5.11. pyparsing 3.1.1. pytz 2023.3.post1. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.3. threadpoolctl 3.2.0. tornado 6.4. tqdm 4.66.1. traitlets 5.14.1. umap 0.5.5. wcwidth 0.2.13. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]. macOS-14.1.1-arm64-arm-64bit. -----. Session information updated at 2024-01-25 16:44. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:1629,testability,Trace,Traceback,1629,"what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vmax, vmin, vcenter, norm, add_out",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:181,usability,confirm,confirmed,181,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:264,usability,confirm,confirmed,264,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:910,usability,error,error,910,"Unable to plot embedding after Scanpy release 1.9.7; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:1074,usability,Minim,Minimal,1074,"e conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Hello,. With the new scanpy version `1.9.7` I'm not able to plot embeddings such as UMAPs when using numpy `1.23` (it's probably also true for other ""old"" versions of numpy). Note that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 6",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/issues/2830:1514,usability,Error,Error,1514,"ote that I can't update numpy to a newer version because of other packages I'm using, but `1.23` is more recent that what scanpy requires anyway (i.e., `numpy>=1.17.0`). For instance, the `spatialdata` library requires `numpy<=1.23.4` because of `xarray-spatial`: thus, it seems that the latest version of `scanpy` is not compatible with `spatialdata` (cc @LucaMarconato for information). The error seems to be due to this commit in `_validate_palette`: https://github.com/scverse/scanpy/commit/d1fe8da28ab4865b6c2b3d9cd151a8186f148844 (@flying-sheep). ### Minimal code sample. ```python. # Just plotting a dummy UMAP. import anndata. import pandas as pd. import numpy as np. import scanpy as sc. n_obs = 10. adata = anndata.AnnData(. X=np.random.randint(0, 5, size=(n_obs, 8)),. obs=pd.DataFrame({. ""cell_type"": np.random.choice([""A"", ""B"", ""C""], size=n_obs)},. index=[str(i) for i in range(n_obs)]. ),. ). sc.pp.neighbors(adata). sc.tl.umap(adata). sc.pl.umap(adata, color=""cell_type""). ```. ### Error output. ```pytb. ---------------------------------------------------------------------------. UFuncTypeError Traceback (most recent call last). Cell In[6], line 1. ----> 1 sc.pl.umap(adata, color=""cell_type""). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:674, in umap(adata, **kwargs). 615 @_wraps_plot_scatter. 616 @_doc_params(. 617 adata_color_etc=doc_adata_color_etc,. (...). 621 ). 622 def umap(adata, **kwargs) -> Union[Axes, List[Axes], None]:. 623 """"""\. 624 Scatter plot in UMAP basis. 625 . (...). 672 tl.umap. 673 """""". --> 674 return embedding(adata, 'umap', **kwargs). File ~/mambaforge/envs/new/lib/python3.10/site-packages/scanpy/plotting/_tools/scatterplots.py:267, in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2830
https://github.com/scverse/scanpy/pull/2831:38,availability,error,errors,38,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:465,deployability,releas,release,465,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:490,deployability,Releas,Release,490,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:38,performance,error,errors,38,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:38,safety,error,errors,38,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:265,safety,review,review,265,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:367,safety,Test,Tests,367,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:265,testability,review,review,265,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:367,testability,Test,Tests,367,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:15,usability,stop,stop,15,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:38,usability,error,errors,38,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:116,usability,guid,guidelines,116,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:147,usability,guid,guide,147,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:243,usability,workflow,workflow,243,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2831:349,usability,Close,Closes,349,"Prepare 1.9.8, stop ignoring citation errors; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2831
https://github.com/scverse/scanpy/pull/2832:40,deployability,version,versions,40,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:71,deployability,releas,release,71,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:576,deployability,releas,release,576,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:601,deployability,Releas,Release,601,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:40,integrability,version,versions,40,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:40,modifiability,version,versions,40,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:64,safety,hot,hotfix,64,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:299,safety,review,review,299,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:459,safety,Test,Tests,459,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:499,safety,Test,Tests,499,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:299,testability,review,review,299,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:459,testability,Test,Tests,459,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:499,testability,Test,Tests,499,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:150,usability,guid,guidelines,150,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:181,usability,guid,guide,181,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2832:277,usability,workflow,workflow,277,"Fix for _validate_palette for old numpy versions, prepare 1.9.8 hotfix release; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440. - [x] Tests included or not required because: Tests are in #2816. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832
https://github.com/scverse/scanpy/pull/2834:10,deployability,releas,release,10,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:389,deployability,releas,release,389,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:245,safety,review,review,245,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:365,safety,test,tests,365,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:245,testability,review,review,245,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:365,testability,test,tests,365,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:96,usability,guid,guidelines,96,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:127,usability,guid,guide,127,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2834:223,usability,workflow,workflow,223,"Run ci on release branch; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834
https://github.com/scverse/scanpy/pull/2835:45,deployability,releas,release,45,Backport PR #2834 on branch 1.9.x (Run ci on release branch); Backport PR #2834: Run ci on release branch,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2835
https://github.com/scverse/scanpy/pull/2835:91,deployability,releas,release,91,Backport PR #2834 on branch 1.9.x (Run ci on release branch); Backport PR #2834: Run ci on release branch,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2835
https://github.com/scverse/scanpy/issues/2836:411,availability,error,errors,411,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:504,availability,error,error,504,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:990,availability,Error,Error,990,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1133,availability,FAILUR,FAILURES,1133,". - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1531,availability,mask,mask,1531," overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_ap",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:192,deployability,version,version,192,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:859,deployability,Observ,Observation,859,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1133,deployability,FAIL,FAILURES,1133,". - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1658,deployability,Depend,Depending,1658,"ing-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1911,deployability,Observ,Observation,1911,"l `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. F",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:2258,deployability,modul,module,2258,". _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3947,deployability,Observ,Observation,3947,"scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:4127,deployability,Version,Versions,4127,"^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:5314,deployability,updat,updated,5314,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:4277,energy efficiency,cloud,cloudpickle,4277,"AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:192,integrability,version,version,192,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1546,integrability,filter,filtering,1546,"tly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1658,integrability,Depend,Depending,1658,"ing-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:4127,integrability,Version,Versions,4127,"^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:9,interoperability,compatib,compatibility,9,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:4754,interoperability,plug,pluggy,4754,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:192,modifiability,version,version,192,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1658,modifiability,Depend,Depending,1658,"ing-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:2258,modifiability,modul,module,2258,". _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:2515,modifiability,pac,packages,2515,"olean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/sit",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:2984,modifiability,pac,packages,2984,"unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3220,modifiability,pac,packages,3220,"le.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3371,modifiability,pac,packages,3371,"ame, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3521,modifiability,pac,packages,3521,"egacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3681,modifiability,pac,packages,3681," line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. num",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3854,modifiability,pac,packages,3854,"mes). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:4127,modifiability,Version,Versions,4127,"^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:4361,modifiability,deco,decorator,4361,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:4696,modifiability,pac,packaging,4696,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:5170,modifiability,pac,packaged,5170,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:411,performance,error,errors,411,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:504,performance,error,error,504,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:990,performance,Error,Error,990,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1133,performance,FAILUR,FAILURES,1133,". - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1133,reliability,FAIL,FAILURES,1133,". - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1541,reliability,doe,does,1541,"n correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:329,safety,test,tests,329,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:411,safety,error,errors,411,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:504,safety,error,error,504,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:574,safety,test,test,574,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:990,safety,Error,Error,990,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1658,safety,Depend,Depending,1658,"ing-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1887,safety,EXCEPT,EXCEPTION,1887," To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:2258,safety,modul,module,2258,". _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:5314,safety,updat,updated,5314,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:5294,security,Session,Session,5294,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:5314,security,updat,updated,5314,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:329,testability,test,tests,329,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:574,testability,test,test,574,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:859,testability,Observ,Observation,859,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1658,testability,Depend,Depending,1658,"ing-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1911,testability,Observ,Observation,1911,"l `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. F",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:2000,testability,Trace,Traceback,2000,"``pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3947,testability,Observ,Observation,3947,"scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:152,usability,confirm,confirmed,152,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:235,usability,confirm,confirmed,235,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:411,usability,error,errors,411,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:504,usability,error,error,504,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:731,usability,Minim,Minimal,731,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:846,usability,User,UserWarning,846,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:990,usability,Error,Error,990,"pytest 8 compatibility; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python. Examples. --------. >>> import scanpy as sc. >>> adata = sc.datasets.krumsiek11(). UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:1898,usability,User,UserWarning,1898,"m unique, call `.obs_names_make_unique`. utils.warn_names_duplicates(""obs""). ```. ### Error output. ```pytb. ======================================================================================================================= FAILURES =======================================================================================================================. _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________. 081 Boolean index mask that does filtering. `True` means that the. 082 cell is kept. `False` means the cell is removed. 083 number_per_cell. 084 Depending on what was thresholded (`counts` or `genes`),. 085 the array stores `n_counts` or `n_cells` per gene. 086 . 087 Examples. 088 --------. 089 >>> import scanpy as sc. 090 >>> adata = sc.datasets.krumsiek11(). UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'). Traceback (most recent call last):. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/doctest.py"", line 1353, in __run. exec(compile(example.source, filename, ""single"",. File ""<doctest scanpy.preprocessing._simple.filter_cells[1]>"", line 1, in <module>. File ""/mnt/workspace/repos/scanpy/scanpy/datasets/_datasets.py"", line 109, in krumsiek11. adata = read(filename, first_column_names=True). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/legacy_api_wrap/__init__.py"", line 80, in fn_compatible. return fn(*args_all, **kw). ^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 124, in read. return _read(. ^^^^^^. File ""/mnt/workspace/repos/scanpy/scanpy/readwrite.py"", line 801, in _read. adata = read_text(filename, delimiter, first_column_names). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:3934,usability,User,UserWarning,3934,"baforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 360, in read_text. return _read_text(f, delimiter, first_column_names, dtype). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_io/read.py"", line 471, in _read_text. return AnnData(. ^^^^^^^^. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/issues/2836:5065,usability,tool,toolz,5065,"on3.11/site-packages/anndata/_core/anndata.py"", line 362, in __init__. self._init_as_actual(. File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 574, in _init_as_actual. self._check_uniqueness(). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/_core/anndata.py"", line 1906, in _check_uniqueness. utils.warn_names_duplicates(""obs""). File ""/mnt/workspace/mambaforge/envs/scanpy-dev/lib/python3.11/site-packages/anndata/utils.py"", line 275, in warn_names_duplicates. warnings.warn(. UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`. /mnt/workspace/repos/scanpy/scanpy/preprocessing/_simple.py:90: UnexpectedException. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.10.0.dev197+g96e19540. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.1. dateutil 2.8.2. decorator 5.1.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.11.3. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.2. llvmlite 0.41.1. markupsafe 2.1.4. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pexpect 4.9.0. pluggy 1.4.0. prompt_toolkit 3.0.43. psutil 5.9.8. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 8.0.0. pytz 2023.4. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.1. toolz 0.12.1. traitlets 5.14.1. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.7 | packaged by conda-forge | (main, Dec 23 2023, 14:43:09) [GCC 12.3.0]. Linux-5.15.0-87-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-01-29 14:16. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836
https://github.com/scverse/scanpy/pull/2838:818,availability,redund,redundant,818,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:442,deployability,releas,release,442,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:467,deployability,Releas,Release,467,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:818,deployability,redundan,redundant,818,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:543,performance,time,time,543,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:818,reliability,redundan,redundant,818,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:848,reliability,doe,does,848,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:240,safety,review,review,240,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:344,safety,Test,Tests,344,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:583,safety,test,testing,583,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:638,safety,test,test,638,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:818,safety,redund,redundant,818,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:240,testability,review,review,240,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:344,testability,Test,Tests,344,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:583,testability,test,testing,583,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:638,testability,test,test,638,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:91,usability,guid,guidelines,91,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:122,usability,guid,guide,122,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:218,usability,workflow,workflow,218,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/pull/2838:324,usability,Close,Closes,324,"Fix pytest 8 compat; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2836. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Changes:. - Removes import-time change to globals:. 	- `matplotlib.testing:setup` should be called before each (plotting) test. 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params. 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that. - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838
https://github.com/scverse/scanpy/issues/2839:773,availability,error,error,773,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:842,availability,Error,Error,842,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:220,deployability,version,version,220,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:615,deployability,integr,integration-scanorama,615,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1078,deployability,scale,scale,1078,"nditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1677,deployability,Version,Versions,1677,"py tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolct",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:2952,deployability,updat,updated,2952,"nored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit. -----. Session information updated at 2024-01-30 16:40. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:394,energy efficiency,current,currently,394,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1078,energy efficiency,scale,scale,1078,"nditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1834,energy efficiency,cloud,cloudpickle,1834,"# Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:220,integrability,version,version,220,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:480,integrability,discover,discovered,480,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:615,integrability,integr,integration-scanorama,615,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:690,integrability,filter,filter,690,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1677,integrability,Version,Versions,1677,"py tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolct",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:480,interoperability,discover,discovered,480,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:615,interoperability,integr,integration-scanorama,615,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:2329,interoperability,plug,pluggy,2329,"nored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit. -----. Session information updated at 2024-01-30 16:40. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:220,modifiability,version,version,220,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:615,modifiability,integr,integration-scanorama,615,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:969,modifiability,Paramet,Parameters,969,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1078,modifiability,scal,scale,1078,"nditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1085,modifiability,paramet,parameter,1085,"are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. leg",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1579,modifiability,variab,variable,1579,"y-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1677,modifiability,Version,Versions,1677,"py tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolct",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1918,modifiability,deco,decorator,1918,"g: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:2271,modifiability,pac,packaging,2271,"nored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit. -----. Session information updated at 2024-01-30 16:40. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:773,performance,error,error,773,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:842,performance,Error,Error,842,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1078,performance,scale,scale,1078,"nditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:615,reliability,integr,integration-scanorama,615,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:422,safety,test,testing,422,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:684,safety,test,tests,684,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:773,safety,error,error,773,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:809,safety,test,tests,809,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:842,safety,Error,Error,842,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:2952,safety,updat,updated,2952,"nored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit. -----. Session information updated at 2024-01-30 16:40. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:615,security,integr,integration-scanorama,615,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:1311,security,modif,modify,1311,"canpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:2932,security,Session,Session,2932,"nored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit. -----. Session information updated at 2024-01-30 16:40. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:2952,security,updat,updated,2952,"nored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit. -----. Session information updated at 2024-01-30 16:40. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:422,testability,test,testing,422,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:615,testability,integr,integration-scanorama,615,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:684,testability,test,tests,684,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:809,testability,test,tests,809,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:180,usability,confirm,confirmed,180,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:263,usability,confirm,confirmed,263,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:457,usability,Minim,Minimal,457,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:480,usability,discov,discovered,480,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:773,usability,error,error,773,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:842,usability,Error,Error,842,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:913,usability,User,UserWarning,913,"Fix plotting warnings raised in tutorial notebooks; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:. ```sh. pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py. ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2839:2702,usability,tool,toolz,2702,"nored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. . > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual. > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. . > `row_ax = sns.violinplot(`. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.10.0.dev191+gf7f5d5c6. -----. IPython 8.20.0. PIL 10.2.0. asciitree NA. asttokens NA. cffi 1.16.0. cloudpickle 3.0.0. cycler 0.12.1. cython_runtime NA. dask 2024.1.0. dateutil 2.8.2. decorator 5.1.1. defusedxml 0.7.1. executing 2.0.1. fasteners 0.19. h5py 3.10.0. igraph 0.10.8. iniconfig NA. jedi 0.19.1. jinja2 3.1.3. joblib 1.3.2. kiwisolver 1.4.5. legacy_api_wrap NA. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.8.2. mpl_toolkits NA. msgpack 1.0.7. natsort 8.4.0. numba 0.58.1. numcodecs 0.12.1. numpy 1.26.3. packaging 23.2. pandas 2.1.4. parso 0.8.3. pexpect 4.9.0. pluggy 1.3.0. prompt_toolkit 3.0.43. psutil 5.9.7. ptyprocess 0.7.0. pure_eval 0.2.2. py NA. pygments 2.17.2. pyparsing 3.1.1. pytest 7.4.4. pytz 2023.3.post1. scipy 1.11.4. session_info 1.0.0. setuptools 68.2.2. setuptools_scm NA. sitecustomize NA. six 1.16.0. sklearn 1.3.2. sparse 0.15.1. stack_data 0.6.3. tblib 3.0.0. texttable 1.7.0. threadpoolctl 3.2.0. tlz 0.12.0. toolz 0.12.0. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. yaml 6.0.1. zarr 2.16.1. zipp NA. -----. Python 3.11.6 (main, Nov 2 2023, 04:39:43) [Clang 14.0.3 (clang-1403.0.22.14.1)]. macOS-13.6.1-arm64-arm-64bit. -----. Session information updated at 2024-01-30 16:40. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839
https://github.com/scverse/scanpy/issues/2840:34,availability,cluster,clustering,34,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:829,availability,error,errors,829,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1957,availability,Error,Error,1957," results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:34,deployability,cluster,clustering,34,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:232,deployability,version,version,232,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:500,deployability,updat,updating,500,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:879,deployability,log,logging,879,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2088,deployability,automat,automatically,2088," with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extens",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2112,deployability,Version,Versions,2112,". var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:3399,deployability,updat,updated,3399,"_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 bit (AMD64)]. Windows-10-10.0.22631-SP0. -----. Session information updated at 2024-02-05 18:01. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:232,integrability,version,version,232,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1254,integrability,sub,subsequent,1254,"ptional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2112,integrability,Version,Versions,2112,". var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2636,interoperability,platform,platformdirs,2636,"_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 bit (AMD64)]. Windows-10-10.0.22631-SP0. -----. Session information updated at 2024-02-05 18:01. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:232,modifiability,version,version,232,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:509,modifiability,pac,packeges,509,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:519,modifiability,changing environ,changing environment,519,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1171,modifiability,variab,variable,1171,"ed. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1187,modifiability,variab,variables-axis,1187,"nfirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2112,modifiability,Version,Versions,2112,". var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2307,modifiability,deco,decorator,2307,"s unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2574,modifiability,pac,packaging,2574,"_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 bit (AMD64)]. Windows-10-10.0.22631-SP0. -----. Session information updated at 2024-02-05 18:01. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:3260,modifiability,pac,packaged,3260,"_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 bit (AMD64)]. Windows-10-10.0.22631-SP0. -----. Session information updated at 2024-02-05 18:01. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:829,performance,error,errors,829,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1210,performance,cach,cache,1210,"ists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1232,performance,cach,cache,1232,"sion of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1957,performance,Error,Error,1957," results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:446,reliability,doe,doesnt,446,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:500,safety,updat,updating,500,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:829,safety,error,errors,829,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:879,safety,log,logging,879,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1957,safety,Error,Error,1957," results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2014,safety,Test,Tests,2014,"store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. textta",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2324,safety,except,exceptiongroup,2324,"ing `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:3399,safety,updat,updated,3399,"_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 bit (AMD64)]. Windows-10-10.0.22631-SP0. -----. Session information updated at 2024-02-05 18:01. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:500,security,updat,updating,500,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:879,security,log,logging,879,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:3379,security,Session,Session,3379,"_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 bit (AMD64)]. Windows-10-10.0.22631-SP0. -----. Session information updated at 2024-02-05 18:01. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:3399,security,updat,updated,3399,"_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extensions NA. wcwidth 0.2.13. win32api NA. win32com NA. zmq 25.1.2. zoneinfo NA. -----. IPython 8.20.0. jupyter_client 8.6.0. jupyter_core 5.7.1. -----. Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:27:34) [MSC v.1937 64 bit (AMD64)]. Windows-10-10.0.22631-SP0. -----. Session information updated at 2024-02-05 18:01. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:879,testability,log,logging,879,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2014,testability,Test,Tests,2014,"store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. textta",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:2088,testability,automat,automatically,2088," with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1.0.0. six 1.16.0. sklearn 1.4.0. stack_data 0.6.2. texttable 1.7.0. threadpoolctl 3.2.0. tornado 6.3.3. traitlets 5.14.1. typing_extens",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:192,usability,confirm,confirmed,192,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:275,usability,confirm,confirmed,275,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:570,usability,help,help,570,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:696,usability,Minim,Minimal,696,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:829,usability,error,errors,829,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:865,usability,hint,hints,865,"Violin plots in Preprocessing and clustering 3k PBMCs tutorial; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !! ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python. import scanpy as sc. import pandas as pd. import numpy as np. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3). sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. T",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2840:1957,usability,Error,Error,1957," results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(. 'data/', # the directory with the `.mtx` file. var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index). cache=True) # write a cache file for faster subsequent reading. adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. adata. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200). sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'. sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'). sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True). ```. ### Error output. ```pytb. Kernel Restarting. The kernel for Tests/scanpytutorial/Untitled.ipynb appears to have died. It will restart automatically. ```. ### Versions. <details>. ```. -----. anndata 0.10.5.post1. scanpy 1.9.8. -----. PIL 10.2.0. asttokens NA. colorama 0.4.6. comm 0.2.1. cycler 0.12.1. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. exceptiongroup 1.2.0. executing 2.0.1. h5py 3.10.0. igraph 0.11.3. ipykernel 6.29.0. jedi 0.19.1. joblib 1.3.2. kiwisolver 1.4.5. leidenalg 0.10.2. llvmlite 0.42.0. matplotlib 3.8.2. mpl_toolkits NA. natsort 8.4.0. nt NA. numba 0.59.0. numpy 1.26.3. packaging 23.2. pandas 2.2.0. parso 0.8.3. pickleshare 0.7.5. platformdirs 4.1.0. prompt_toolkit 3.0.42. psutil 5.9.8. pure_eval 0.2.2. pyarrow 15.0.0. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.17.2. pyparsing 3.1.1. pythoncom NA. pytz 2023.4. pywin32_system32 NA. pywintypes NA. scipy 1.12.0. session_info 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840
https://github.com/scverse/scanpy/issues/2842:1104,availability,Error,Error,1104,"ake sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. pl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:263,deployability,version,version,263,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1137,deployability,Version,Versions,1137," - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:3172,deployability,updat,updated,3172,". anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. notebook 6.5.6. -----. Python 3.11.3 (main, Aug 25 2023, 17:24:38) [GCC 11.4.0]. Linux-5.15.0-91-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-02-07 10:05. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:263,integrability,version,version,263,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1137,integrability,Version,Versions,1137," - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:2085,interoperability,platform,platformdirs,2085,"on. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. notebook 6.5.6. -----. Python 3.11.3 (main, Aug 25 2023, 17:24:38) [GCC 11",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:263,modifiability,version,version,263,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1137,modifiability,Version,Versions,1137," - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1433,modifiability,deco,decorator,1433,"a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_valid",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:2014,modifiability,pac,packaging,2014,". ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. no",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1104,performance,Error,Error,1104,"ake sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. pl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1104,safety,Error,Error,1104,"ake sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. pl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:3172,safety,updat,updated,3172,". anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. notebook 6.5.6. -----. Python 3.11.3 (main, Aug 25 2023, 17:24:38) [GCC 11.4.0]. Linux-5.15.0-91-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-02-07 10:05. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1297,security,certif,certifi,1297,"have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1628,security,iso,isoduration,1628,"top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_dat",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:3152,security,Session,Session,3152,". anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. notebook 6.5.6. -----. Python 3.11.3 (main, Aug 25 2023, 17:24:38) [GCC 11.4.0]. Linux-5.15.0-91-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-02-07 10:05. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:3172,security,updat,updated,3172,". anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. notebook 6.5.6. -----. Python 3.11.3 (main, Aug 25 2023, 17:24:38) [GCC 11.4.0]. Linux-5.15.0-91-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-02-07 10:05. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:2549,testability,simpl,simplejson,2549,". anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. notebook 6.5.6. -----. Python 3.11.3 (main, Aug 25 2023, 17:24:38) [GCC 11.4.0]. Linux-5.15.0-91-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-02-07 10:05. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:0,usability,Document,Documentation,0,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:223,usability,confirm,confirmed,223,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:306,usability,confirm,confirmed,306,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:794,usability,support,supported,794,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:877,usability,clear,clearly,877,"Documentation for percent_top= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1025,usability,Minim,Minimal,1025,"= in scanpy.pp.calculate_qc_metrics is unclear and contradictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1080,usability,document,documentation,1080,"ictory; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. pl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:1104,usability,Error,Error,1104,"ake sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? First, the argument is named ""percent""_top, suggesting a fraction in the range [0,1] or at a stretch [0, 100]. Second, the description starts with ""Which proportion"", again suggesting a fraction. But then, the description goes on to say that `percent_top=[50]` would use the 50 most expressed genes, NOT the 50% most expressed genes. So in the end, it's not a percentage but an absolute number. This is further supported by the fact that the default values are `(50, 100, 200, 500)`, which are clearly not percentages. See: https://github.com/scverse/scanpy/blob/585f58c9e4dd82dd7809a831538c4e230b008818/scanpy/preprocessing/_qc.py#L237. ### Minimal code sample. ```python. # No code, issue is in documentation. ```. ### Error output. _No response_. ### Versions. <details>. ```. -----. anndata 0.10.4. scanpy 1.9.6. -----. PIL 10.0.0. anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. pl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/issues/2842:2549,usability,simpl,simplejson,2549,". anyio NA. arrow 1.3.0. asttokens NA. attr 23.1.0. attrs 23.1.0. babel 2.13.1. certifi 2023.07.22. cffi 1.16.0. charset_normalizer 3.2.0. comm 0.2.0. cycler 0.10.0. cython_runtime NA. dateutil 2.8.2. debugpy 1.8.0. decorator 5.1.1. defusedxml 0.7.1. entrypoints 0.4. executing 2.0.1. fastjsonschema NA. fqdn NA. h5py 3.10.0. idna 3.4. igraph 0.10.8. ipykernel 6.27.1. ipython_genutils 0.2.0. ipywidgets 8.1.1. isoduration NA. jedi 0.19.1. jinja2 3.1.2. joblib 1.3.2. json5 NA. jsonpointer 2.4. jsonschema 4.20.0. jsonschema_specifications NA. jupyter_server 1.24.0. jupyterlab_server 2.25.2. kiwisolver 1.4.5. leidenalg 0.10.1. llvmlite 0.41.1. markupsafe 2.1.3. matplotlib 3.7.2. matplotlib_inline 0.1.6. mpl_toolkits NA. mpmath 1.3.0. natsort 8.4.0. nbformat 5.9.2. numba 0.58.1. numpy 1.25.2. packaging 23.1. pandas 2.1.4. parso 0.8.3. patsy 0.5.6. pexpect 4.9.0. platformdirs 4.1.0. plotly 5.18.0. prometheus_client NA. prompt_toolkit 3.0.41. psutil 5.9.6. ptyprocess 0.7.0. pure_eval 0.2.2. pycparser 2.21. pydev_ipython NA. pydevconsole NA. pydevd 2.9.5. pydevd_file_utils NA. pydevd_plugins NA. pydevd_tracing NA. pygments 2.16.1. pyparsing 3.0.9. pytz 2023.3.post1. referencing NA. requests 2.31.0. rfc3339_validator 0.1.4. rfc3986_validator 0.1.1. rpds NA. scipy 1.11.4. seaborn 0.13.1. send2trash NA. session_info 1.0.0. simplejson 3.19.1. six 1.16.0. sklearn 1.3.2. sniffio 1.3.0. sparse 0.14.0. stack_data 0.6.3. statsmodels 0.14.1. sympy 1.12. terminado 0.18.0. texttable 1.7.0. threadpoolctl 3.2.0. torch 2.1.2+cu121. torchgen NA. tornado 6.4. tqdm 4.66.1. traitlets 5.14.0. typing_extensions NA. uri_template NA. urllib3 2.0.4. wcwidth 0.2.12. webcolors 1.13. websocket 1.7.0. yaml 6.0.1. zmq 24.0.1. -----. IPython 8.18.1. jupyter_client 7.4.9. jupyter_core 5.5.0. jupyterlab 3.6.5. notebook 6.5.6. -----. Python 3.11.3 (main, Aug 25 2023, 17:24:38) [GCC 11.4.0]. Linux-5.15.0-91-generic-x86_64-with-glibc2.35. -----. Session information updated at 2024-02-07 10:05. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2842
https://github.com/scverse/scanpy/pull/2843:454,availability,avail,available,454,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:417,deployability,scale,scales,417,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:417,energy efficiency,scale,scales,417,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:566,energy efficiency,core,cores,566,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:417,modifiability,scal,scales,417,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:200,performance,parallel,parallel,200,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:304,performance,time,time,304,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:417,performance,scale,scales,417,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:454,reliability,availab,available,454,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:0,safety,Prevent,Prevent,0,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:32,safety,test,tests,32,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:299,safety,test,test,299,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:454,safety,avail,available,454,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:0,security,Preven,Prevent,0,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:454,security,availab,available,454,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:32,testability,test,tests,32,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:299,testability,test,test,299,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2843:479,usability,person,personally,479,"Prevent oversubscription during tests; A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843
https://github.com/scverse/scanpy/pull/2844:445,deployability,releas,release,445,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:470,deployability,Releas,Release,470,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:243,safety,review,review,243,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:347,safety,Test,Tests,347,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:515,safety,review,review,515,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:243,testability,review,review,243,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:347,testability,Test,Tests,347,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:515,testability,review,review,515,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:94,usability,guid,guidelines,94,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:125,usability,guid,guide,125,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:221,usability,workflow,workflow,221,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2844:327,usability,Close,Closes,327,Fix some plot warnings; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2839. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4. 2. 5710a1de4f091db607d76b790676b56f988638f8. 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844
https://github.com/scverse/scanpy/pull/2845:454,deployability,releas,release,454,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:479,deployability,Releas,Release,479,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:246,safety,review,review,246,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:348,safety,Test,Tests,348,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:246,testability,review,review,246,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:348,testability,Test,Tests,348,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:19,usability,help,helper,19,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:97,usability,guid,guidelines,97,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:128,usability,guid,guide,128,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:224,usability,workflow,workflow,224,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/pull/2845:330,usability,Close,Closes,330,Fix multithreading helper; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because: dev fix. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev fix.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845
https://github.com/scverse/scanpy/issues/2846:227,deployability,Integr,Integration,227,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:486,deployability,scale,scale,486,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:1135,deployability,contain,containing,1135,"anged functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False).to_pandas(). . # Read the cell names and cell metadata into the AnnData object. adata.obs = pl.read_csv(cell_metadata, separator= '\t', has",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:309,energy efficiency,load,loading,309,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:408,energy efficiency,load,loading,408,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:486,energy efficiency,scale,scale,486,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:553,energy efficiency,current,current,553,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:566,energy efficiency,load,loading,566,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:665,energy efficiency,optim,optimized,665,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:744,energy efficiency,Reduc,Reduced,744,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:752,energy efficiency,load,loading,752,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:227,integrability,Integr,Integration,227,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:651,integrability,sub,substantially,651,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:227,interoperability,Integr,Integration,227,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:328,interoperability,specif,specifically,328,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:1020,interoperability,format,format,1020,"et library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False).to_pandas(). . # Read ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:125,modifiability,paramet,parameters,125,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:227,modifiability,Integr,Integration,227,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:486,modifiability,scal,scale,486,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:811,modifiability,scal,scalability,811,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:1498,modifiability,pac,package,1498,"ease describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False).to_pandas(). . # Read the cell names and cell metadata into the AnnData object. adata.obs = pl.read_csv(cell_metadata, separator= '\t', has_header=False).to_pandas(). return adata. ```.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:309,performance,load,loading,309,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:408,performance,load,loading,408,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:486,performance,scale,scale,486,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:566,performance,load,loading,566,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:665,performance,optimiz,optimized,665,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:752,performance,load,loading,752,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:760,performance,time,times,760,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:811,performance,scalab,scalability,811,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:227,reliability,Integr,Integration,227,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:227,security,Integr,Integration,227,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:227,testability,Integr,Integration,227,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:518,usability,efficien,efficiently,518,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:602,usability,effectiv,effective,602,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:783,usability,user,user,783,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/issues/2846:788,usability,experien,experience,788,"Use of fast_matrix_market library to read mtx files; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. #### Summary. Integration of the `polars` and `fast_matrix_market` libraries into Scanpy's data loading functions, specifically `scanpy.read_10x_mtx` and `scanpy.read_mtx`. This will improve the loading speed of `.mtx` and `.csv` files, which is crucial for handling large-scale single-cell datasets more efficiently. #### The problem. The current data loading mechanisms in Scanpy, while effective for small to medium datasets, could be substantially optimized for speed when dealing with larger datasets. #### Expected Impact. - Reduced loading times. - Improving the user experience. - Enhanced scalability. #### Code snipped. ```. import fast_matrix_market. import os. import scanpy as sc. import scipy as sp. def read_10x_faster(. path: str. )-> sc.AnnData:. """""". Read a sparse matrix in Matrix Market format and two CSV files with gene and cell metadata. into an AnnData object. . Args:. path: Path to the directory containing the matrix.mtx, genes.tsv, and barcodes.tsv files. . Returns:. An AnnData object with the matrix, gene metadata, and cell metadata. """""". mtx_file = os.path.join(path, ""matrix.mtx""). gene_info = os.path.join(path, ""genes.tsv""). cell_metadata = os.path.join(path, ""barcodes.tsv""). . # Read the .mtx file into a sparse matrix using the fast_matrix_market package (faster than scanpy, uses multiprocessing). mtx = fast_matrix_market.mmread(mtx_file). # Convert the sparse matrix to a CSR matrix. # Otherwise you will not be able to use it with scanpy. if isinstance(mtx, sp.sparse.coo.coo_matrix):. mtx = mtx.tocsr(). . # Create an AnnData object. adata = sc.AnnData(X=mtx.T). # Polars is faster than pandas reading csv files. # Read the gene names and cell names into the AnnData object. adata.var = pl.read_csv(gene_info, separator= '\t', has_header=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2846
https://github.com/scverse/scanpy/pull/2847:0,safety,Test,Test,0,Test codecov code annotation; Testing to see if this will allow github UI for viewing codecov annotations. https://about.codecov.io/blog/announcing-line-by-line-coverage-via-github-checks/,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847
https://github.com/scverse/scanpy/pull/2847:30,safety,Test,Testing,30,Test codecov code annotation; Testing to see if this will allow github UI for viewing codecov annotations. https://about.codecov.io/blog/announcing-line-by-line-coverage-via-github-checks/,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847
https://github.com/scverse/scanpy/pull/2847:0,testability,Test,Test,0,Test codecov code annotation; Testing to see if this will allow github UI for viewing codecov annotations. https://about.codecov.io/blog/announcing-line-by-line-coverage-via-github-checks/,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847
https://github.com/scverse/scanpy/pull/2847:30,testability,Test,Testing,30,Test codecov code annotation; Testing to see if this will allow github UI for viewing codecov annotations. https://about.codecov.io/blog/announcing-line-by-line-coverage-via-github-checks/,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847
https://github.com/scverse/scanpy/pull/2847:161,testability,coverag,coverage-via-github-checks,161,Test codecov code annotation; Testing to see if this will allow github UI for viewing codecov annotations. https://about.codecov.io/blog/announcing-line-by-line-coverage-via-github-checks/,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847
https://github.com/scverse/scanpy/pull/2847:71,usability,UI,UI,71,Test codecov code annotation; Testing to see if this will allow github UI for viewing codecov annotations. https://about.codecov.io/blog/announcing-line-by-line-coverage-via-github-checks/,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847
https://github.com/scverse/scanpy/pull/2848:17,deployability,patch,patch,17,Turn on code cov patch annotations; So we can view annotations on what lines got missed in a PR,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2848
https://github.com/scverse/scanpy/pull/2848:17,safety,patch,patch,17,Turn on code cov patch annotations; So we can view annotations on what lines got missed in a PR,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2848
https://github.com/scverse/scanpy/pull/2848:17,security,patch,patch,17,Turn on code cov patch annotations; So we can view annotations on what lines got missed in a PR,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2848
https://github.com/scverse/scanpy/pull/2849:460,deployability,releas,release,460,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:485,deployability,Releas,Release,485,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:248,safety,review,review,248,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:352,safety,Test,Tests,352,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:248,testability,review,review,248,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:352,testability,Test,Tests,352,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:99,usability,guid,guidelines,99,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:130,usability,guid,guide,130,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:226,usability,workflow,workflow,226,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2849:332,usability,Close,Closes,332,Better docs for percent_top; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2842. - [x] Tests included or not required because: it's docs. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849
https://github.com/scverse/scanpy/pull/2851:16,availability,consist,consistency,16,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:639,availability,consist,consistency,639,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:558,deployability,releas,release,558,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:583,deployability,Releas,Release,583,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:48,modifiability,extens,extensions,48,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:738,modifiability,extens,extension,738,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:28,safety,test,test,28,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:38,safety,test,test,38,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:279,safety,review,review,279,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:460,safety,Test,Tests,460,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:651,safety,test,test,651,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:691,safety,test,tests,691,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:28,testability,test,test,28,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:38,testability,test,test,38,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:279,testability,review,review,279,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:460,testability,Test,Tests,460,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:651,testability,test,test,651,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:691,testability,test,tests,691,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:16,usability,consist,consistency,16,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:130,usability,guid,guidelines,130,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:161,usability,guid,guide,161,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:257,usability,workflow,workflow,257,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:363,usability,Close,Closes,363,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2851:639,usability,consist,consistency,639,"Add cell_ranger consistency test, fix test file extensions; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464). - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851
https://github.com/scverse/scanpy/pull/2852:459,deployability,releas,release,459,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:484,deployability,Releas,Release,484,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:33,safety,test,tests,33,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:259,safety,review,review,259,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:361,safety,Test,Tests,361,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:33,testability,test,tests,33,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:259,testability,review,review,259,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:361,testability,Test,Tests,361,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:110,usability,guid,guidelines,110,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:141,usability,guid,guide,141,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:237,usability,workflow,workflow,237,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/pull/2852:343,usability,Close,Closes,343,Ignore dask dataframe warning in tests; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852
https://github.com/scverse/scanpy/issues/2853:1126,availability,Error,Error,1126,"these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:276,deployability,version,version,276,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:486,deployability,fail,fails,486,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2707,deployability,Version,Versions,2707,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2439,energy efficiency,model,model,2439,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2489,energy efficiency,model,model,2489,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2530,energy efficiency,model,model,2530,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:276,integrability,version,version,276,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1081,integrability,batch,batch,1081,"iable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1089,integrability,sub,subset,1089,"nes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1378,integrability,batch,batch,1378,"What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, spa",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1386,integrability,sub,subset,1386,"pened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1641,integrability,sub,subset,1641,"aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). Va",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1995,integrability,sub,subset,1995,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2002,integrability,sub,subset,2002,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2384,integrability,sub,subset,2384,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2707,integrability,Version,Versions,2707,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:815,interoperability,format,format,815,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:276,modifiability,version,version,276,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:850,modifiability,layer,layers,850,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1052,modifiability,layer,layer,1052,"when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_ke",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1349,modifiability,layer,layer,1349,"master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1466,modifiability,pac,packages,1466,"fer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1559,modifiability,layer,layer,1559," b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1771,modifiability,paramet,parameters,1771,"ored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 n",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1873,modifiability,layer,layer,1873,"X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynn",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1879,modifiability,layer,layer,1879,"(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescen",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2130,modifiability,layer,layer,2130,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2136,modifiability,layer,layer,2136,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2230,modifiability,pac,packages,2230,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2333,modifiability,layer,layer,2333,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2707,modifiability,Version,Versions,2707,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1081,performance,batch,batch,1081,"iable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1126,performance,Error,Error,1126,"these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1378,performance,batch,batch,1378,"What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, spa",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:486,reliability,fail,fails,486,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1126,safety,Error,Error,1126,"these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1694,security,sign,signature,1694,"445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. `",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2439,security,model,model,2439,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2489,security,model,model,2489,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2530,security,model,model,2530,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1160,testability,Trace,Traceback,1160,"ve checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=fla",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:236,usability,confirm,confirmed,236,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:319,usability,confirm,confirmed,319,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:612,usability,Minim,Minimal,612,"ValueError: b'Extrapolation not allowed with blending' when using `""sc.pp.highly_variable_genes""` function; ### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subse",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:1126,usability,Error,Error,1126,"these conditions are met. - [X] I have checked that this issue has not already been reported. - [X] I have confirmed this bug exists on the latest version of scanpy. - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened? During preprocessing of concatenated adata file for scvi-based label transfer, processing fails when applying ""sc.pp.highly_variable_genes"" function with ""ValueError: b'Extrapolation not allowed with blending'"". ### Minimal code sample. ```python. aadata = aadata.concatenate(ref_data_WT). aadata.X. <15445x13343 sparse matrix of type '<class 'numpy.float64'>'. 	with 107849393 stored elements in Compressed Sparse Row format>. # pre-processing:. aadata.layers[""counts""] = aadata.X.copy(). sc.pp.normalize_total(aadata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2853:2824,usability,learn,learn,2824,"adata, target_sum=1e4). sc.pp.log1p(aadata). aadata.raw = aadata. sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. ```. ### Error output. ```pytb. ValueError Traceback (most recent call last). Cell In[37], line 7. 4 sc.pp.log1p(aadata). 5 aadata.raw = aadata. ----> 7 sc.pp.highly_variable_genes(aadata, flavor = 'seurat_v3', n_top_genes=2000,. 8 layer = ""counts"", batch_key=""batch"", subset = True)#, span =0.5. File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:441, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values). 439 sig = signature(_highly_variable_genes_seurat_v3). 440 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default). --> 441 return _highly_variable_genes_seurat_v3(. 442 adata,. 443 layer=layer,. 444 n_top_genes=n_top_genes,. 445 batch_key=batch_key,. 446 check_values=check_values,. 447 span=span,. 448 subset=subset,. 449 inplace=inplace,. 450 ). 452 if batch_key is None:. 453 df = _highly_variable_genes_single_batch(. 454 adata,. 455 layer=layer,. (...). 462 flavor=flavor,. 463 ). File ~/mambaforge/envs/soupxEnv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:87, in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace). 85 x = np.log10(mean[not_const]). 86 model = loess(x, y, span=span, degree=2). ---> 87 model.fit(). 88 estimat_var[not_const] = model.outputs.fitted_values. 89 reg_std = np.sqrt(10**estimat_var). File _loess.pyx:899, in _loess.loess.fit(). ValueError: b'Extrapolation not allowed with blending'. ```. ### Versions. <details>. ```. scanpy==1.9.8 anndata==0.10.2 umap==0.5.4 numpy==1.24.4 scipy==1.11.3 pandas==2.1.1 scikit-learn==1.3.1 statsmodels==0.14.0 igraph==0.10.8 pynndescent==0.5.10. ```. </details>.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2853
https://github.com/scverse/scanpy/issues/2854:365,availability,error,error,365,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:515,deployability,automat,automatically,515,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:214,energy efficiency,Current,Currently,214,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:6,integrability,sub,subsample,6,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:230,integrability,sub,subsample,230,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:371,integrability,messag,message,371,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:570,integrability,sub,subsample,570,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:371,interoperability,messag,message,371,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:126,modifiability,paramet,parameters,126,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:644,modifiability,paramet,parameter,644,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:365,performance,error,error,365,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:240,reliability,doe,does,240,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:365,safety,error,error,365,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:515,testability,automat,automatically,515,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/issues/2854:365,usability,error,error,365,"sc.pp.subsample, allow for sampling with replacement; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. Currently sc.pp.subsample does not allow for sampling with replacement. When n_obs is provided, and it is larger than the size of the adata object, an error message from numpy.random.choice is given. ""obs_indices = np.random.choice(old_n_obs, size=new_n_obs, replace=False)"". It seems like replace is automatically set to False. It would be great if sc.pp.subsample provided a paramater to change the np.random.choice's 'replace' parameter to True.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2854
https://github.com/scverse/scanpy/pull/2855:0,deployability,Updat,Update,0,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:7,deployability,log,log,7,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:415,deployability,releas,release,415,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:440,deployability,Releas,Release,440,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:512,deployability,log,log,512,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:577,deployability,log,logfile,577,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:0,safety,Updat,Update,0,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:7,safety,log,log,7,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:240,safety,review,review,240,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:342,safety,Test,Tests,342,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:507,safety,test,test,507,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:512,safety,log,log,512,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:577,safety,log,logfile,577,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:0,security,Updat,Update,0,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:7,security,log,log,7,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:512,security,log,log,512,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:577,security,log,logfile,577,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:7,testability,log,log,7,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:240,testability,review,review,240,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:342,testability,Test,Tests,342,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:507,testability,test,test,507,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:512,testability,log,log,512,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:577,testability,log,logfile,577,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:91,usability,guid,guidelines,91,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:122,usability,guid,guide,122,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:218,usability,workflow,workflow,218,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2855:324,usability,Close,Closes,324,Update log handling; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855
https://github.com/scverse/scanpy/pull/2856:510,deployability,releas,release,510,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:535,deployability,Releas,Release,535,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:907,deployability,releas,release,907,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:932,deployability,scale,scale,932,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:1003,deployability,scale,scale,1003,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:932,energy efficiency,scale,scale,932,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:1003,energy efficiency,scale,scale,1003,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:932,modifiability,scal,scale,932,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:1003,modifiability,scal,scale,1003,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:932,performance,scale,scale,932,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:1003,performance,scale,scale,1003,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:283,safety,review,review,283,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:412,safety,Test,Tests,412,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:283,testability,review,review,283,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:412,testability,Test,Tests,412,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:705,testability,simpl,simple,705,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:134,usability,guid,guidelines,134,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:165,usability,guid,guide,165,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:261,usability,workflow,workflow,261,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2856:705,usability,simpl,simple,705,"(feat): pre-processing functions for `dask` with sparse chunks; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Towards #2578 and maybe others? #2764. - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because:. Note I did not follow:. https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856
https://github.com/scverse/scanpy/pull/2857:7,availability,mask,mask,7,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:418,deployability,releas,release,418,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:443,deployability,Releas,Release,443,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:496,deployability,releas,released,496,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:12,modifiability,paramet,parameters,12,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:243,safety,review,review,243,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:345,safety,Test,Tests,345,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:243,testability,review,review,243,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:345,testability,Test,Tests,345,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:94,usability,guid,guidelines,94,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:125,usability,guid,guide,125,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:221,usability,workflow,workflow,221,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/pull/2857:327,usability,Close,Closes,327,Rename mask parameters; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes N/A. - [x] Tests included. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: original PR not released.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857
https://github.com/scverse/scanpy/issues/2858:394,deployability,fail,fails,394,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:7,interoperability,convers,conversion,7,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:181,modifiability,paramet,parameters,181,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:394,reliability,fail,fails,394,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:64,safety,input,input,64,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:323,safety,input,input,323,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:570,safety,input,input,570,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:485,testability,simpl,simple,485,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:64,usability,input,input,64,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:323,usability,input,input,323,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:485,usability,simpl,simple,485,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/issues/2858:570,usability,input,input,570,String conversion of `qc_vars` into a `Collection` when a `str` input is provided in `calculate_qc_metrics`; ### What kind of feature would you like to request? Additional function parameters / changed functionality / changed defaults? ### Please describe your wishes. I often make the mistake of providing a single string input to the `qc_vars` argument in `calculate_qc_metrics` which always fails with a `KeyError` because it beings to iterate over the string. This could be a very simple addition to just convert the argument into a `list` if a `str` is provided as input.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2858
https://github.com/scverse/scanpy/pull/2859:500,deployability,releas,release,500,"Convert string input on calculate qc metrics into collection for convenience; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2858 . - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: this is a minor quality of life change, and could be tacked onto any other release as opposed to creating a dedicated release.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2859
https://github.com/scverse/scanpy/pull/2859:525,deployability,Releas,Release,525,"Convert string input on calculate qc metrics into collection for convenience; <!--. Thanks for opening a PR to scanpy! Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review. -->. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Closes #2858 . - [x] Tests included or not required because:. <!-- Only check the following box if you did not include release notes -->. - [x] Release notes not necessary because: this is a minor quality of life change, and could be tacked onto any other release as opposed to creating a dedicated release.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2859
