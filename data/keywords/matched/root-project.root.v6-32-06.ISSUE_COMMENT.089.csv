id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/14439:555,testability,automat,automatic,555,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:968,usability,clear,clearly,968,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:221,deployability,automat,automation,221,I propose to close this issue as clarified: I agree that the solution is to make backporting as easy as possible (https://github.com/root-project/root/issues/14889) to avoid these cases. We can focus our attention to the automation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:168,safety,avoid,avoid,168,I propose to close this issue as clarified: I agree that the solution is to make backporting as easy as possible (https://github.com/root-project/root/issues/14889) to avoid these cases. We can focus our attention to the automation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:221,testability,automat,automation,221,I propose to close this issue as clarified: I agree that the solution is to make backporting as easy as possible (https://github.com/root-project/root/issues/14889) to avoid these cases. We can focus our attention to the automation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:13,usability,close,close,13,I propose to close this issue as clarified: I agree that the solution is to make backporting as easy as possible (https://github.com/root-project/root/issues/14889) to avoid these cases. We can focus our attention to the automation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/pull/14440:55,integrability,messag,message,55,Oh and maybe it would be good to have a shorter commit message with maximum 72 characters,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14440
https://github.com/root-project/root/pull/14440:55,interoperability,messag,message,55,Oh and maybe it would be good to have a shorter commit message with maximum 72 characters,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14440
https://github.com/root-project/root/pull/14441:145,deployability,contain,contain,145,"> @smuzaffar Could you check if this break any CMSSW code? Actually more interesting is: #14444. It doesn't matter which one you test, they both contain the commit with the `GetAddress()` and `GetObject()` return type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:100,reliability,doe,doesn,100,"> @smuzaffar Could you check if this break any CMSSW code? Actually more interesting is: #14444. It doesn't matter which one you test, they both contain the commit with the `GetAddress()` and `GetObject()` return type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:129,safety,test,test,129,"> @smuzaffar Could you check if this break any CMSSW code? Actually more interesting is: #14444. It doesn't matter which one you test, they both contain the commit with the `GetAddress()` and `GetObject()` return type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:129,testability,test,test,129,"> @smuzaffar Could you check if this break any CMSSW code? Actually more interesting is: #14444. It doesn't matter which one you test, they both contain the commit with the `GetAddress()` and `GetObject()` return type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:113,safety,test,tests,113,"> @smuzaffar Could you check if this break any CMSSW code? Actually more interesting is: #14444. @pcanal , cmssw tests are running via https://github.com/cms-sw/root/pull/196",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:113,testability,test,tests,113,"> @smuzaffar Could you check if this break any CMSSW code? Actually more interesting is: #14444. @pcanal , cmssw tests are running via https://github.com/cms-sw/root/pull/196",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:60,availability,error,error,60,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1295,availability,ERROR,ERRORS,1295,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:48,deployability,fail,failed,48,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:110,deployability,artifact,artifacts,110,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:133,deployability,integr,integration,133,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:225,deployability,log,log,225,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:581,deployability,modul,module,581,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:133,integrability,integr,integration,133,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1175,integrability,sub,subscriptable,1175,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:133,interoperability,integr,integration,133,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:812,interoperability,prox,proxy,812,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:133,modifiability,integr,integration,133,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:581,modifiability,modul,module,581,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:60,performance,error,error,60,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1295,performance,ERROR,ERRORS,1295,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:48,reliability,fail,failed,48,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:133,reliability,integr,integration,133,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:43,safety,test,test,43,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:60,safety,error,error,60,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:192,safety,test,test,192,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:197,safety,Test,TestDQMServicesDemo,197,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:217,safety,test,testing,217,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:225,safety,log,log,225,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:279,safety,test,tests,279,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:341,safety,test,test,341,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:479,safety,test,tests,479,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:541,safety,test,test,541,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:581,safety,modul,module,581,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:659,safety,test,tests,659,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:665,safety,test,testBuildDir,665,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:909,safety,test,tests,909,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:915,safety,test,testBuildDir,915,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1266,safety,test,test,1266,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1271,safety,Test,TestDQMServicesDemo,1271,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1295,safety,ERROR,ERRORS,1295,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:133,security,integr,integration,133,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:225,security,log,log,225,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:38,testability,unit,unit,38,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:43,testability,test,test,43,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:133,testability,integr,integration,133,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:161,testability,unit,unitTests,161,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:192,testability,test,test,192,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:197,testability,Test,TestDQMServicesDemo,197,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:217,testability,test,testing,217,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:225,testability,log,log,225,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:279,testability,test,tests,279,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:341,testability,test,test,341,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:396,testability,Trace,Traceback,396,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:479,testability,test,tests,479,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:541,testability,test,test,541,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:659,testability,test,tests,659,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:665,testability,test,testBuildDir,665,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:909,testability,test,tests,909,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:915,testability,test,testBuildDir,915,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1266,testability,test,test,1266,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1271,testability,Test,TestDQMServicesDemo,1271,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:60,usability,error,error,60,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:1295,usability,ERROR,ERRORS,1295,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log. ```. ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary. Traceback (most recent call last):. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>. value = metree.Value. File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__. proxy = bind_branch_to_proxy(self, name, branch). File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy. return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()). TypeError: 'nullptr_t' object is not subscriptable. + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:39,availability,error,errors,39,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:209,deployability,upgrad,upgrade,209,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:238,integrability,translat,translation,238,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:238,interoperability,translat,translation,238,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:209,modifiability,upgrad,upgrade,209,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:39,performance,error,errors,39,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:77,reliability,doe,doesn,77,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:39,safety,error,errors,39,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:39,usability,error,errors,39,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14441:304,usability,close,close,304,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14441
https://github.com/root-project/root/pull/14443:25,integrability,discover,discover,25,Interesting! How did you discover this one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:25,interoperability,discover,discover,25,Interesting! How did you discover this one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:25,usability,discov,discover,25,Interesting! How did you discover this one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:27,integrability,discover,discover,27,> Interesting! How did you discover this one? That's our segfault with the converted AGC RNTuple files... Eventually I noticed that the offset was going backwards when adding string sizes which didn't sound right :neutral_face:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:106,integrability,Event,Eventually,106,> Interesting! How did you discover this one? That's our segfault with the converted AGC RNTuple files... Eventually I noticed that the offset was going backwards when adding string sizes which didn't sound right :neutral_face:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:27,interoperability,discover,discover,27,> Interesting! How did you discover this one? That's our segfault with the converted AGC RNTuple files... Eventually I noticed that the offset was going backwards when adding string sizes which didn't sound right :neutral_face:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:27,usability,discov,discover,27,> Interesting! How did you discover this one? That's our segfault with the converted AGC RNTuple files... Eventually I noticed that the offset was going backwards when adding string sizes which didn't sound right :neutral_face:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:19,safety,review,review,19,"Should be good for review now, working on my end and I added some comments to prevent future developers from being as confused as me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:78,safety,prevent,prevent,78,"Should be good for review now, working on my end and I added some comments to prevent future developers from being as confused as me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:78,security,preven,prevent,78,"Should be good for review now, working on my end and I added some comments to prevent future developers from being as confused as me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14443:19,testability,review,review,19,"Should be good for review now, working on my end and I added some comments to prevent future developers from being as confused as me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14443
https://github.com/root-project/root/pull/14444:75,safety,test,tests,75,"> @smuzaffar Could you check if this break any CMSSW code? @pcanal , cmssw tests started via https://github.com/cms-sw/root/pull/197",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:75,testability,test,tests,75,"> @smuzaffar Could you check if this break any CMSSW code? @pcanal , cmssw tests started via https://github.com/cms-sw/root/pull/197",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:491,availability,avail,available,491,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:147,deployability,fail,fail,147,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:529,deployability,API,API,529,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:529,integrability,API,API,529,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:529,interoperability,API,API,529,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:671,interoperability,convers,conversion,671,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:289,modifiability,paramet,parameter,289,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:515,modifiability,Exten,Extending,515,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:650,modifiability,extens,extension,650,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:838,modifiability,extens,extension,838,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:147,reliability,fail,fail,147,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:491,reliability,availab,available,491,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:138,safety,test,tests,138,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:491,safety,avail,available,491,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:491,security,availab,available,491,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:138,testability,test,tests,138,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:766,usability,prefer,preferred,766,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:873,usability,prefer,prefer,873,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:. * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`. * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:36,availability,error,error,36,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:30,deployability,build,build,30,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:36,performance,error,error,36,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:36,safety,error,error,36,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:61,safety,test,tests,61,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:81,safety,test,tests,81,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:56,testability,unit,unit,56,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:61,testability,test,tests,61,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:81,testability,test,tests,81,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:36,usability,error,error,36,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:16,deployability,API,API,16,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:149,deployability,API,API,149,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:350,deployability,API,API,350,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:16,integrability,API,API,16,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:149,integrability,API,API,149,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:199,integrability,Event,Eventual,199,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:350,integrability,API,API,350,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:16,interoperability,API,API,16,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:149,interoperability,API,API,149,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:350,interoperability,API,API,350,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:2,modifiability,Exten,Extending,2,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:503,reliability,doe,does,503,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:121,usability,prefer,prefer,121,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:215,usability,user,users,215,"> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). If I can cast my vote, I would prefer this option. The new API can be used by our Pythonizations everywhere. Eventual Python users that might have been bitten in the past by the type of the return value of `TBranch::GetAddress()` may be redirected to this new API. Existing code bases which might rely on the existing `char *` return type will not be influenced by the change. Although already knowing that CMSSW does not strictly rely on that is a relief :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:16,deployability,API,API,16,> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). This is probably the best albeit there is yet another alternative:. ```. template <typename T = char *>. T* GetObject();. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:16,integrability,API,API,16,> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). This is probably the best albeit there is yet another alternative:. ```. template <typename T = char *>. T* GetObject();. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:16,interoperability,API,API,16,> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). This is probably the best albeit there is yet another alternative:. ```. template <typename T = char *>. T* GetObject();. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14444:2,modifiability,Exten,Extending,2,> Extending the API with new methods like GetObjectAsVoidPtr() and GetAddressAsVoidPtr(). This is probably the best albeit there is yet another alternative:. ```. template <typename T = char *>. T* GetObject();. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14444
https://github.com/root-project/root/pull/14445:251,deployability,log,logically,251,"> > Thanks! Please squash on merge, we don't need the individual commits in the history. > . > We should only have squash and merge allowed to keep our history friendly to git bisect... I disagree, in many cases it's helpful to have more detailed and logically separate commits and for example I try to make sure that all of them build. Also, merge commits don't help all that much for bisect, you might still end up in the branch and you have to manually figure out that you're supposed to skip it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14445
https://github.com/root-project/root/pull/14445:330,deployability,build,build,330,"> > Thanks! Please squash on merge, we don't need the individual commits in the history. > . > We should only have squash and merge allowed to keep our history friendly to git bisect... I disagree, in many cases it's helpful to have more detailed and logically separate commits and for example I try to make sure that all of them build. Also, merge commits don't help all that much for bisect, you might still end up in the branch and you have to manually figure out that you're supposed to skip it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14445
https://github.com/root-project/root/pull/14445:251,safety,log,logically,251,"> > Thanks! Please squash on merge, we don't need the individual commits in the history. > . > We should only have squash and merge allowed to keep our history friendly to git bisect... I disagree, in many cases it's helpful to have more detailed and logically separate commits and for example I try to make sure that all of them build. Also, merge commits don't help all that much for bisect, you might still end up in the branch and you have to manually figure out that you're supposed to skip it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14445
https://github.com/root-project/root/pull/14445:251,security,log,logically,251,"> > Thanks! Please squash on merge, we don't need the individual commits in the history. > . > We should only have squash and merge allowed to keep our history friendly to git bisect... I disagree, in many cases it's helpful to have more detailed and logically separate commits and for example I try to make sure that all of them build. Also, merge commits don't help all that much for bisect, you might still end up in the branch and you have to manually figure out that you're supposed to skip it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14445
https://github.com/root-project/root/pull/14445:251,testability,log,logically,251,"> > Thanks! Please squash on merge, we don't need the individual commits in the history. > . > We should only have squash and merge allowed to keep our history friendly to git bisect... I disagree, in many cases it's helpful to have more detailed and logically separate commits and for example I try to make sure that all of them build. Also, merge commits don't help all that much for bisect, you might still end up in the branch and you have to manually figure out that you're supposed to skip it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14445
https://github.com/root-project/root/pull/14445:217,usability,help,helpful,217,"> > Thanks! Please squash on merge, we don't need the individual commits in the history. > . > We should only have squash and merge allowed to keep our history friendly to git bisect... I disagree, in many cases it's helpful to have more detailed and logically separate commits and for example I try to make sure that all of them build. Also, merge commits don't help all that much for bisect, you might still end up in the branch and you have to manually figure out that you're supposed to skip it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14445
https://github.com/root-project/root/pull/14445:363,usability,help,help,363,"> > Thanks! Please squash on merge, we don't need the individual commits in the history. > . > We should only have squash and merge allowed to keep our history friendly to git bisect... I disagree, in many cases it's helpful to have more detailed and logically separate commits and for example I try to make sure that all of them build. Also, merge commits don't help all that much for bisect, you might still end up in the branch and you have to manually figure out that you're supposed to skip it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14445
https://github.com/root-project/root/pull/14451:35,deployability,Fail,Failing,35,Still need to create the LLVM tag. Failing llvm-diff can be rerun once llvm tag is created.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:35,reliability,Fail,Failing,35,Still need to create the LLVM tag. Failing llvm-diff can be rerun once llvm tag is created.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:26,safety,test,test,26,We should probably have a test for this change.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:26,testability,test,test,26,We should probably have a test for this change.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:18,safety,test,test,18,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:30,safety,test,testing,30,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:358,safety,test,test,358,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:397,safety,test,test,397,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:18,testability,test,test,18,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:30,testability,test,testing,30,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:358,testability,test,test,358,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:397,testability,test,test,397,"> A doubt: is the test really testing the example provided in #13965 ? In #13965, the issue was that when we try to call a TF1 constructor with wrong arguments in root, it segfaults. We were trying to use the type information we didn't have, and that was causing the segfault. . This is similar to calling a function with wrong arguments and is a standalone test case. I can try to use TF1 in the test case too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:166,deployability,upgrad,upgrade,166,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:104,integrability,messag,message,104,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:104,interoperability,messag,message,104,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:166,modifiability,upgrad,upgrade,166,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:328,reliability,doe,doesn,328,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:18,safety,test,test,18,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:30,safety,test,testing,30,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:18,testability,test,test,18,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:30,testability,test,testing,30,"> A doubt: is the test really testing the example provided in #13965 ? To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:338,availability,ping,ping,338,"> We should deprecate this feature by issuing a warning if somebody uses it. Just to clarify, do you mean we should issue a warning saying `Declarations without the 'auto' keyword will be deprecated in the future` or something similar? I can open a new PR for that, I had a quick chat with @dpiparo and maybe we should discuss this more. ping: @hahnjo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14451:439,availability,ping,ping,439,"> > We should deprecate this feature by issuing a warning if somebody uses it. > . > Just to clarify, do you mean we should issue a warning saying `Declarations without the 'auto' keyword will be deprecated in the future` or something similar? Yes. EDIT: We should also issue a fixme note suggesting people how to fix their codes. > . > I can open a new PR for that, I had a quick chat with @dpiparo and maybe we should discuss this more. ping: @hahnjo. Sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14451
https://github.com/root-project/root/pull/14454:75,safety,except,except,75,"I already had a quick look last week and didn't have any further comments (except maybe that `GenerateBulk` is first used in the next commit titled ""return const ref from RNTupleReader::GetModel()"" :see_no_evil:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:142,availability,error,errors,142,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:799,availability,error,error,799,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1094,availability,error,error,1094,"cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1648,availability,error,error,1648,"cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1911,availability,error,error,1911,".Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1940,availability,operat,operator,1940,"a/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2201,availability,error,error,2201," ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""even",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2488,availability,error,error,2488,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2517,availability,operat,operator,2517,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2814,availability,error,error,2814,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3088,availability,error,error,3088,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3117,availability,operat,operator,3117,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:124,deployability,build,build,124,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:130,deployability,fail,failed,130,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:202,deployability,fail,fail,202,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:227,deployability,updat,update,227,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:547,deployability,artifact,artifacts,547,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:570,deployability,integr,integration,570,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:598,deployability,build,build-logs,598,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:630,deployability,log,log,630,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:248,energy efficiency,model,model,248,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:302,energy efficiency,model,model,302,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:909,energy efficiency,model,model,909,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1179,energy efficiency,model,model,1179,"is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1706,energy efficiency,model,model,1706,"X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1992,energy efficiency,model,model,1992,"_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2259,energy efficiency,model,model,2259,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2569,energy efficiency,model,model,2569,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2872,energy efficiency,model,model,2872,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3169,energy efficiency,model,model,3169,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:570,integrability,integr,integration,570,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2903,integrability,event,event,2903,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3200,integrability,event,event,3200,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:570,interoperability,integr,integration,570,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:752,interoperability,plug,plugins,752,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1047,interoperability,plug,plugins,1047," changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1318,interoperability,plug,plugins,1318,"... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1595,interoperability,plug,plugins,1595,"uild-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""lumino",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1858,interoperability,plug,plugins,1858,"amed 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2148,interoperability,plug,plugins,2148,"nst auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2435,interoperability,plug,plugins,2435,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2761,interoperability,plug,plugins,2761,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3035,interoperability,plug,plugins,3035,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:570,modifiability,integr,integration,570,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:142,performance,error,errors,142,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:799,performance,error,error,799,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1094,performance,error,error,1094,"cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1648,performance,error,error,1648,"cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1911,performance,error,error,1911,".Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2201,performance,error,error,2201," ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""even",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2488,performance,error,error,2488,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2814,performance,error,error,2814,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3088,performance,error,error,3088,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:130,reliability,fail,failed,130,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:202,reliability,fail,fail,202,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:570,reliability,integr,integration,570,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:28,safety,test,test,28,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:142,safety,error,errors,142,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:227,safety,updat,update,227,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:604,safety,log,logs,604,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:630,safety,log,log,630,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:686,safety,test,tests,686,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:799,safety,error,error,799,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:981,safety,test,tests,981,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1094,safety,error,error,1094,"cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1252,safety,test,tests,1252,"etDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1529,safety,test,tests,1529,"ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1648,safety,error,error,1648,"cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1792,safety,test,tests,1792,"38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1911,safety,error,error,1911,".Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2082,safety,test,tests,2082,":126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2201,safety,error,error,2201," ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""even",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2369,safety,test,tests,2369,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2488,safety,error,error,2488,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2695,safety,test,tests,2695,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2814,safety,error,error,2814,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2969,safety,test,tests,2969,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3088,safety,error,error,3088,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:227,security,updat,update,227,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:248,security,model,model,248,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:302,security,model,model,302,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:570,security,integr,integration,570,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:604,security,log,logs,604,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:630,security,log,log,630,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:909,security,model,model,909,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1179,security,model,model,1179,"is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1694,security,token,token,1694,"_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1706,security,model,model,1706,"X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1992,security,model,model,1992,"_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2247,security,token,token,2247,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2259,security,model,model,2259,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2569,security,model,model,2569,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2860,security,token,token,2860,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2872,security,model,model,2872,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3169,security,model,model,3169,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:28,testability,test,test,28,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:570,testability,integr,integration,570,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:604,testability,log,logs,604,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:630,testability,log,log,630,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:686,testability,test,tests,686,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:981,testability,test,tests,981,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1252,testability,test,tests,1252,"etDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1529,testability,test,tests,1529,"ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1792,testability,test,tests,1792,"38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2082,testability,test,tests,2082,":126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2369,testability,test,tests,2369,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2695,testability,test,tests,2695,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2969,testability,test,tests,2969,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:142,usability,error,errors,142,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:799,usability,error,error,799,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.Ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1094,usability,error,error,1094,"cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls? We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ? [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html. ```. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1648,usability,error,error,1648,"cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:1911,usability,error,error,1911,".Get<bool>(name);. | ^~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'. 126 | const auto* existing_field = model.Get<bool>(name);. | ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2201,usability,error,error,2201," ^~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""even",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2488,usability,error,error,2488,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:2814,usability,error,error,2814,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:3088,usability,error,error,3088,"rkspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 77 | model.AddField<UInt_t>(""run"", &m_run);. | ^~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:28: error: expected primary-expression before '>' token. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:78:30: error: left operand of comma operator has no effect [-Werror=unused-value]. 78 | model.AddField<UInt_t>(""luminosityBlock"", &m_luminosityBlock);. | ^~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:35: error: expected primary-expression before '>' token. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:79:37: error: left operand of comma operator has no effect [-Werror=unused-value]. 79 | model.AddField<std::uint64_t>(""event"", &m_event);. | ^~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:21,deployability,updat,update,21,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:42,energy efficiency,model,model,42,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:96,energy efficiency,model,model,96,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:181,energy efficiency,model,model,181,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:309,integrability,interfac,interface,309,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:575,integrability,Event,EventID,575,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:309,interoperability,interfac,interface,309,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:309,modifiability,interfac,interface,309,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:21,safety,updat,update,21,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:415,safety,compl,complicated,415,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:21,security,updat,update,21,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:42,security,model,model,42,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:96,security,model,model,96,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:181,security,model,model,181,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14454:415,security,compl,complicated,415,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls? That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14454
https://github.com/root-project/root/pull/14455:105,energy efficiency,green,green,105,"Hi @vepadulano, thanks for your follow-up review! I have implemented your comments. Let's hope the CI is green tomorrow morning :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:42,safety,review,review,42,"Hi @vepadulano, thanks for your follow-up review! I have implemented your comments. Let's hope the CI is green tomorrow morning :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:42,testability,review,review,42,"Hi @vepadulano, thanks for your follow-up review! I have implemented your comments. Let's hope the CI is green tomorrow morning :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:15,deployability,updat,update,15,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:93,deployability,updat,update,93,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:126,interoperability,conflict,conflicts,126,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:33,performance,time,times,33,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:15,safety,updat,update,15,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:93,safety,updat,update,93,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:15,security,updat,update,15,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:93,security,updat,update,93,"Sorry I had to update it so many times! ROOT `master` changes so much in PyROOT, I needed to update more than just fixing git conflicts...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:70,safety,review,review,70,"Hi @vepadulano! I have addressed your latest comments, thanks for the review :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14455:70,testability,review,review,70,"Hi @vepadulano! I have addressed your latest comments, thanks for the review :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14455
https://github.com/root-project/root/pull/14456:1142,availability,consist,consistency,1142,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:908,deployability,fail,fail,908,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:990,deployability,fail,failed,990,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:1262,modifiability,paramet,parameters,1262,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:908,reliability,fail,fail,908,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:990,reliability,fail,failed,990,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:89,security,Auth,Author,89,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:882,usability,close,close,882,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14456:1142,usability,consist,consistency,1142,"Hi guys,. I suggest a rewrite of the `TEllipse::IsInside` method as follows:. ```cpp. // Author: Ole Hansen (ole@jlab.org), Leap Day 2024. Int_t TEllipse::IsInside(Double_t x, Double_t y) const. {. x -= fX1;. y -= fY1;. Double_t th = fTheta*TMath::DegToRad();. Double_t st = TMath::Sin(th);. Double_t ct = TMath::Cos(th);. Double_t xx = ct*x + st*y;. Double_t yy = -st*x + ct*y;. if (TMath::Abs(xx) > fR1 || TMath::Abs(yy) > fR2). return 0;. Double_t xn = xx/fR1;. Double_t yn = yy/fR2;. if (xn*xn + yn*yn > 1.). return 0;. if (fPhimax - fPhimin >= 360.). return 1;. Double_t phimin = std::fmod(fPhimin, 360.);. Double_t phimax = std::fmod(fPhimax, 360.);. Double_t phi = TMath::RadToDeg()*(TMath::Pi() + TMath::ATan2(-yy*fR1/fR2, -xx));. if (phi < phimin || phi > phimax). return 0;. return 1;. }. ```. Rationale:. - The algorithm in the PR is mathematically incorrect. For points close to the edge, it may fail to report a point as being inside. (My middle school math teacher would have failed that solution.). - The code in the PR is inefficient: 404 calls to trig functions vs. at most 3 in the solution above. You may want to add extra consistency checking (`fPhimin` < `fPhimax`, divisors != 0.0 etc.) in case the object was constructed with unreasonable parameters. Then again, such checks probably should go in the `TEllipse` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14456
https://github.com/root-project/root/pull/14459:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14459
https://github.com/root-project/root/issues/14460:1403,deployability,releas,release,1403,"After some more investigation, I am not sure I can reproduce the issue as I imagined it initially. Here is my attempt. ```cpp. #include <ROOT/RNTuple.hxx>. #include <iostream>. #include <string>. using RNTupleReader = ROOT::Experimental::RNTupleReader;. int main() {. std::string ntupleName{""Events""};. // A chain of directories, 259 characters long . std::string directory{""directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory""};. // Filename exactly 255 chars long (1 less than the maximum allowed by the OS). std::string name255{""filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar1012345""}; . std::string filePath{directory + ""/"" + name255}; // 260 + 255. auto ntuple = RNTupleReader::Open(ntupleName, filePath);. }. ```. With result . ```. $: ./reproducer.out . Warning in <[ROOT.NTuple] Warning /home/vpadulan/Programs/rootproject/rootsrc/tree/ntuple/v7/src/RPageStorageFile.cxx:265 in void ROOT::Experimental::Detail::RPageSourceFile::InitDescriptor(const ROOT::Experimental::RNTuple&)>: Pre-release format version: RC 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:1418,deployability,version,version,1418,"After some more investigation, I am not sure I can reproduce the issue as I imagined it initially. Here is my attempt. ```cpp. #include <ROOT/RNTuple.hxx>. #include <iostream>. #include <string>. using RNTupleReader = ROOT::Experimental::RNTupleReader;. int main() {. std::string ntupleName{""Events""};. // A chain of directories, 259 characters long . std::string directory{""directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory""};. // Filename exactly 255 chars long (1 less than the maximum allowed by the OS). std::string name255{""filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar1012345""}; . std::string filePath{directory + ""/"" + name255}; // 260 + 255. auto ntuple = RNTupleReader::Open(ntupleName, filePath);. }. ```. With result . ```. $: ./reproducer.out . Warning in <[ROOT.NTuple] Warning /home/vpadulan/Programs/rootproject/rootsrc/tree/ntuple/v7/src/RPageStorageFile.cxx:265 in void ROOT::Experimental::Detail::RPageSourceFile::InitDescriptor(const ROOT::Experimental::RNTuple&)>: Pre-release format version: RC 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:292,integrability,Event,Events,292,"After some more investigation, I am not sure I can reproduce the issue as I imagined it initially. Here is my attempt. ```cpp. #include <ROOT/RNTuple.hxx>. #include <iostream>. #include <string>. using RNTupleReader = ROOT::Experimental::RNTupleReader;. int main() {. std::string ntupleName{""Events""};. // A chain of directories, 259 characters long . std::string directory{""directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory""};. // Filename exactly 255 chars long (1 less than the maximum allowed by the OS). std::string name255{""filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar1012345""}; . std::string filePath{directory + ""/"" + name255}; // 260 + 255. auto ntuple = RNTupleReader::Open(ntupleName, filePath);. }. ```. With result . ```. $: ./reproducer.out . Warning in <[ROOT.NTuple] Warning /home/vpadulan/Programs/rootproject/rootsrc/tree/ntuple/v7/src/RPageStorageFile.cxx:265 in void ROOT::Experimental::Detail::RPageSourceFile::InitDescriptor(const ROOT::Experimental::RNTuple&)>: Pre-release format version: RC 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:1418,integrability,version,version,1418,"After some more investigation, I am not sure I can reproduce the issue as I imagined it initially. Here is my attempt. ```cpp. #include <ROOT/RNTuple.hxx>. #include <iostream>. #include <string>. using RNTupleReader = ROOT::Experimental::RNTupleReader;. int main() {. std::string ntupleName{""Events""};. // A chain of directories, 259 characters long . std::string directory{""directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory""};. // Filename exactly 255 chars long (1 less than the maximum allowed by the OS). std::string name255{""filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar1012345""}; . std::string filePath{directory + ""/"" + name255}; // 260 + 255. auto ntuple = RNTupleReader::Open(ntupleName, filePath);. }. ```. With result . ```. $: ./reproducer.out . Warning in <[ROOT.NTuple] Warning /home/vpadulan/Programs/rootproject/rootsrc/tree/ntuple/v7/src/RPageStorageFile.cxx:265 in void ROOT::Experimental::Detail::RPageSourceFile::InitDescriptor(const ROOT::Experimental::RNTuple&)>: Pre-release format version: RC 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:1411,interoperability,format,format,1411,"After some more investigation, I am not sure I can reproduce the issue as I imagined it initially. Here is my attempt. ```cpp. #include <ROOT/RNTuple.hxx>. #include <iostream>. #include <string>. using RNTupleReader = ROOT::Experimental::RNTupleReader;. int main() {. std::string ntupleName{""Events""};. // A chain of directories, 259 characters long . std::string directory{""directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory""};. // Filename exactly 255 chars long (1 less than the maximum allowed by the OS). std::string name255{""filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar1012345""}; . std::string filePath{directory + ""/"" + name255}; // 260 + 255. auto ntuple = RNTupleReader::Open(ntupleName, filePath);. }. ```. With result . ```. $: ./reproducer.out . Warning in <[ROOT.NTuple] Warning /home/vpadulan/Programs/rootproject/rootsrc/tree/ntuple/v7/src/RPageStorageFile.cxx:265 in void ROOT::Experimental::Detail::RPageSourceFile::InitDescriptor(const ROOT::Experimental::RNTuple&)>: Pre-release format version: RC 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:1418,modifiability,version,version,1418,"After some more investigation, I am not sure I can reproduce the issue as I imagined it initially. Here is my attempt. ```cpp. #include <ROOT/RNTuple.hxx>. #include <iostream>. #include <string>. using RNTupleReader = ROOT::Experimental::RNTupleReader;. int main() {. std::string ntupleName{""Events""};. // A chain of directories, 259 characters long . std::string directory{""directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory/directory""};. // Filename exactly 255 chars long (1 less than the maximum allowed by the OS). std::string name255{""filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar10filechar1012345""}; . std::string filePath{directory + ""/"" + name255}; // 260 + 255. auto ntuple = RNTupleReader::Open(ntupleName, filePath);. }. ```. With result . ```. $: ./reproducer.out . Warning in <[ROOT.NTuple] Warning /home/vpadulan/Programs/rootproject/rootsrc/tree/ntuple/v7/src/RPageStorageFile.cxx:265 in void ROOT::Experimental::Detail::RPageSourceFile::InitDescriptor(const ROOT::Experimental::RNTuple&)>: Pre-release format version: RC 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:36,availability,sli,slightly,36,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:36,reliability,sli,slightly,36,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:246,safety,test,test,246,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:278,safety,test,test,278,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:419,safety,test,test,419,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:246,testability,test,test,246,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:278,testability,test,test,278,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/issues/14460:419,testability,test,test,419,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14460
https://github.com/root-project/root/pull/14461:34,availability,sli,slightly,34,"@amete Eventually we settled on a slightly different interface but it still provides equivalent functionality. Instead of `Clone()` returning a new RValue, you would now do. ```. RValue b = a;. a.EmplaceNew();. ```. Of course, if you don't need the RValue copy, you can also just call `EmplaceNew()` on the existing RValue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14461
https://github.com/root-project/root/pull/14461:7,integrability,Event,Eventually,7,"@amete Eventually we settled on a slightly different interface but it still provides equivalent functionality. Instead of `Clone()` returning a new RValue, you would now do. ```. RValue b = a;. a.EmplaceNew();. ```. Of course, if you don't need the RValue copy, you can also just call `EmplaceNew()` on the existing RValue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14461
https://github.com/root-project/root/pull/14461:53,integrability,interfac,interface,53,"@amete Eventually we settled on a slightly different interface but it still provides equivalent functionality. Instead of `Clone()` returning a new RValue, you would now do. ```. RValue b = a;. a.EmplaceNew();. ```. Of course, if you don't need the RValue copy, you can also just call `EmplaceNew()` on the existing RValue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14461
https://github.com/root-project/root/pull/14461:53,interoperability,interfac,interface,53,"@amete Eventually we settled on a slightly different interface but it still provides equivalent functionality. Instead of `Clone()` returning a new RValue, you would now do. ```. RValue b = a;. a.EmplaceNew();. ```. Of course, if you don't need the RValue copy, you can also just call `EmplaceNew()` on the existing RValue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14461
https://github.com/root-project/root/pull/14461:53,modifiability,interfac,interface,53,"@amete Eventually we settled on a slightly different interface but it still provides equivalent functionality. Instead of `Clone()` returning a new RValue, you would now do. ```. RValue b = a;. a.EmplaceNew();. ```. Of course, if you don't need the RValue copy, you can also just call `EmplaceNew()` on the existing RValue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14461
https://github.com/root-project/root/pull/14461:34,reliability,sli,slightly,34,"@amete Eventually we settled on a slightly different interface but it still provides equivalent functionality. Instead of `Clone()` returning a new RValue, you would now do. ```. RValue b = a;. a.EmplaceNew();. ```. Of course, if you don't need the RValue copy, you can also just call `EmplaceNew()` on the existing RValue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14461
https://github.com/root-project/root/issues/14462:113,energy efficiency,core,core,113,I believe before line: [L198](https://github.com/root-project/root/blob/c30c4035f67bf6444ca89cd5d1bd5c38c521b9f9/core/foundation/src/RConversionRuleParser.cxx#L198). one needs to insert:. ` command = TSchemaRuleProcessor::Trim( command );. `. Still struggling with running a reproducer :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14462
https://github.com/root-project/root/issues/14462:190,usability,command,command,190,I believe before line: [L198](https://github.com/root-project/root/blob/c30c4035f67bf6444ca89cd5d1bd5c38c521b9f9/core/foundation/src/RConversionRuleParser.cxx#L198). one needs to insert:. ` command = TSchemaRuleProcessor::Trim( command );. `. Still struggling with running a reproducer :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14462
https://github.com/root-project/root/issues/14462:228,usability,command,command,228,I believe before line: [L198](https://github.com/root-project/root/blob/c30c4035f67bf6444ca89cd5d1bd5c38c521b9f9/core/foundation/src/RConversionRuleParser.cxx#L198). one needs to insert:. ` command = TSchemaRuleProcessor::Trim( command );. `. Still struggling with running a reproducer :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14462
https://github.com/root-project/root/issues/14462:53,energy efficiency,current,currently,53,"Of course, its not quite as easy... :( . The parsing currently looks for `}""` without any white-space, similarly it checks for the 2nd character to be the `{` , meaning no space between the quote and brace here either. I'd suggest:. Split off the quotes, trim the string and check the first and last characters to be `{` and `}`. But I am not totally convinced that this may not have bad side-effects...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14462
https://github.com/root-project/root/issues/14462:301,energy efficiency,current,current,301,"I need to rethink this, since my initial PR lost command elements after code key. Part of the problem is code fragment can include either curly braces or quotes, so finding the end of the key isn't quite as trivial. Since any end marker could be allowed as legal piece of code, limiting things to the current `}""` may actually be the most proper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14462
https://github.com/root-project/root/issues/14462:49,usability,command,command,49,"I need to rethink this, since my initial PR lost command elements after code key. Part of the problem is code fragment can include either curly braces or quotes, so finding the end of the key isn't quite as trivial. Since any end marker could be allowed as legal piece of code, limiting things to the current `}""` may actually be the most proper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14462
https://github.com/root-project/root/pull/14463:0,usability,Close,Closes,0,Closes #13875.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14463
https://github.com/root-project/root/pull/14465:35,safety,test,test,35,"Thanks @dpiparo! Yes, we do have a test for it, which I noticed because I made a typo when first opening this PR. It is this one:. https://github.com/root-project/roottest/blob/master/python/ttree/PyROOT_ttreetests.py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14465
https://github.com/root-project/root/pull/14465:35,testability,test,test,35,"Thanks @dpiparo! Yes, we do have a test for it, which I noticed because I made a typo when first opening this PR. It is this one:. https://github.com/root-project/roottest/blob/master/python/ttree/PyROOT_ttreetests.py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14465
https://github.com/root-project/root/pull/14466:40,safety,compl,completely,40,Thanks for approving! The moved code is completely covered by `roottest`:. https://github.com/root-project/roottest/blob/master/python/ttree/PyROOT_ttreetests.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14466
https://github.com/root-project/root/pull/14466:40,security,compl,completely,40,Thanks for approving! The moved code is completely covered by `roottest`:. https://github.com/root-project/roottest/blob/master/python/ttree/PyROOT_ttreetests.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14466
https://github.com/root-project/root/pull/14468:114,availability,error,error,114,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:918,availability,operat,operator,918,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:971,availability,operat,operator,971,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:3548,availability,operat,operator,3548,"GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////. . +template <>. +class RField<void> : public RFieldBase {. +public:. + static std::string TypeName() { return ""void""; }. + // RField<void> should never be constructed. + RField() = delete;. + RField(const RField &) = delete;. + RField &operator=(const RField &) = delete;. +};. +. template <>. class RField<ClusterSize_t> : public RFieldBase {. protected:. ```. @jblomer what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:2131,deployability,continu,continue,2131,"me and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:541,integrability,coupl,couple,541,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:860,integrability,pub,public,860,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:1101,integrability,sub,sub,1101,"nges to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:2075,integrability,pub,public,2075,"pies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:2829,integrability,pub,public,2829,"GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////. . +template <>. +class RField<void> : public RFieldBase {. +public:. + static std::string TypeName() { return ""void""; }. + // RField<void> should never be constructed. + RField() = delete;. + RField(const RField &) = delete;. + RField &operator=(const RField &) = delete;. +};. +. template <>. class RField<ClusterSize_t> : public RFieldBase {. protected:. ```. @jblomer what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:3168,integrability,pub,public,3168,"GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////. . +template <>. +class RField<void> : public RFieldBase {. +public:. + static std::string TypeName() { return ""void""; }. + // RField<void> should never be constructed. + RField() = delete;. + RField(const RField &) = delete;. + RField &operator=(const RField &) = delete;. +};. +. template <>. class RField<ClusterSize_t> : public RFieldBase {. protected:. ```. @jblomer what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:3350,integrability,pub,public,3350,"GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////. . +template <>. +class RField<void> : public RFieldBase {. +public:. + static std::string TypeName() { return ""void""; }. + // RField<void> should never be constructed. + RField() = delete;. + RField(const RField &) = delete;. + RField &operator=(const RField &) = delete;. +};. +. template <>. class RField<ClusterSize_t> : public RFieldBase {. protected:. ```. @jblomer what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:3372,integrability,pub,public,3372,"GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////. . +template <>. +class RField<void> : public RFieldBase {. +public:. + static std::string TypeName() { return ""void""; }. + // RField<void> should never be constructed. + RField() = delete;. + RField(const RField &) = delete;. + RField &operator=(const RField &) = delete;. +};. +. template <>. class RField<ClusterSize_t> : public RFieldBase {. protected:. ```. @jblomer what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:3636,integrability,pub,public,3636,"GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////. . +template <>. +class RField<void> : public RFieldBase {. +public:. + static std::string TypeName() { return ""void""; }. + // RField<void> should never be constructed. + RField() = delete;. + RField(const RField &) = delete;. + RField &operator=(const RField &) = delete;. +};. +. template <>. class RField<ClusterSize_t> : public RFieldBase {. protected:. ```. @jblomer what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:2306,interoperability,mismatch,mismatch,2306,"Field.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:2563,interoperability,mismatch,mismatch,2563,"eldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `CreateValue` in the base `class RField : public RClassField` or (and I think this is the proper solution) add a new ""dummy"" specialization:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..d72909648c 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -1680,6 +1680,16 @@ public:. /// Template specializations for concrete C++ types. ////////////////////////////////////////////////////////////////////////////////. . +template <>. +class RField<void> : public RFieldBase {. +public:. + static std::string TypeName() { return ""void""; }. + // RField<void> should never be constructed. + RField() = delete;. + RField(const RField &) = delete;. + RField &operator=(const RFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:541,modifiability,coupl,couple,541,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:114,performance,error,error,114,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:291,reliability,doe,does,291,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:114,safety,error,error,114,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:1785,safety,avoid,avoid,1785,"ield.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>());. }. ```. Finally we can either disable `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:19,testability,understand,understand,19,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:541,testability,coupl,couple,541,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:74,usability,clear,clear,74,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:114,usability,error,error,114,"Alright, I think I understand what's going on (even though it's not fully clear to me why the story changes to an error in C++20): `REntry::GetPtr<T>` instantiates `RField<T>::TypeName()` to check the type name and despite the `if constexpr (std::is_void_v<T>)` check, it seems the compiler does ""something"" with `RField<void>`. In this PR, as mentioned above, the base class destructor changes to `virtual ~RFieldBase() = default;` in the header so the compiler sees it and apparently tries to instantiate also `GenerateValue`. There are a couple of solutions: First we can move `~RFieldBase()` back into the source file:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx. index deb9d5f4a3..cd0b5dd89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14468:1740,usability,help,helps,1740,"d89e 100644. --- a/tree/ntuple/v7/inc/ROOT/RField.hxx. +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx. @@ -570,7 +570,7 @@ public:. RFieldBase(RFieldBase&&) = default;. RFieldBase& operator =(const RFieldBase&) = delete;. RFieldBase& operator =(RFieldBase&&) = default;. - virtual ~RFieldBase() = default;. + virtual ~RFieldBase();. . /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;. diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx. index ef04fec76c..41d4962ac5 100644. --- a/tree/ntuple/v7/src/RField.cxx. +++ b/tree/ntuple/v7/src/RField.cxx. @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi. {. }. . +ROOT::Experimental::RFieldBase::~RFieldBase(). +{. +}. +. std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const. {. std::string result = GetFieldName();. ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:. ```diff. diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx. index 1f3ec47095..b7b70b24cb 100644. --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx. +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx. @@ -124,12 +124,11 @@ public:. if (v.GetField().GetFieldName() != fieldName). continue;. . - if constexpr (std::is_void_v<T>). - return v.GetPtr<void>();. -. - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + if constexpr (!std::is_void_v<T>) {. + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {. + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +. + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));. + }. }. return std::static_pointer_cast<T>(v.GetPtr<void>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14468
https://github.com/root-project/root/pull/14471:0,availability,Error,Errors,0,Errors are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14471
https://github.com/root-project/root/pull/14471:0,performance,Error,Errors,0,Errors are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14471
https://github.com/root-project/root/pull/14471:0,safety,Error,Errors,0,Errors are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14471
https://github.com/root-project/root/pull/14471:0,usability,Error,Errors,0,Errors are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14471
https://github.com/root-project/root/pull/14472:361,availability,consist,consistency,361,"> I don't understand how this improves the situation: the std::mt19937 gen in theTask is already local to that task / thread... (edit: same for FillData in the other tutorial). I thought it gave stronger guarantees about initialization and destruction (especially worried about the `TRandom` instance of the other tutorial, but I thought I would touch both for consistency). In any case, before merging this PR I'll run the CI a bunch of times. It can still be closed without merging if it doesn't bring any benefit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:438,performance,time,times,438,"> I don't understand how this improves the situation: the std::mt19937 gen in theTask is already local to that task / thread... (edit: same for FillData in the other tutorial). I thought it gave stronger guarantees about initialization and destruction (especially worried about the `TRandom` instance of the other tutorial, but I thought I would touch both for consistency). In any case, before merging this PR I'll run the CI a bunch of times. It can still be closed without merging if it doesn't bring any benefit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:490,reliability,doe,doesn,490,"> I don't understand how this improves the situation: the std::mt19937 gen in theTask is already local to that task / thread... (edit: same for FillData in the other tutorial). I thought it gave stronger guarantees about initialization and destruction (especially worried about the `TRandom` instance of the other tutorial, but I thought I would touch both for consistency). In any case, before merging this PR I'll run the CI a bunch of times. It can still be closed without merging if it doesn't bring any benefit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:10,testability,understand,understand,10,"> I don't understand how this improves the situation: the std::mt19937 gen in theTask is already local to that task / thread... (edit: same for FillData in the other tutorial). I thought it gave stronger guarantees about initialization and destruction (especially worried about the `TRandom` instance of the other tutorial, but I thought I would touch both for consistency). In any case, before merging this PR I'll run the CI a bunch of times. It can still be closed without merging if it doesn't bring any benefit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:361,usability,consist,consistency,361,"> I don't understand how this improves the situation: the std::mt19937 gen in theTask is already local to that task / thread... (edit: same for FillData in the other tutorial). I thought it gave stronger guarantees about initialization and destruction (especially worried about the `TRandom` instance of the other tutorial, but I thought I would touch both for consistency). In any case, before merging this PR I'll run the CI a bunch of times. It can still be closed without merging if it doesn't bring any benefit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:461,usability,close,closed,461,"> I don't understand how this improves the situation: the std::mt19937 gen in theTask is already local to that task / thread... (edit: same for FillData in the other tutorial). I thought it gave stronger guarantees about initialization and destruction (especially worried about the `TRandom` instance of the other tutorial, but I thought I would touch both for consistency). In any case, before merging this PR I'll run the CI a bunch of times. It can still be closed without merging if it doesn't bring any benefit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:70,interoperability,specif,specifically,70,"Do we have a backtrace of one of the crashes, does it point somewhere specifically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:46,reliability,doe,does,46,"Do we have a backtrace of one of the crashes, does it point somewhere specifically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:121,deployability,log,login,121,"> Do we have a backtrace of one of the crashes, does it point somewhere specifically? Not from the CI directly, I should login on a Windows machine and try to debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:72,interoperability,specif,specifically,72,"> Do we have a backtrace of one of the crashes, does it point somewhere specifically? Not from the CI directly, I should login on a Windows machine and try to debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:48,reliability,doe,does,48,"> Do we have a backtrace of one of the crashes, does it point somewhere specifically? Not from the CI directly, I should login on a Windows machine and try to debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:121,safety,log,login,121,"> Do we have a backtrace of one of the crashes, does it point somewhere specifically? Not from the CI directly, I should login on a Windows machine and try to debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:121,security,log,login,121,"> Do we have a backtrace of one of the crashes, does it point somewhere specifically? Not from the CI directly, I should login on a Windows machine and try to debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:121,testability,log,login,121,"> Do we have a backtrace of one of the crashes, does it point somewhere specifically? Not from the CI directly, I should login on a Windows machine and try to debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:160,availability,failur,failures,160,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:222,availability,failur,failures,222,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:297,availability,sli,slightly,297,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:385,availability,failur,failure,385,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1361,availability,Error,Error,1361,"e in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1424,availability,error,error,1424,"/github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1669,availability,Error,Error,1669,"1: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1732,availability,error,error,1732,"...............................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2461,availability,Error,Error,2461,"``. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurren",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2524,availability,error,error,2524,".....................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx .....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2765,availability,Error,Error,2765,"## Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2828,availability,error,error,2828,"/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3320,availability,Error,Error,3320,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3396,availability,error,error,3396,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3765,availability,Error,Error,3765,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3841,availability,error,error,3841,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:160,deployability,fail,failures,160,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:222,deployability,fail,failures,222,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:385,deployability,fail,failure,385,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:769,deployability,Fail,Failed,769,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1207,deployability,version,version,1207,"ee how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1381,deployability,build,build,1381," failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1583,deployability,Fail,Failed,1583,".com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1689,deployability,build,build,1689,"e-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1994,deployability,Fail,Failed,1994,"e::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tuto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2435,deployability,version,version,2435,"t code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2481,deployability,build,build,2481,"960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ..........",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2679,deployability,Fail,Failed,2679,"OOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2785,deployability,build,build,2785,"ttps://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnigh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3095,deployability,Fail,Failed,3095,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3353,deployability,build,build,3353,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3545,deployability,Fail,Failed,3545,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3798,deployability,build,build,3798,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1207,integrability,version,version,1207,"ee how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1413,integrability,messag,message,1413,"ng https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1721,integrability,messag,message,1721,".........................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2435,integrability,version,version,2435,"t code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2513,integrability,messag,message,2513,"xx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ...........................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2817,integrability,messag,message,2817,"ot/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3293,integrability,interfac,interface,3293,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3385,integrability,messag,message,3385,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3738,integrability,interfac,interface,3738,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3830,integrability,messag,message,3830,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1154,interoperability,format,format,1154,"ew failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStora",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1413,interoperability,messag,message,1413,"ng https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1721,interoperability,messag,message,1721,".........................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2382,interoperability,format,format,2382,"d/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2513,interoperability,messag,message,2513,"xx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ...........................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2817,interoperability,messag,message,2817,"ot/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3293,interoperability,interfac,interface,3293,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3385,interoperability,messag,message,3385,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3738,interoperability,interfac,interface,3738,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3830,interoperability,messag,message,3830,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1207,modifiability,version,version,1207,"ee how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2435,modifiability,version,version,2435,"t code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3293,modifiability,interfac,interface,3293,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3738,modifiability,interfac,interface,3738,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:160,performance,failur,failures,160,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:222,performance,failur,failures,222,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:385,performance,failur,failure,385,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1361,performance,Error,Error,1361,"e in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1424,performance,error,error,1424,"/github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1501,performance,concurren,concurrentfill,1501,"other reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1641,performance,concurren,concurrentfill,1641,"?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1669,performance,Error,Error,1669,"1: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1732,performance,error,error,1732,"...............................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2461,performance,Error,Error,2461,"``. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurren",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2524,performance,error,error,2524,".....................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx .....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2597,performance,concurren,concurrentfill,2597,"ocessing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2737,performance,concurren,concurrentfill,2737,"Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2765,performance,Error,Error,2765,"## Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2828,performance,error,error,2828,"/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3320,performance,Error,Error,3320,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3396,performance,error,error,3396,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3455,performance,concurren,concurrentfill,3455,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3616,performance,concurren,concurrentfill,3616,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3765,performance,Error,Error,3765,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3841,performance,error,error,3841,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:160,reliability,fail,failures,160,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:222,reliability,fail,failures,222,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:297,reliability,sli,slightly,297,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:385,reliability,fail,failure,385,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:769,reliability,Fail,Failed,769,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1583,reliability,Fail,Failed,1583,".com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1994,reliability,Fail,Failed,1994,"e::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tuto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2679,reliability,Fail,Failed,2679,"OOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3095,reliability,Fail,Failed,3095,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3545,reliability,Fail,Failed,3545,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:23,safety,input,input,23,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:664,safety,Test,Test,664,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1361,safety,Error,Error,1361,"e in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1424,safety,error,error,1424,"/github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1478,safety,Test,Test,1478,"n't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1669,safety,Error,Error,1669,"1: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1732,safety,error,error,1732,"...............................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1889,safety,Test,Test,1889,"ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://gith",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2461,safety,Error,Error,2461,"``. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurren",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2524,safety,error,error,2524,".....................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx .....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2574,safety,Test,Test,2574,"....***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2765,safety,Error,Error,2765,"## Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2828,safety,error,error,2828,"/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2981,safety,Test,Test,2981,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3320,safety,Error,Error,3320,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3396,safety,error,error,3396,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3431,safety,Test,Test,3431,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3765,safety,Error,Error,3765,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3841,safety,error,error,3841,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1744,security,Access,Access,1744,"...................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2536,security,Access,Access,2536,".........................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx .................................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2840,security,Access,Access,2840,"0131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:664,testability,Test,Test,664,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1478,testability,Test,Test,1478,"n't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1889,testability,Test,Test,1889,"ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://gith",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2574,testability,Test,Test,2574,"....***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2981,testability,Test,Test,2981,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3431,testability,Test,Test,3431,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:23,usability,input,input,23,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:36,usability,clear,clear,36,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1361,usability,Error,Error,1361,"e in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1424,usability,error,error,1424,"/github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```. Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1669,usability,Error,Error,1669,"1: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:1732,usability,error,error,1732,"...............................***Failed 2.06 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'. aborting. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Exit code 0xc0000374. ```. ```. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2461,usability,Error,Error,2461,"``. 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurren",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2524,usability,error,error,2524,".....................................................***Failed 6.42 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx .....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2765,usability,Error,Error,2765,"## Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:2828,usability,error,error,2828,"/runs/7693740131/job/20963073797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3126,usability,User,Users,3126,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3320,usability,Error,Error,3320,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3330,usability,User,Users,3330,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3396,usability,error,error,3396,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3576,usability,User,Users,3576,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3765,usability,Error,Error,3765,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3775,usability,User,Users,3775,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:3841,usability,error,error,3841,"3797?pr=14472. ```. 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec. . Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ```. 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec. . Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: Access violation. ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```. 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```. ```. 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec. . Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx... IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]! CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:610,availability,failur,failures,610,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:22,deployability,log,logs,22,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:445,deployability,configurat,configuration,445,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:610,deployability,fail,failures,610,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:445,integrability,configur,configuration,445,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:445,modifiability,configur,configuration,445,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:108,performance,time,times,108,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:184,performance,concurren,concurrentfill,184,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:459,performance,time,time,459,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:610,performance,failur,failures,610,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:610,reliability,fail,failures,610,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:22,safety,log,logs,22,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:591,safety,avoid,avoid,591,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:22,security,log,logs,22,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:445,security,configur,configuration,445,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:22,testability,log,logs,22,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. ```. Start 959: tutorial-v7-concurrentfill.cxx. ```. Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:24,deployability,log,logs,24,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:463,deployability,configurat,configuration,463,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:463,integrability,configur,configuration,463,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:463,modifiability,configur,configuration,463,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:110,performance,time,times,110,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:194,performance,concurren,concurrentfill,194,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:477,performance,time,time,477,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:540,performance,time,times,540,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:24,safety,log,logs,24,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:24,security,log,logs,24,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:463,security,configur,configuration,463,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:24,testability,log,logs,24,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14472:668,usability,workflow,workflows,668,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for. > . > ```. > Start 959: tutorial-v7-concurrentfill.cxx. > ```. > . > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of. https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14472
https://github.com/root-project/root/pull/14473:45,integrability,messag,message,45,"Sorry, I forgot about the typo in the commit message :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14473
https://github.com/root-project/root/pull/14473:45,interoperability,messag,message,45,"Sorry, I forgot about the typo in the commit message :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14473
https://github.com/root-project/root/pull/14474:49,reliability,doe,doesn,49,@krasznaa can you confirm this works for you and doesn't break anything?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:18,usability,confirm,confirm,18,@krasznaa can you confirm this works for you and doesn't break anything?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:3,safety,test,test,3,No test was broken in the incrementals: perhaps we can give it a try in the nightlies?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:3,testability,test,test,3,No test was broken in the incrementals: perhaps we can give it a try in the nightlies?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:5,safety,test,test,5,"> No test was broken in the incrementals: perhaps we can give it a try in the nightlies? I was hoping getting some feedback from @krasznaa before merging, but I guess we can merge and we'll see afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:5,testability,test,test,5,"> No test was broken in the incrementals: perhaps we can give it a try in the nightlies? I was hoping getting some feedback from @krasznaa before merging, but I guess we can merge and we'll see afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:115,usability,feedback,feedback,115,"> No test was broken in the incrementals: perhaps we can give it a try in the nightlies? I was hoping getting some feedback from @krasznaa before merging, but I guess we can merge and we'll see afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:86,availability,error,error,86,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:119,availability,Error,Error,119,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:739,availability,error,error,739,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:61,deployability,build,building,61,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:150,deployability,Modul,Modules,150,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:266,deployability,Stack,Stack,266,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:323,deployability,Modul,Modules,323,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:441,deployability,modul,modules,441,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:527,deployability,Modul,Modules,527,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:709,deployability,build,build,709,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:750,deployability,build,building,750,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:199,integrability,messag,message,199,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:133,interoperability,share,share,133,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:199,interoperability,messag,message,199,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:306,interoperability,share,share,306,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:510,interoperability,share,share,510,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:150,modifiability,Modul,Modules,150,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:323,modifiability,Modul,Modules,323,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:441,modifiability,modul,modules,441,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:527,modifiability,Modul,Modules,527,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:86,performance,error,error,86,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:119,performance,Error,Error,119,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:739,performance,error,error,739,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:86,safety,error,error,86,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:119,safety,Error,Error,119,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:150,safety,Modul,Modules,150,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:323,safety,Modul,Modules,323,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:441,safety,modul,modules,441,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:527,safety,Modul,Modules,527,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:739,safety,error,error,739,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:86,usability,error,error,86,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:119,usability,Error,Error,119,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:739,usability,error,error,739,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. > Could NOT find Vdt (missing: VDT_INCLUDE_DIR). > Call Stack (most recent call first):. > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args). > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package). > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency). > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:26,deployability,version,version,26,@umberto98 use the latest version of ROOT or modify `ROOTConfig.cmake` to include the latest changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:26,integrability,version,version,26,@umberto98 use the latest version of ROOT or modify `ROOTConfig.cmake` to include the latest changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:26,modifiability,version,version,26,@umberto98 use the latest version of ROOT or modify `ROOTConfig.cmake` to include the latest changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:45,security,modif,modify,45,@umberto98 use the latest version of ROOT or modify `ROOTConfig.cmake` to include the latest changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:35,deployability,version,version,35,I am already using the last stable version of ROOT: 6.30/04.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:35,integrability,version,version,35,I am already using the last stable version of ROOT: 6.30/04.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:35,modifiability,version,version,35,I am already using the last stable version of ROOT: 6.30/04.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:37,deployability,version,version,37,> I am already using the last stable version of ROOT: 6.30/04. Then I don't know. Did you build with `-Dbuiltin_vdt=ON`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:90,deployability,build,build,90,> I am already using the last stable version of ROOT: 6.30/04. Then I don't know. Did you build with `-Dbuiltin_vdt=ON`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:37,integrability,version,version,37,> I am already using the last stable version of ROOT: 6.30/04. Then I don't know. Did you build with `-Dbuiltin_vdt=ON`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:37,modifiability,version,version,37,> I am already using the last stable version of ROOT: 6.30/04. Then I don't know. Did you build with `-Dbuiltin_vdt=ON`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:15,security,modif,modify,15,Can you try to modify `ROOTConfig.cmake` to include the latest changes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:79,deployability,version,version,79,"Ok, changing the `ROOTConfig.cmake` solved the problem. However, with the last version of root, this modification shouldn't be made by default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:79,integrability,version,version,79,"Ok, changing the `ROOTConfig.cmake` solved the problem. However, with the last version of root, this modification shouldn't be made by default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:79,modifiability,version,version,79,"Ok, changing the `ROOTConfig.cmake` solved the problem. However, with the last version of root, this modification shouldn't be made by default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:101,security,modif,modification,101,"Ok, changing the `ROOTConfig.cmake` solved the problem. However, with the last version of root, this modification shouldn't be made by default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:77,deployability,patch,patches,77,The changes have been committed yesterday in `master` and today in `v6-30-00-patches`. So it will be part of `v6.30.06` and `v6.32.00`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:77,safety,patch,patches,77,The changes have been committed yesterday in `master` and today in `v6-30-00-patches`. So it will be part of `v6.30.06` and `v6.32.00`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:77,security,patch,patches,77,The changes have been committed yesterday in `master` and today in `v6-30-00-patches`. So it will be part of `v6.30.06` and `v6.32.00`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/pull/14474:78,reliability,doe,does,78,Hi. I'm not sure if this is the appropriate avenue for this question but when does v6.30.06 ship to homebrew?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14474
https://github.com/root-project/root/issues/14479:28,deployability,build,build,28,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:121,deployability,depend,dependencies,121,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:150,deployability,instal,installed,150,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:179,deployability,instal,install,179,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:187,deployability,depend,dependencies,187,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:121,integrability,depend,dependencies,121,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:187,integrability,depend,dependencies,187,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:231,interoperability,distribut,distributions,231,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:121,modifiability,depend,dependencies,121,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:187,modifiability,depend,dependencies,187,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:121,safety,depend,dependencies,121,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:187,safety,depend,dependencies,187,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:121,testability,depend,dependencies,121,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:187,testability,depend,dependencies,187,"Hi @minimeu1 ,. a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:128,availability,Error,Error,128,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:171,availability,failur,failure,171,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:638,availability,down,download,638,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:171,deployability,fail,failure,171,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:394,deployability,instal,install,394,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:527,deployability,releas,release,527,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:692,deployability,instal,install,692,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:713,deployability,depend,dependency,713,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:32,energy efficiency,load,loadLibrary,32,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:179,energy efficiency,load,loading,179,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:255,energy efficiency,load,loadLibrary,255,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:713,integrability,depend,dependency,713,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:79,interoperability,share,shared,79,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:302,interoperability,share,shared,302,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:713,modifiability,depend,dependency,713,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:32,performance,load,loadLibrary,32,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:128,performance,Error,Error,128,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:171,performance,failur,failure,171,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:179,performance,load,loading,179,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:255,performance,load,loadLibrary,255,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:171,reliability,fail,failure,171,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:128,safety,Error,Error,128,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:713,safety,depend,dependency,713,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:390,security,apt,apt,390,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:713,testability,depend,dependency,713,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:128,usability,Error,Error,128,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage. > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:82,deployability,version,version,82,"> Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). > -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. This seems a bit similar to what will be fixed in the next release, by @krasznaa or @bellenot . https://github.com/root-project/root/issues/14163. https://github.com/root-project/root/pull/14474",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:134,deployability,instal,installation,134,"> Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). > -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. This seems a bit similar to what will be fixed in the next release, by @krasznaa or @bellenot . https://github.com/root-project/root/issues/14163. https://github.com/root-project/root/pull/14474",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:242,deployability,releas,release,242,"> Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). > -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. This seems a bit similar to what will be fixed in the next release, by @krasznaa or @bellenot . https://github.com/root-project/root/issues/14163. https://github.com/root-project/root/pull/14474",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:82,integrability,version,version,82,"> Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). > -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. This seems a bit similar to what will be fixed in the next release, by @krasznaa or @bellenot . https://github.com/root-project/root/issues/14163. https://github.com/root-project/root/pull/14474",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:82,modifiability,version,version,82,"> Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). > -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. This seems a bit similar to what will be fixed in the next release, by @krasznaa or @bellenot . https://github.com/root-project/root/issues/14163. https://github.com/root-project/root/pull/14474",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:652,availability,error,errors,652,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:671,availability,down,downloaded,671,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:210,deployability,depend,dependencies,210,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:238,deployability,instal,install,238,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:463,deployability,instal,installation,463,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:510,deployability,build,build,510,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:617,deployability,version,version,617,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:699,deployability,version,version,699,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:947,deployability,build,build,947,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:1071,deployability,version,versions,1071,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:210,integrability,depend,dependencies,210,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:617,integrability,version,version,617,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:699,integrability,version,version,699,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:889,integrability,Event,Eventhough,889,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:1071,integrability,version,versions,1071,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:210,modifiability,depend,dependencies,210,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:617,modifiability,version,version,617,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:699,modifiability,version,version,699,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:1071,modifiability,version,versions,1071,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:652,performance,error,errors,652,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:210,safety,depend,dependencies,210,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:652,safety,error,errors,652,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:210,testability,depend,dependencies,210,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:409,testability,simpl,simply,409,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:409,usability,simpl,simply,409,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:652,usability,error,errors,652,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:980,usability,help,help,980,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:1216,usability,support,support,1216,"Hello both of you! Thank you so much for the quick reply! I went through my text again and didn't notice it repeated itself...! Sorry for that! Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""? I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:326,availability,down,download,326,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:60,deployability,build,build,60,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:184,deployability,version,versions,184,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:296,deployability,build,build,296,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:423,deployability,patch,patches,423,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:2,integrability,Event,Eventhough,2,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:184,integrability,version,versions,184,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:387,integrability,repositor,repository,387,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:387,interoperability,repositor,repository,387,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:184,modifiability,version,versions,184,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:280,safety,test,testing,280,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:423,safety,patch,patches,423,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:423,security,patch,patches,423,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:280,testability,test,testing,280,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:93,usability,help,help,93,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:270,usability,help,help,270,"> Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use! Yes, in that case if you want to help with testing, please build from source, but do not download the source as .tar.gz, but clone instead the github repository and checkout the 6.30.00-patches branch, or the master branch. This one will include the fixes I mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14479:38,deployability,releas,release,38,This should be fixed with yesterday's release of 6.30.04. Please reopen if you find still an issue ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14479
https://github.com/root-project/root/issues/14483:17,performance,time,time,17,We had that some time ago but it was fixed. What is your processor? Intel ? M1 ? M2 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:69,deployability,version,version,69,I have a MacBook Pro M2 Max (2022) . I compiled a ROOT stable tagged version few days ago. May I ask which one you just compiled ? What was the origin of the issue in the first place ? Perhaps it might help finding the reason why this happens again. Thank you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:69,integrability,version,version,69,I have a MacBook Pro M2 Max (2022) . I compiled a ROOT stable tagged version few days ago. May I ask which one you just compiled ? What was the origin of the issue in the first place ? Perhaps it might help finding the reason why this happens again. Thank you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:69,modifiability,version,version,69,I have a MacBook Pro M2 Max (2022) . I compiled a ROOT stable tagged version few days ago. May I ask which one you just compiled ? What was the origin of the issue in the first place ? Perhaps it might help finding the reason why this happens again. Thank you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:202,usability,help,help,202,I have a MacBook Pro M2 Max (2022) . I compiled a ROOT stable tagged version few days ago. May I ask which one you just compiled ? What was the origin of the issue in the first place ? Perhaps it might help finding the reason why this happens again. Thank you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:93,deployability,version,version,93,"I have tried on a Mac Mini with the M2 processor, MacOS 14.3 and clang 15. I used the master version of ROOT. The PR fixing this issue is: https://github.com/root-project/root/pull/13885. @TimurP made it. I did:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build. cmake ../root. make -j8. source bin/thisroot.sh. root -web=off. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:281,deployability,build,build,281,"I have tried on a Mac Mini with the M2 processor, MacOS 14.3 and clang 15. I used the master version of ROOT. The PR fixing this issue is: https://github.com/root-project/root/pull/13885. @TimurP made it. I did:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build. cmake ../root. make -j8. source bin/thisroot.sh. root -web=off. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:296,deployability,build,build,296,"I have tried on a Mac Mini with the M2 processor, MacOS 14.3 and clang 15. I used the master version of ROOT. The PR fixing this issue is: https://github.com/root-project/root/pull/13885. @TimurP made it. I did:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build. cmake ../root. make -j8. source bin/thisroot.sh. root -web=off. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:93,integrability,version,version,93,"I have tried on a Mac Mini with the M2 processor, MacOS 14.3 and clang 15. I used the master version of ROOT. The PR fixing this issue is: https://github.com/root-project/root/pull/13885. @TimurP made it. I did:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build. cmake ../root. make -j8. source bin/thisroot.sh. root -web=off. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:93,modifiability,version,version,93,"I have tried on a Mac Mini with the M2 processor, MacOS 14.3 and clang 15. I used the master version of ROOT. The PR fixing this issue is: https://github.com/root-project/root/pull/13885. @TimurP made it. I did:. ```. git clone https://github.com/root-project/root.git. mkdir root-build. cd root-build. cmake ../root. make -j8. source bin/thisroot.sh. root -web=off. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:359,availability,Error,Error,359,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:126,deployability,version,version,126,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:374,deployability,modul,modules,374,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:523,deployability,Stack,Stack,523,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:126,integrability,version,version,126,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:417,integrability,messag,message,417,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:78,interoperability,specif,specific,78,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:417,interoperability,messag,message,417,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:126,modifiability,version,version,126,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:374,modifiability,modul,modules,374,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:359,performance,Error,Error,359,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:9,safety,compl,completion,9,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:359,safety,Error,Error,359,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:374,safety,modul,modules,374,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:9,security,compl,completion,9,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:188,usability,Command,CommandLineTools,188,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:359,usability,Error,Error,359,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? . ```. -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework. -- Looking for GLEW. -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):. Please enable builtin Glew due bug in latest CMake (use cmake option. -Dbuiltin_glew=ON). Call Stack (most recent call first):. CMakeLists.txt:298 (include). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:27,deployability,version,version,27,I just compiled the master version . Clang 16 ? ... I haven't tried.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:27,integrability,version,version,27,I just compiled the master version . Clang 16 ? ... I haven't tried.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:27,modifiability,version,version,27,I just compiled the master version . Clang 16 ? ... I haven't tried.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:79,deployability,version,version,79,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:116,deployability,version,version,116,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:266,deployability,version,version,266,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:304,deployability,version,version,304,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:79,integrability,version,version,79,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:116,integrability,version,version,116,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:266,integrability,version,version,266,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:304,integrability,version,version,304,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:79,modifiability,version,version,79,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:116,modifiability,version,version,116,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:266,modifiability,version,version,266,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:304,modifiability,version,version,304,I look at [this page](https://en.wikipedia.org/wiki/Xcode) to know which Xcode version corresponds to a given MacOS version. -> It tells me that for 14.2 it is Xcode it is Xcode 15.2. I look at [this page](https://gist.github.com/yamaya/2924292) to know which clang version corresponds to a given XCode. version. -> It tells me that for XCode 15.2 it is Clang 15.0.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:362,availability,error,error,362,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:442,availability,ERROR,ERROR,442,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:635,availability,ERROR,ERROR,635,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:15,deployability,log,log,15,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:52,deployability,version,version,52,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:257,deployability,log,log,257,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:320,deployability,log,log,320,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:52,integrability,version,version,52,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:368,integrability,messag,message,368,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:368,interoperability,messag,message,368,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:496,interoperability,standard,standard,496,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:689,interoperability,standard,standard,689,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:52,modifiability,version,version,52,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:362,performance,error,error,362,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:442,performance,ERROR,ERROR,442,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:635,performance,ERROR,ERROR,635,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:789,reliability,doe,doesn,789,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:15,safety,log,log,15,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:257,safety,log,log,257,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:320,safety,log,log,320,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:362,safety,error,error,362,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:442,safety,ERROR,ERROR,442,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:635,safety,ERROR,ERROR,635,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:726,safety,Except,Except,726,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:15,security,log,log,15,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:127,security,trust,trust,127,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:257,security,log,log,257,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:320,security,log,log,320,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:15,testability,log,log,15,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:257,testability,log,log,257,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:320,testability,log,log,320,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:339,usability,close,closely,339,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:362,usability,error,error,362,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:442,usability,ERROR,ERROR,442,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/issues/14483:635,usability,ERROR,ERROR,635,"From the cmake log in ROOT it shows:. ```. -- Clang version: 16.0.6. [...]. Compiler: AppleClang15. ```. Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. . [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. . Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14483
https://github.com/root-project/root/pull/14484:0,deployability,Fail,Failing,0,Failing tests in the new CI unrelated to PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14484
https://github.com/root-project/root/pull/14484:0,reliability,Fail,Failing,0,Failing tests in the new CI unrelated to PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14484
https://github.com/root-project/root/pull/14484:8,safety,test,tests,8,Failing tests in the new CI unrelated to PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14484
https://github.com/root-project/root/pull/14484:8,testability,test,tests,8,Failing tests in the new CI unrelated to PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14484
https://github.com/root-project/root/pull/14485:121,safety,review,reviewed,121,"Brought back the `TMemoryRegulator` for now, because it was apparently also used for other things. However, it should be reviewed at a later point if it is really necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14485
https://github.com/root-project/root/pull/14485:121,testability,review,reviewed,121,"Brought back the `TMemoryRegulator` for now, because it was apparently also used for other things. However, it should be reviewed at a later point if it is really necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14485
https://github.com/root-project/root/pull/14490:168,availability,avail,available,168,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:198,availability,error,errors,198,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:325,availability,Failur,Failure,325,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:325,deployability,Fail,Failure,325,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:146,interoperability,share,share,146,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:198,performance,error,errors,198,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:325,performance,Failur,Failure,325,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:168,reliability,availab,available,168,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:325,reliability,Fail,Failure,325,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:95,safety,avoid,avoid,95,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:168,safety,avail,available,168,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:198,safety,error,errors,198,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:338,safety,except,exception,338,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:519,safety,test,test,519,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:168,security,availab,available,168,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:519,testability,test,test,519,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/pull/14490:198,usability,error,errors,198,"Closing this in favour of #14510 , as I imagined the machinery was there for a reason, i.e. to avoid having all branches of the computation graph share the same set of available columns, leading to errors such as this one taken from the CI runs of this PR. ```. [ RUN ] RDataFrameInterface.DefineAliasedColumn. unknown file: Failure. C++ exception with description ""RDataFrame::Define: cannot define column ""newVar"". A column with that name has already been Define'd. Use Redefine to force redefinition."" thrown in the test body. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14490
https://github.com/root-project/root/issues/14491:325,availability,Error,Error,325,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:489,availability,Error,Error,489,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:715,availability,Error,Error,715,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:835,availability,Error,Error,835,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:110,deployability,contain,contains,110,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:1,interoperability,convers,conversionWithChecksum,1,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:81,interoperability,convers,conversionWithChecksum,81,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:325,performance,Error,Error,325,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:489,performance,Error,Error,489,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:715,performance,Error,Error,715,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:835,performance,Error,Error,835,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:325,safety,Error,Error,325,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:489,safety,Error,Error,489,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:715,safety,Error,Error,715,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:835,safety,Error,Error,835,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:193,testability,simpl,simpleread,193,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:193,usability,simpl,simpleread,193,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:325,usability,Error,Error,325,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:489,usability,Error,Error,489,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:715,usability,Error,Error,715,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14491:835,usability,Error,Error,835,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```. root.exe -b -l -q writedata.C+. root.exe -b -l -q simpleread.C+ . ```. ```. ***********************************. * Row * Instance * seg_split *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24. * 0 * 0 * 0 *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. ***********************************. * Row * Instance * seg_unspl *. ***********************************. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24. * 0 * 0 * 1 *. ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14491
https://github.com/root-project/root/issues/14492:30,deployability,build,build,30,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:122,deployability,log,log,122,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:110,integrability,configur,configure,110,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:65,interoperability,plug,plugins,65,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:110,modifiability,configur,configure,110,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:122,safety,log,log,122,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:110,security,configur,configure,110,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:122,security,log,log,122,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:122,testability,log,log,122,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:59,usability,tool,tools,59,Can you upload /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:71,security,ssh,ssh,71,Can you upload maybe a docker image or could give me a bot where I can ssh into?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:14,deployability,log,logs,14,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:40,deployability,log,log,40,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:116,deployability,log,log,116,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:142,deployability,log,log,142,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:218,deployability,log,log,218,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:26,integrability,configur,configure-err,26,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:102,integrability,configur,configure-err,102,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:128,integrability,configur,configure-out,128,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:204,integrability,configur,configure-out,204,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:26,modifiability,configur,configure-err,26,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:102,modifiability,configur,configure-err,102,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:128,modifiability,configur,configure-out,128,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:204,modifiability,configur,configure-out,204,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:14,safety,log,logs,14,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:40,safety,log,log,40,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:116,safety,log,log,116,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:142,safety,log,log,142,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:218,safety,log,log,218,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:14,security,log,logs,14,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:26,security,configur,configure-err,26,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:40,security,log,log,40,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:102,security,configur,configure-err,102,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:116,security,log,log,116,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:128,security,configur,configure-out,128,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:142,security,log,log,142,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:204,security,configur,configure-out,204,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:218,security,log,log,218,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:14,testability,log,logs,14,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:40,testability,log,log,40,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:116,testability,log,log,116,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:142,testability,log,log,142,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:218,testability,log,log,218,@pcanal added logs. [clad-configure-err.log](https://github.com/root-project/root/files/14114750/clad-configure-err.log). [clad-configure-out.log](https://github.com/root-project/root/files/14114751/clad-configure-out.log).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:218,deployability,instal,installation,218,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:383,integrability,pub,public,383,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:447,integrability,pub,public,447,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:406,interoperability,prox,proxy,406,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:37,modifiability,pac,pack,37,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:250,modifiability,pac,packages,250,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:193,safety,compl,completely,193,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:193,security,compl,completely,193,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:315,security,access,access,315,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:348,security,ssh,ssh,348,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages). If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:7,availability,error,error,7,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:29,availability,Error,Error,29,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:86,deployability,version,version,86,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:150,deployability,version,version,150,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:172,deployability,build,build,172,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:182,deployability,instal,installation,182,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:57,integrability,messag,message,57,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:86,integrability,version,version,86,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:150,integrability,version,version,150,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:57,interoperability,messag,message,57,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:86,modifiability,version,version,86,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:150,modifiability,version,version,150,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:7,performance,error,error,7,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:29,performance,Error,Error,29,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:7,safety,error,error,7,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:29,safety,Error,Error,29,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:7,usability,error,error,7,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:29,usability,Error,Error,29,So the error is:. ```. CMake Error at CMakeLists.txt:86 (message):. Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or. installation folder. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:51,deployability,instal,installed,51,I find it hard to believe that there is llvm v2.13 installed somewhere...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:36,deployability,instal,installed,36,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:51,deployability,depend,dependency,51,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:127,deployability,build,builds,127,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:51,integrability,depend,dependency,51,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:51,modifiability,depend,dependency,51,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:51,safety,depend,dependency,51,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:51,testability,depend,dependency,51,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,deployability,instal,installing,49,"well, I guess the exact same setup can be had by installing 14.0-RELEASE and installing the packages I did:. `pkg install autotools bash boost-all ccache cmake davix distcc doas freebsd-doc-en fftw3 fzf git gmake groff gsl krb5 libXft libXpm libbacktrace liblz4 libzmq4 lzma lzmalib neovim pcre pkg py-numba py-numpy py-pandas py-pip py-pytest py-statsmodels py-xarray python ripgrep rsync rust tig tmux valgrind vdt xblas zlib-ng`. I guess you would not need all of those, but there's a full list for completeness sake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:65,deployability,RELEAS,RELEASE,65,"well, I guess the exact same setup can be had by installing 14.0-RELEASE and installing the packages I did:. `pkg install autotools bash boost-all ccache cmake davix distcc doas freebsd-doc-en fftw3 fzf git gmake groff gsl krb5 libXft libXpm libbacktrace liblz4 libzmq4 lzma lzmalib neovim pcre pkg py-numba py-numpy py-pandas py-pip py-pytest py-statsmodels py-xarray python ripgrep rsync rust tig tmux valgrind vdt xblas zlib-ng`. I guess you would not need all of those, but there's a full list for completeness sake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:77,deployability,instal,installing,77,"well, I guess the exact same setup can be had by installing 14.0-RELEASE and installing the packages I did:. `pkg install autotools bash boost-all ccache cmake davix distcc doas freebsd-doc-en fftw3 fzf git gmake groff gsl krb5 libXft libXpm libbacktrace liblz4 libzmq4 lzma lzmalib neovim pcre pkg py-numba py-numpy py-pandas py-pip py-pytest py-statsmodels py-xarray python ripgrep rsync rust tig tmux valgrind vdt xblas zlib-ng`. I guess you would not need all of those, but there's a full list for completeness sake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:114,deployability,instal,install,114,"well, I guess the exact same setup can be had by installing 14.0-RELEASE and installing the packages I did:. `pkg install autotools bash boost-all ccache cmake davix distcc doas freebsd-doc-en fftw3 fzf git gmake groff gsl krb5 libXft libXpm libbacktrace liblz4 libzmq4 lzma lzmalib neovim pcre pkg py-numba py-numpy py-pandas py-pip py-pytest py-statsmodels py-xarray python ripgrep rsync rust tig tmux valgrind vdt xblas zlib-ng`. I guess you would not need all of those, but there's a full list for completeness sake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:92,modifiability,pac,packages,92,"well, I guess the exact same setup can be had by installing 14.0-RELEASE and installing the packages I did:. `pkg install autotools bash boost-all ccache cmake davix distcc doas freebsd-doc-en fftw3 fzf git gmake groff gsl krb5 libXft libXpm libbacktrace liblz4 libzmq4 lzma lzmalib neovim pcre pkg py-numba py-numpy py-pandas py-pip py-pytest py-statsmodels py-xarray python ripgrep rsync rust tig tmux valgrind vdt xblas zlib-ng`. I guess you would not need all of those, but there's a full list for completeness sake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:502,safety,compl,completeness,502,"well, I guess the exact same setup can be had by installing 14.0-RELEASE and installing the packages I did:. `pkg install autotools bash boost-all ccache cmake davix distcc doas freebsd-doc-en fftw3 fzf git gmake groff gsl krb5 libXft libXpm libbacktrace liblz4 libzmq4 lzma lzmalib neovim pcre pkg py-numba py-numpy py-pandas py-pip py-pytest py-statsmodels py-xarray python ripgrep rsync rust tig tmux valgrind vdt xblas zlib-ng`. I guess you would not need all of those, but there's a full list for completeness sake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:502,security,compl,completeness,502,"well, I guess the exact same setup can be had by installing 14.0-RELEASE and installing the packages I did:. `pkg install autotools bash boost-all ccache cmake davix distcc doas freebsd-doc-en fftw3 fzf git gmake groff gsl krb5 libXft libXpm libbacktrace liblz4 libzmq4 lzma lzmalib neovim pcre pkg py-numba py-numpy py-pandas py-pip py-pytest py-statsmodels py-xarray python ripgrep rsync rust tig tmux valgrind vdt xblas zlib-ng`. I guess you would not need all of those, but there's a full list for completeness sake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:68,usability,close,close,68,Is there a recommended docker image that I can start from to get as close as possible to your os?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:173,deployability,releas,releases,173,"docker image no, not really, you'd need a freebsd system to run it on plus I hear docker is not quite stable here. A VM would work fine:. http://ftp.freebsd.org/pub/FreeBSD/releases/VM-IMAGES/14.0-RELEASE/amd64/Latest/. My system is fully zfs, so i guess you could pick one of the images with zfs in the name...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:197,deployability,RELEAS,RELEASE,197,"docker image no, not really, you'd need a freebsd system to run it on plus I hear docker is not quite stable here. A VM would work fine:. http://ftp.freebsd.org/pub/FreeBSD/releases/VM-IMAGES/14.0-RELEASE/amd64/Latest/. My system is fully zfs, so i guess you could pick one of the images with zfs in the name...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:161,integrability,pub,pub,161,"docker image no, not really, you'd need a freebsd system to run it on plus I hear docker is not quite stable here. A VM would work fine:. http://ftp.freebsd.org/pub/FreeBSD/releases/VM-IMAGES/14.0-RELEASE/amd64/Latest/. My system is fully zfs, so i guess you could pick one of the images with zfs in the name...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:29,deployability,version,version,29,"@mkrzewic, I've landed a new version of clad in the master. Can you check if it still breaks for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:29,integrability,version,version,29,"@mkrzewic, I've landed a new version of clad in the master. Can you check if it still breaks for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:29,modifiability,version,version,29,"@mkrzewic, I've landed a new version of clad in the master. Can you check if it still breaks for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,availability,error,error,49,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:153,deployability,Modul,Modules,153,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:265,deployability,version,version,265,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:556,deployability,Stack,Stack,556,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:707,deployability,Modul,Modules,707,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:819,deployability,version,version,819,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1110,deployability,Stack,Stack,1110,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:265,integrability,version,version,265,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:819,integrability,version,version,819,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:428,interoperability,specif,specific,428,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:982,interoperability,specif,specific,982,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:153,modifiability,Modul,Modules,153,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:265,modifiability,version,version,265,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:707,modifiability,Modul,Modules,707,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:819,modifiability,version,version,819,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,performance,error,error,49,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,safety,error,error,49,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:153,safety,Modul,Modules,153,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:707,safety,Modul,Modules,707,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:220,security,polic,policy,220,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:294,security,polic,policies,294,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:353,security,polic,policies,353,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:388,security,polic,policy,388,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:536,security,polic,policy,536,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:774,security,polic,policy,774,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:848,security,polic,policies,848,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:907,security,polic,policies,907,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:942,security,polic,policy,942,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1090,security,polic,policy,1090,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1288,security,Polic,Policy,1288,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1380,security,polic,policy,1380,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1400,security,polic,policy,1400,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1457,security,polic,policy,1457,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1678,security,Polic,Policy,1678,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1770,security,polic,policy,1770,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1790,security,polic,policy,1790,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1847,security,polic,policy,1847,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,usability,error,error,49,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:207,usability,behavi,behavior,207,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:335,usability,behavi,behaviors,335,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:501,usability,behavi,behavior,501,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:761,usability,behavi,behavior,761,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:889,usability,behavi,behaviors,889,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1055,usability,behavi,behavior,1055,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1332,usability,command,command,1332,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1375,usability,help,help-policy,1375,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1438,usability,command,command,1438,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1722,usability,command,command,1722,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1765,usability,help,help-policy,1765,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:1828,usability,command,command,1828,"@vgvassilev thanks, but there is no change, same error. I am also getting cmake warnings:. ```Make Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:6 (cmake_policy): . The OLD behavior for policy CMP0114 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Deprecation Warning at interpreter/llvm-project/cmake/Modules/CMakePolicy.cmake:11 (cmake_policy):. The OLD behavior for policy CMP0116 will be removed from a future version. of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all. policies are deprecated and that a policy should be set to OLD only under. specific short-term circumstances. Projects should be ported to the NEW. behavior and not rely on setting a policy to OLD. Call Stack (most recent call first):. interpreter/llvm-project/llvm/CMakeLists.txt:6 (include). CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:132 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/mkrzewic/src/roottest/CMakeLists.txt:134 (exec_program):. Policy CMP0153 is not set: The exec_program command should not be called. Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy. command to set the policy and suppress this warning. Use execute_process() instead. This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:45,deployability,build,build,45,"@vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. ```. set(LLVM_VERSION_MAJOR 16) . set(LLVM_VERSION_MINOR 0) . set(LLVM_VERSION_PATCH 6) . set(LLVM_VERSION_SUFFIX ) . set(LLVM_PACKAGE_VERSION 2.13.2) . set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . ```. not sure how it gets there, I guess it is generated here:. `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")`. which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:134,deployability,version,version,134,"@vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. ```. set(LLVM_VERSION_MAJOR 16) . set(LLVM_VERSION_MINOR 0) . set(LLVM_VERSION_PATCH 6) . set(LLVM_VERSION_SUFFIX ) . set(LLVM_PACKAGE_VERSION 2.13.2) . set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . ```. not sure how it gets there, I guess it is generated here:. `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")`. which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:635,deployability,build,build,635,"@vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. ```. set(LLVM_VERSION_MAJOR 16) . set(LLVM_VERSION_MINOR 0) . set(LLVM_VERSION_PATCH 6) . set(LLVM_VERSION_SUFFIX ) . set(LLVM_PACKAGE_VERSION 2.13.2) . set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . ```. not sure how it gets there, I guess it is generated here:. `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")`. which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:134,integrability,version,version,134,"@vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. ```. set(LLVM_VERSION_MAJOR 16) . set(LLVM_VERSION_MINOR 0) . set(LLVM_VERSION_PATCH 6) . set(LLVM_VERSION_SUFFIX ) . set(LLVM_PACKAGE_VERSION 2.13.2) . set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . ```. not sure how it gets there, I guess it is generated here:. `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")`. which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:134,modifiability,version,version,134,"@vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. ```. set(LLVM_VERSION_MAJOR 16) . set(LLVM_VERSION_MINOR 0) . set(LLVM_VERSION_PATCH 6) . set(LLVM_VERSION_SUFFIX ) . set(LLVM_PACKAGE_VERSION 2.13.2) . set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . ```. not sure how it gets there, I guess it is generated here:. `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")`. which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:572,modifiability,variab,variable,572,"@vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. ```. set(LLVM_VERSION_MAJOR 16) . set(LLVM_VERSION_MINOR 0) . set(LLVM_VERSION_PATCH 6) . set(LLVM_VERSION_SUFFIX ) . set(LLVM_PACKAGE_VERSION 2.13.2) . set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . ```. not sure how it gets there, I guess it is generated here:. `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")`. which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:47,deployability,build,build,47,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:136,deployability,version,version,136,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:661,deployability,build,build,661,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:793,deployability,configurat,configuration,793,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:136,integrability,version,version,136,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:793,integrability,configur,configuration,793,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:136,modifiability,version,version,136,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:598,modifiability,variab,variable,598,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:793,modifiability,configur,configuration,793,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:793,security,configur,configuration,793,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:822,testability,trace,trace-expand,822,"> @vgvassilev I see that the (generated) file `build/root/interpreter/llvm-project/llvm/lib/cmake/llvm/LLVMConfig.cmake` has this wrong version set in:. > . > ```. > set(LLVM_VERSION_MAJOR 16) . > set(LLVM_VERSION_MINOR 0) . > set(LLVM_VERSION_PATCH 6) . > set(LLVM_VERSION_SUFFIX ) . > set(LLVM_PACKAGE_VERSION 2.13.2) . > set(LLVM_PACKAGE_BUGREPORT https://github.com/llvm/llvm-project/issues/) . > ```. > . > not sure how it gets there, I guess it is generated here: `interpreter/llvm-project/clang/CMakeLists.txt: set(PACKAGE_VERSION ""${LLVM_PACKAGE_VERSION}"")` which would mean that the cmake variable LLVM_PACKAGE_VERSION is set to this value during llvm build somewhere. That probably means that somehow our fork of clang finds your system llvm. Can you attach the output of your cmake configuration called with `--trace-expand 2>&1`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:66,interoperability,share,share,66,"> @vgvassilev gladly, but it's a 160MB file, you sure? If you can share it via google drive or something similar that also works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:140,deployability,version,version,140,"https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link. the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:140,integrability,version,version,140,"https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link. the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:140,modifiability,version,version,140,"https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link. the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:141,deployability,version,version,141,"> https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there... Sent an access request.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:141,integrability,version,version,141,"> https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there... Sent an access request.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:141,modifiability,version,version,141,"> https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there... Sent an access request.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:188,security,access,access,188,"> https://drive.google.com/file/d/152eH9B5HGe75IJgZxmnY7WOHfnokgCnq/view?usp=drive_link the 2.13.2 number seems special, it is the freetype2 version, but pops up here and there... Sent an access request.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:140,availability,down,downgrade,140,> set(LLVM_PACKAGE_VERSION 2.13.2). That makes no sense. Could that be a bug in cmake? Which version of cmake do you use? Could you upgrade/downgrade and see if we can still reproduce the problem?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:93,deployability,version,version,93,> set(LLVM_PACKAGE_VERSION 2.13.2). That makes no sense. Could that be a bug in cmake? Which version of cmake do you use? Could you upgrade/downgrade and see if we can still reproduce the problem?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:132,deployability,upgrad,upgrade,132,> set(LLVM_PACKAGE_VERSION 2.13.2). That makes no sense. Could that be a bug in cmake? Which version of cmake do you use? Could you upgrade/downgrade and see if we can still reproduce the problem?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:93,integrability,version,version,93,> set(LLVM_PACKAGE_VERSION 2.13.2). That makes no sense. Could that be a bug in cmake? Which version of cmake do you use? Could you upgrade/downgrade and see if we can still reproduce the problem?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:93,modifiability,version,version,93,> set(LLVM_PACKAGE_VERSION 2.13.2). That makes no sense. Could that be a bug in cmake? Which version of cmake do you use? Could you upgrade/downgrade and see if we can still reproduce the problem?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:132,modifiability,upgrad,upgrade,132,> set(LLVM_PACKAGE_VERSION 2.13.2). That makes no sense. Could that be a bug in cmake? Which version of cmake do you use? Could you upgrade/downgrade and see if we can still reproduce the problem?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:39,deployability,build,build,39,"i'm on cmake 3.28.1, i'll see if I can build a different version",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:57,deployability,version,version,57,"i'm on cmake 3.28.1, i'll see if I can build a different version",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:57,integrability,version,version,57,"i'm on cmake 3.28.1, i'll see if I can build a different version",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:57,modifiability,version,version,57,"i'm on cmake 3.28.1, i'll see if I can build a different version",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,deployability,version,version,49,"A lot changed in ROOT master, including the clad version. Closing the issue. Feel free to re-open if this is still an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,integrability,version,version,49,"A lot changed in ROOT master, including the clad version. Closing the issue. Feel free to re-open if this is still an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/issues/14492:49,modifiability,version,version,49,"A lot changed in ROOT master, including the clad version. Closing the issue. Feel free to re-open if this is still an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14492
https://github.com/root-project/root/pull/14494:12,deployability,updat,update,12,Just had to update the PR because I forgot to remove one line of include.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14494
https://github.com/root-project/root/pull/14494:12,safety,updat,update,12,Just had to update the PR because I forgot to remove one line of include.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14494
https://github.com/root-project/root/pull/14494:12,security,updat,update,12,Just had to update the PR because I forgot to remove one line of include.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14494
https://github.com/root-project/root/pull/14495:30,deployability,build,build,30,"I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:69,deployability,build,builds,69,"I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:51,safety,avoid,avoid,51,"I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:32,deployability,build,build,32,"> I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:71,deployability,build,builds,71,"> I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:234,deployability,patch,patches,234,"> I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:53,safety,avoid,avoid,53,"> I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:234,safety,patch,patches,234,"> I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:234,security,patch,patches,234,"> I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:359,availability,state,state,359,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:34,deployability,build,build,34,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:73,deployability,build,builds,73,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:242,deployability,patch,patches,242,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:418,deployability,build,builds,418,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:359,integrability,state,state,359,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:55,safety,avoid,avoid,55,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:242,safety,patch,patches,242,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:407,safety,avoid,avoid,407,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:242,security,patch,patches,242,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:347,security,hash,hash,347,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:269,usability,workflow,workflow,269,"> > I believe you need the ""clean build"" label here to avoid incremental builds tripping over the old pcms... > . > I am lost -- was only triggering a rebuild enough? If so, then I find it hard to believe we cannot compile root without these patches. No you need a new workflow run (just push an empty commit or amend the last to get a new commit hash) - the state of labels is recorded at the beginning to avoid some builds running with different settings than others",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:34,deployability,patch,patch,34,"@hahnjo, according to our ci this patch seems fine. . @smuzaffar, can we run this PR against cmssw? cc: @ChuanqiXu9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:34,safety,patch,patch,34,"@hahnjo, according to our ci this patch seems fine. . @smuzaffar, can we run this PR against cmssw? cc: @ChuanqiXu9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:34,security,patch,patch,34,"@hahnjo, according to our ci this patch seems fine. . @smuzaffar, can we run this PR against cmssw? cc: @ChuanqiXu9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:36,deployability,patch,patch,36,"> @hahnjo, according to our ci this patch seems fine. IIUC `LoadExternalSpecializationsLazily` is still off by default, right? But good that it passes now in this off-by-default mode :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:60,energy efficiency,Load,LoadExternalSpecializationsLazily,60,"> @hahnjo, according to our ci this patch seems fine. IIUC `LoadExternalSpecializationsLazily` is still off by default, right? But good that it passes now in this off-by-default mode :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:60,performance,Load,LoadExternalSpecializationsLazily,60,"> @hahnjo, according to our ci this patch seems fine. IIUC `LoadExternalSpecializationsLazily` is still off by default, right? But good that it passes now in this off-by-default mode :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:36,safety,patch,patch,36,"> @hahnjo, according to our ci this patch seems fine. IIUC `LoadExternalSpecializationsLazily` is still off by default, right? But good that it passes now in this off-by-default mode :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:36,security,patch,patch,36,"> @hahnjo, according to our ci this patch seems fine. IIUC `LoadExternalSpecializationsLazily` is still off by default, right? But good that it passes now in this off-by-default mode :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:170,deployability,build,builds,170,"> @smuzaffar, can we run this PR against cmssw? CMSSW tests are running via https://github.com/cms-sw/root/pull/198 (note that cmssw tests are running for non-CXXMODULES builds)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:54,safety,test,tests,54,"> @smuzaffar, can we run this PR against cmssw? CMSSW tests are running via https://github.com/cms-sw/root/pull/198 (note that cmssw tests are running for non-CXXMODULES builds)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:133,safety,test,tests,133,"> @smuzaffar, can we run this PR against cmssw? CMSSW tests are running via https://github.com/cms-sw/root/pull/198 (note that cmssw tests are running for non-CXXMODULES builds)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:54,testability,test,tests,54,"> @smuzaffar, can we run this PR against cmssw? CMSSW tests are running via https://github.com/cms-sw/root/pull/198 (note that cmssw tests are running for non-CXXMODULES builds)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:133,testability,test,tests,133,"> @smuzaffar, can we run this PR against cmssw? CMSSW tests are running via https://github.com/cms-sw/root/pull/198 (note that cmssw tests are running for non-CXXMODULES builds)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:192,deployability,build,builds,192,"> > @smuzaffar, can we run this PR against cmssw? > . > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). @smuzaffar, can you interpret the results?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:62,safety,test,tests,62,"> > @smuzaffar, can we run this PR against cmssw? > . > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). @smuzaffar, can you interpret the results?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:155,safety,test,tests,155,"> > @smuzaffar, can we run this PR against cmssw? > . > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). @smuzaffar, can you interpret the results?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:62,testability,test,tests,62,"> > @smuzaffar, can we run this PR against cmssw? > . > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). @smuzaffar, can you interpret the results?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:155,testability,test,tests,155,"> > @smuzaffar, can we run this PR against cmssw? > . > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). @smuzaffar, can you interpret the results?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:296,availability,failur,failure,296,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:204,deployability,build,builds,204,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:296,deployability,fail,failure,296,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:296,performance,failur,failure,296,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:296,reliability,fail,failure,296,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:74,safety,test,tests,74,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:167,safety,test,tests,167,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:268,safety,test,tests,268,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:291,safety,test,test,291,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:74,testability,test,tests,74,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:167,testability,test,tests,167,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:268,testability,test,tests,268,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:286,testability,unit,unit,286,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:291,testability,test,test,291,"> > > @smuzaffar, can we run this PR against cmssw? > > . > > . > > CMSSW tests are running via [cms-sw#198](https://github.com/cms-sw/root/pull/198) (note that cmssw tests are running for non-CXXMODULES builds). > . > @smuzaffar, can you interpret the results? cmssw tests looks good. unit test failure is not related to root's change",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:65,availability,error,errors,65,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:87,availability,error,errors,87,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:113,availability,error,errors,113,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:127,availability,sli,slightly,127,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:39,deployability,patch,patch,39,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:76,deployability,build,build,76,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:65,performance,error,errors,65,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:82,performance,time,time,82,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:87,performance,error,errors,87,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:113,performance,error,errors,113,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:263,performance,cach,cache,263,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:127,reliability,sli,slightly,127,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:39,safety,patch,patch,39,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:65,safety,error,errors,65,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:87,safety,error,errors,87,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:113,safety,error,errors,113,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:39,security,patch,patch,39,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:65,usability,error,errors,65,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:87,usability,error,errors,87,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:113,usability,error,errors,113,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:67,availability,error,errors,67,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:89,availability,error,errors,89,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:115,availability,error,errors,115,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:129,availability,sli,slightly,129,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:41,deployability,patch,patch,41,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:78,deployability,build,build,78,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:157,deployability,fail,fails,157,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:177,deployability,build,build,177,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:200,deployability,stage,stage,200,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:247,deployability,build,build,247,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:257,deployability,modul,modules,257,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:288,deployability,modul,modules,288,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:299,deployability,depend,dependent,299,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:375,deployability,log,logic,375,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:280,energy efficiency,load,loading,280,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:367,energy efficiency,load,loading,367,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:299,integrability,depend,dependent,299,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:257,modifiability,modul,modules,257,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:288,modifiability,modul,modules,288,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:299,modifiability,depend,dependent,299,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:67,performance,error,errors,67,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:84,performance,time,time,84,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:89,performance,error,errors,89,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:115,performance,error,errors,115,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:280,performance,load,loading,280,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:367,performance,load,loading,367,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:129,reliability,sli,slightly,129,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:157,reliability,fail,fails,157,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:41,safety,patch,patch,41,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:67,safety,error,errors,67,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:89,safety,error,errors,89,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:115,safety,error,errors,115,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:257,safety,modul,modules,257,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:288,safety,modul,modules,288,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:299,safety,depend,dependent,299,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:375,safety,log,logic,375,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:41,security,patch,patch,41,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:375,security,log,logic,375,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:299,testability,depend,dependent,299,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:375,testability,log,logic,375,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:67,usability,error,errors,67,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:89,usability,error,errors,89,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:115,usability,error,errors,115,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:238,usability,tool,tools,238,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:69,availability,error,errors,69,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:91,availability,error,errors,91,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:117,availability,error,errors,117,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:131,availability,sli,slightly,131,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:464,availability,failur,failures,464,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:43,deployability,patch,patch,43,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:80,deployability,build,build,80,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:165,deployability,fail,fails,165,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:185,deployability,build,build,185,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:208,deployability,stage,stage,208,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:255,deployability,build,build,255,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:265,deployability,modul,modules,265,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:296,deployability,modul,modules,296,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:307,deployability,depend,dependent,307,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:383,deployability,log,logic,383,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:464,deployability,fail,failures,464,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:547,deployability,updat,update,547,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:803,deployability,build,build,803,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:957,deployability,log,logic,957,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:974,deployability,build,build,974,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:288,energy efficiency,load,loading,288,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:375,energy efficiency,load,loading,375,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:307,integrability,depend,dependent,307,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:265,modifiability,modul,modules,265,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:296,modifiability,modul,modules,296,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:307,modifiability,depend,dependent,307,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:69,performance,error,errors,69,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:86,performance,time,time,86,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:91,performance,error,errors,91,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:117,performance,error,errors,117,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:288,performance,load,loading,288,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:375,performance,load,loading,375,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:464,performance,failur,failures,464,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:980,performance,time,time,980,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:131,reliability,sli,slightly,131,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:165,reliability,fail,fails,165,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:464,reliability,fail,failures,464,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:43,safety,patch,patch,43,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:69,safety,error,errors,69,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:91,safety,error,errors,91,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:117,safety,error,errors,117,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:265,safety,modul,modules,265,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:296,safety,modul,modules,296,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:307,safety,depend,dependent,307,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:383,safety,log,logic,383,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:547,safety,updat,update,547,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:957,safety,log,logic,957,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1047,safety,test,test,1047,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:43,security,patch,patch,43,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:383,security,log,logic,383,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:547,security,updat,update,547,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:957,security,log,logic,957,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:307,testability,depend,dependent,307,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:383,testability,log,logic,383,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:957,testability,log,logic,957,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1047,testability,test,test,1047,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:69,usability,error,errors,69,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:91,usability,error,errors,91,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:117,usability,error,errors,117,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:246,usability,tool,tools,246,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > . > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566. . Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:71,availability,error,errors,71,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:93,availability,error,errors,93,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:119,availability,error,errors,119,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:133,availability,sli,slightly,133,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:483,availability,failur,failures,483,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:45,deployability,patch,patch,45,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:82,deployability,build,build,82,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:177,deployability,fail,fails,177,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:197,deployability,build,build,197,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:220,deployability,stage,stage,220,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:267,deployability,build,build,267,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:277,deployability,modul,modules,277,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:308,deployability,modul,modules,308,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:319,deployability,depend,dependent,319,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:395,deployability,log,logic,395,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:483,deployability,fail,failures,483,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:566,deployability,updat,update,566,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:876,deployability,build,build,876,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1030,deployability,log,logic,1030,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1047,deployability,build,build,1047,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:300,energy efficiency,load,loading,300,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:387,energy efficiency,load,loading,387,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:319,integrability,depend,dependent,319,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:277,modifiability,modul,modules,277,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:308,modifiability,modul,modules,308,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:319,modifiability,depend,dependent,319,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:71,performance,error,errors,71,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:88,performance,time,time,88,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:93,performance,error,errors,93,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:119,performance,error,errors,119,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:300,performance,load,loading,300,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:387,performance,load,loading,387,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:483,performance,failur,failures,483,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1053,performance,time,time,1053,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:133,reliability,sli,slightly,133,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:177,reliability,fail,fails,177,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:483,reliability,fail,failures,483,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:45,safety,patch,patch,45,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:71,safety,error,errors,71,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:93,safety,error,errors,93,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:119,safety,error,errors,119,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:277,safety,modul,modules,277,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:308,safety,modul,modules,308,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:319,safety,depend,dependent,319,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:395,safety,log,logic,395,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:566,safety,updat,update,566,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1030,safety,log,logic,1030,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1120,safety,test,test,1120,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:45,security,patch,patch,45,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:395,security,log,logic,395,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:566,security,updat,update,566,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1030,security,log,logic,1030,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:319,testability,depend,dependent,319,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:395,testability,log,logic,395,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1030,testability,log,logic,1030,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1120,testability,test,test,1120,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:71,usability,error,errors,71,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:93,usability,error,errors,93,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:119,usability,error,errors,119,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:258,usability,tool,tools,258,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > . > > . > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > . > Got it. Thanks. > . > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > . > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > . > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:73,availability,error,errors,73,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:95,availability,error,errors,95,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:121,availability,error,errors,121,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:135,availability,sli,slightly,135,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:499,availability,failur,failures,499,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:47,deployability,patch,patch,47,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:84,deployability,build,build,84,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:185,deployability,fail,fails,185,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:205,deployability,build,build,205,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:228,deployability,stage,stage,228,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:275,deployability,build,build,275,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:285,deployability,modul,modules,285,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:316,deployability,modul,modules,316,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:327,deployability,depend,dependent,327,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:403,deployability,log,logic,403,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:499,deployability,fail,failures,499,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:582,deployability,updat,update,582,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:888,deployability,build,build,888,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1042,deployability,log,logic,1042,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1059,deployability,build,build,1059,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1510,deployability,patch,patch,1510,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:308,energy efficiency,load,loading,308,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:395,energy efficiency,load,loading,395,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:327,integrability,depend,dependent,327,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:285,modifiability,modul,modules,285,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:316,modifiability,modul,modules,316,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:327,modifiability,depend,dependent,327,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1491,modifiability,scal,scalability,1491,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:73,performance,error,errors,73,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:90,performance,time,time,90,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:95,performance,error,errors,95,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:121,performance,error,errors,121,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:308,performance,load,loading,308,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:395,performance,load,loading,395,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:499,performance,failur,failures,499,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1065,performance,time,time,1065,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1371,performance,perform,performance,1371,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1491,performance,scalab,scalability,1491,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:135,reliability,sli,slightly,135,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:185,reliability,fail,fails,185,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:499,reliability,fail,failures,499,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:47,safety,patch,patch,47,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:73,safety,error,errors,73,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:95,safety,error,errors,95,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:121,safety,error,errors,121,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:285,safety,modul,modules,285,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:316,safety,modul,modules,316,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:327,safety,depend,dependent,327,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:403,safety,log,logic,403,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:582,safety,updat,update,582,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1042,safety,log,logic,1042,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1132,safety,test,test,1132,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1327,safety,test,tests,1327,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1482,safety,test,test,1482,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1510,safety,patch,patch,1510,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:47,security,patch,patch,47,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:403,security,log,logic,403,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:582,security,updat,update,582,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1042,security,log,logic,1042,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1510,security,patch,patch,1510,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:327,testability,depend,dependent,327,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:403,testability,log,logic,403,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1042,testability,log,logic,1042,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1132,testability,test,test,1132,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1327,testability,test,tests,1327,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1482,testability,test,test,1482,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:73,usability,error,errors,73,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:95,usability,error,errors,95,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:121,usability,error,errors,121,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:266,usability,tool,tools,266,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:1371,usability,perform,performance,1371,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. > > > . > > > . > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. > > . > > . > > Got it. Thanks. > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4). > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566). > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. > . > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:161,energy efficiency,reduc,reduce,161,"@vgvassilev Great! For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:23,performance,perform,performances,23,"@vgvassilev Great! For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:172,performance,time,time,172,"@vgvassilev Great! For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:200,security,Hash,Hash,200,"@vgvassilev Great! For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:23,usability,perform,performances,23,"@vgvassilev Great! For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:169,energy efficiency,reduc,reduce,169,"> @vgvassilev Great! > . > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. Do you mean this one: https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:31,performance,perform,performances,31,"> @vgvassilev Great! > . > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. Do you mean this one: https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:180,performance,time,time,180,"> @vgvassilev Great! > . > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. Do you mean this one: https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:208,security,Hash,Hash,208,"> @vgvassilev Great! > . > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. Do you mean this one: https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:31,usability,perform,performances,31,"> @vgvassilev Great! > . > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. Do you mean this one: https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:27,deployability,fail,fails,27,"@vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:36,deployability,build,build,36,"@vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:27,reliability,fail,fails,27,"@vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:169,energy efficiency,reduc,reduce,169,"> > @vgvassilev Great! > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > . > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? Yes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:31,performance,perform,performances,31,"> > @vgvassilev Great! > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > . > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? Yes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:180,performance,time,time,180,"> > @vgvassilev Great! > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > . > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? Yes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:208,security,Hash,Hash,208,"> > @vgvassilev Great! > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > . > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? Yes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:31,usability,perform,performances,31,"> > @vgvassilev Great! > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > . > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? Yes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:29,deployability,fail,fails,29,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:38,deployability,build,build,38,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:171,deployability,Fail,Failed,171,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:324,deployability,build,build,324,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:348,deployability,version,version,348,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:348,integrability,version,version,348,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:348,modifiability,version,version,348,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:29,reliability,fail,fails,29,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:171,reliability,Fail,Failed,171,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:225,security,auth,auth,225,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:340,testability,assert,asserts,340,"> @vgvassilev FYI `mac14arm` fails to build the dictionary for `TMVAUtils`, with a crash in `cling::DeclCollector::HandleInterestingDecl`... Ha, ok, until now I only saw `Failed to open the S3 connection: You must provide an auth secret.`. That might be ""just"" missing a `PushTransactionRAII` on our side. Is there a way to build a debug + asserts version of that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:173,energy efficiency,reduc,reduce,173,"> > > @vgvassilev Great! > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > . > > . > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > . > Yes. @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:35,performance,perform,performances,35,"> > > @vgvassilev Great! > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > . > > . > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > . > Yes. @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:184,performance,time,time,184,"> > > @vgvassilev Great! > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > . > > . > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > . > Yes. @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:212,security,Hash,Hash,212,"> > > @vgvassilev Great! > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > . > > . > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > . > Yes. @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:35,usability,perform,performances,35,"> > > @vgvassilev Great! > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > . > > . > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > . > Yes. @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:177,energy efficiency,reduc,reduce,177,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:643,modifiability,refact,refactor,643,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:39,performance,perform,performances,39,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:188,performance,time,time,188,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:643,performance,refactor,refactor,643,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:216,security,Hash,Hash,216,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:589,security,access,accesses,589,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:39,usability,perform,performances,39,"> > > > @vgvassilev Great! > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. > > > . > > > . > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ? > > . > > . > > Yes. > . > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes? Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:42,performance,Perform,Performance,42,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). |--------|----------|:-------------:|------:|. user time: | 0.53s | 0.50s| 0.49s |. |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:107,performance,time,time,107,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). |--------|----------|:-------------:|------:|. user time: | 0.53s | 0.50s| 0.49s |. |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:356,performance,time,time,356,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). |--------|----------|:-------------:|------:|. user time: | 0.53s | 0.50s| 0.49s |. |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:522,safety,test,test,522,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). |--------|----------|:-------------:|------:|. user time: | 0.53s | 0.50s| 0.49s |. |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:522,testability,test,test,522,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). |--------|----------|:-------------:|------:|. user time: | 0.53s | 0.50s| 0.49s |. |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:42,usability,Perform,Performance,42,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). |--------|----------|:-------------:|------:|. user time: | 0.53s | 0.50s| 0.49s |. |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:351,usability,user,user,351,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). |--------|----------|:-------------:|------:|. user time: | 0.53s | 0.50s| 0.49s |. |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:519,availability,sli,slightly,519,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:44,performance,Perform,Performance,44,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:162,performance,time,time,162,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:364,performance,time,time,364,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:573,performance,overhead,overhead,573,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:621,performance,Time,Time,621,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:519,reliability,sli,slightly,519,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:128,safety,test,test,128,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:727,safety,test,test,727,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:601,security,hash,hash,601,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:128,testability,test,test,128,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:727,testability,test,test,727,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:44,usability,Perform,Performance,44,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14495:359,usability,user,user,359,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. > . > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5). > user time:	0.53s	0.50s	0.49s. > rss:	309436	310196	310192. > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > . > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14495
https://github.com/root-project/root/pull/14497:99,deployability,Updat,UpdateSchema,99,Can we maybe call it `Init` since it's only called once in the beginning? (later calls go through `UpdateSchema`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14497
https://github.com/root-project/root/pull/14497:99,safety,Updat,UpdateSchema,99,Can we maybe call it `Init` since it's only called once in the beginning? (later calls go through `UpdateSchema`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14497
https://github.com/root-project/root/pull/14497:99,security,Updat,UpdateSchema,99,Can we maybe call it `Init` since it's only called once in the beginning? (later calls go through `UpdateSchema`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14497
https://github.com/root-project/root/pull/14500:29,safety,test,testing,29,@vepadulano . We do not have testing which can detect title change of the painted axis. This need to be implemented in roottest. . There will be student starting in April which will do exactly this - for new web graphics. Once it is there - we could also provide similar functionality for classical graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14500
https://github.com/root-project/root/pull/14500:47,safety,detect,detect,47,@vepadulano . We do not have testing which can detect title change of the painted axis. This need to be implemented in roottest. . There will be student starting in April which will do exactly this - for new web graphics. Once it is there - we could also provide similar functionality for classical graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14500
https://github.com/root-project/root/pull/14500:47,security,detect,detect,47,@vepadulano . We do not have testing which can detect title change of the painted axis. This need to be implemented in roottest. . There will be student starting in April which will do exactly this - for new web graphics. Once it is there - we could also provide similar functionality for classical graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14500
https://github.com/root-project/root/pull/14500:29,testability,test,testing,29,@vepadulano . We do not have testing which can detect title change of the painted axis. This need to be implemented in roottest. . There will be student starting in April which will do exactly this - for new web graphics. Once it is there - we could also provide similar functionality for classical graphics.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14500
https://github.com/root-project/root/pull/14502:333,interoperability,conflict,conflict,333,"Draft because of open questions:. * In a separate header or move to `RPageStorage.hxx`? * Class and namespace? I think we said `Internal`... * More tests or other places this needs to be hooked up? I don't think we want a factory method to create an `RNTupleWriter` with a `RPageNullSink`, it's for internal testing only. Also, will conflict with https://github.com/root-project/root/pull/14497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:148,safety,test,tests,148,"Draft because of open questions:. * In a separate header or move to `RPageStorage.hxx`? * Class and namespace? I think we said `Internal`... * More tests or other places this needs to be hooked up? I don't think we want a factory method to create an `RNTupleWriter` with a `RPageNullSink`, it's for internal testing only. Also, will conflict with https://github.com/root-project/root/pull/14497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:308,safety,test,testing,308,"Draft because of open questions:. * In a separate header or move to `RPageStorage.hxx`? * Class and namespace? I think we said `Internal`... * More tests or other places this needs to be hooked up? I don't think we want a factory method to create an `RNTupleWriter` with a `RPageNullSink`, it's for internal testing only. Also, will conflict with https://github.com/root-project/root/pull/14497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:148,testability,test,tests,148,"Draft because of open questions:. * In a separate header or move to `RPageStorage.hxx`? * Class and namespace? I think we said `Internal`... * More tests or other places this needs to be hooked up? I don't think we want a factory method to create an `RNTupleWriter` with a `RPageNullSink`, it's for internal testing only. Also, will conflict with https://github.com/root-project/root/pull/14497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:187,testability,hook,hooked,187,"Draft because of open questions:. * In a separate header or move to `RPageStorage.hxx`? * Class and namespace? I think we said `Internal`... * More tests or other places this needs to be hooked up? I don't think we want a factory method to create an `RNTupleWriter` with a `RPageNullSink`, it's for internal testing only. Also, will conflict with https://github.com/root-project/root/pull/14497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:308,testability,test,testing,308,"Draft because of open questions:. * In a separate header or move to `RPageStorage.hxx`? * Class and namespace? I think we said `Internal`... * More tests or other places this needs to be hooked up? I don't think we want a factory method to create an `RNTupleWriter` with a `RPageNullSink`, it's for internal testing only. Also, will conflict with https://github.com/root-project/root/pull/14497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:288,deployability,updat,update,288,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:498,deployability,build,build,498,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:471,modifiability,maintain,maintain,471,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:459,performance,overhead,overhead,459,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:288,safety,updat,update,288,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:299,safety,test,test,299,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:436,safety,avoid,avoids,436,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:471,safety,maintain,maintain,471,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:288,security,updat,update,288,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/pull/14502:299,testability,test,test,299,"@jblomer. > My suggestion would be: own header, Internal namespace. ok, left as is. > and a free factory method in the Internal namespace. With https://github.com/root-project/root/pull/14521, we get `ROOT::Experimental::Internal::CreateRNTupleWriter` - is that sufficient? (I'll need to update the test one that PR is merged). @pcanal. > This is related but different from writing into the file `/dev/null` :). Indeed, `RPageNullSink` avoids the bookkeeping overhead to maintain column ranges and build descriptors (as well as their serialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14502
https://github.com/root-project/root/issues/14504:1904,availability,operat,operator,1904,"_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:3631,availability,operat,operator,3631,"onOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Trans",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:5315,availability,Error,Error,5315,"ibCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:951,energy efficiency,alloc,allocator,951,"If you run it with:. `valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe -l -b -q test.cpp+`. you'll get:. ```. ==721499== Invalid read of size 4. ==721499== at 0x4AF2199: TList::Clear(char const*) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF26D4: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF287C: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:1211,energy efficiency,alloc,allocator,1211,"(char const*) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF26D4: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF287C: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:2593,energy efficiency,alloc,allocator,2593,"r::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:2853,energy efficiency,alloc,allocator,2853,"f size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:3594,energy efficiency,alloc,alloc,3594,"cator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:4322,energy efficiency,alloc,allocator,4322,"= by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:4582,energy efficiency,alloc,allocator,4582,"ibCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:5315,performance,Error,Error,5315,"ibCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:114,safety,test,test,114,"If you run it with:. `valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe -l -b -q test.cpp+`. you'll get:. ```. ==721499== Invalid read of size 4. ==721499== at 0x4AF2199: TList::Clear(char const*) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF26D4: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF287C: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:3848,safety,test,test,3848,"d::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:5315,safety,Error,Error,5315,"ibCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:5350,security,access,accessing,5350,"ibCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:114,testability,test,test,114,"If you run it with:. `valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe -l -b -q test.cpp+`. you'll get:. ```. ==721499== Invalid read of size 4. ==721499== at 0x4AF2199: TList::Clear(char const*) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF26D4: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF287C: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:3848,testability,test,test,3848,"d::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:211,usability,Clear,Clear,211,"If you run it with:. `valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe -l -b -q test.cpp+`. you'll get:. ```. ==721499== Invalid read of size 4. ==721499== at 0x4AF2199: TList::Clear(char const*) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF26D4: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x4AF287C: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd. ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:5315,usability,Error,Error,5315,"ibCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:5332,usability,Clear,Clear,5332,"ibCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== Block was alloc'd at. ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04). ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so). ==721499== by 0x2729F039: ??? ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04). ==721499== . Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:129,reliability,pra,practice,129,"I conclude that manually deleting the objects is not ok, even if the list is not the owner of the objects. Am I missing any good practice here? (edit: I misread the `nodelete` flag in the `TList::Clear`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:196,usability,Clear,Clear,196,"I conclude that manually deleting the objects is not ok, even if the list is not the owner of the objects. Am I missing any good practice here? (edit: I misread the `nodelete` flag in the `TList::Clear`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:190,availability,operat,operations,190,"If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:243,availability,operat,operation,243,"If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:38,deployability,contain,contained,38,"If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:213,usability,Clear,Clear,213,"If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:18,performance,content,content,18,Maybe setting the content of the dangling TList pointer to NULL just after delete helps ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:82,usability,help,helps,82,Maybe setting the content of the dangling TList pointer to NULL just after delete helps ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:192,availability,operat,operations,192,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ? It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:245,availability,operat,operation,245,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ? It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:40,deployability,contain,contained,40,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ? It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:551,performance,content,content,551,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ? It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:774,performance,time,time,774,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ? It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:215,usability,Clear,Clear,215,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ? It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:615,usability,help,helps,615,"> If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ). Ok, that makes sense, and indeed, it is impossible to do the other way around (i.e. `delete obj` before and `Remove(obj)` from the list after) as there is no obvious way to know if the object has been deleted. So, there is little you can do from the ROOT side. > Maybe setting the content of the dangling TList pointer to NULL just after delete helps ? It would break the recursive structure of the `deleteTCollections` function, which we'll need to rethink. . Thanks for the clarifications and for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:147,deployability,version,versions,147,"We are seeing similar issues as a regression when writing ROOT files with 6.30 vs 6.28 (using AIDASoft/podio), and then opening them in older ROOT versions. We're still narrowing this into a reproducer but it seems like something changed in this context to make this issue appear now, with 6.30... File written by 6.30, read by 6.24. ![York_6p30_File-gb9kj5ui57yffrq1qwzj75ymah.png](https://github.com/root-project/root/assets/4656391/d33a096d-1b42-4dc4-b9e9-fcfdb40bac07). File written by 6.28, read by 6.24. ![York_6p28_File-5c8tqx5ofp8tjdo7fk1518r6oy.png](https://github.com/root-project/root/assets/4656391/d9f89ac4-d4e8-4684-9679-5d3491f0f2d5).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:147,integrability,version,versions,147,"We are seeing similar issues as a regression when writing ROOT files with 6.30 vs 6.28 (using AIDASoft/podio), and then opening them in older ROOT versions. We're still narrowing this into a reproducer but it seems like something changed in this context to make this issue appear now, with 6.30... File written by 6.30, read by 6.24. ![York_6p30_File-gb9kj5ui57yffrq1qwzj75ymah.png](https://github.com/root-project/root/assets/4656391/d33a096d-1b42-4dc4-b9e9-fcfdb40bac07). File written by 6.28, read by 6.24. ![York_6p28_File-5c8tqx5ofp8tjdo7fk1518r6oy.png](https://github.com/root-project/root/assets/4656391/d9f89ac4-d4e8-4684-9679-5d3491f0f2d5).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:147,modifiability,version,versions,147,"We are seeing similar issues as a regression when writing ROOT files with 6.30 vs 6.28 (using AIDASoft/podio), and then opening them in older ROOT versions. We're still narrowing this into a reproducer but it seems like something changed in this context to make this issue appear now, with 6.30... File written by 6.30, read by 6.24. ![York_6p30_File-gb9kj5ui57yffrq1qwzj75ymah.png](https://github.com/root-project/root/assets/4656391/d33a096d-1b42-4dc4-b9e9-fcfdb40bac07). File written by 6.28, read by 6.24. ![York_6p28_File-5c8tqx5ofp8tjdo7fk1518r6oy.png](https://github.com/root-project/root/assets/4656391/d9f89ac4-d4e8-4684-9679-5d3491f0f2d5).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:34,testability,regress,regression,34,"We are seeing similar issues as a regression when writing ROOT files with 6.30 vs 6.28 (using AIDASoft/podio), and then opening them in older ROOT versions. We're still narrowing this into a reproducer but it seems like something changed in this context to make this issue appear now, with 6.30... File written by 6.30, read by 6.24. ![York_6p30_File-gb9kj5ui57yffrq1qwzj75ymah.png](https://github.com/root-project/root/assets/4656391/d33a096d-1b42-4dc4-b9e9-fcfdb40bac07). File written by 6.28, read by 6.24. ![York_6p28_File-5c8tqx5ofp8tjdo7fk1518r6oy.png](https://github.com/root-project/root/assets/4656391/d9f89ac4-d4e8-4684-9679-5d3491f0f2d5).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:246,testability,context,context,246,"We are seeing similar issues as a regression when writing ROOT files with 6.30 vs 6.28 (using AIDASoft/podio), and then opening them in older ROOT versions. We're still narrowing this into a reproducer but it seems like something changed in this context to make this issue appear now, with 6.30... File written by 6.30, read by 6.24. ![York_6p30_File-gb9kj5ui57yffrq1qwzj75ymah.png](https://github.com/root-project/root/assets/4656391/d33a096d-1b42-4dc4-b9e9-fcfdb40bac07). File written by 6.28, read by 6.24. ![York_6p28_File-5c8tqx5ofp8tjdo7fk1518r6oy.png](https://github.com/root-project/root/assets/4656391/d9f89ac4-d4e8-4684-9679-5d3491f0f2d5).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:138,deployability,stack,stack,138,"No, unfortunately I haven't found the time yet for that one :-) It's been hard to write a reproducer that isn't ""take our entire software stack and run a full simulation"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:38,performance,time,time,38,"No, unfortunately I haven't found the time yet for that one :-) It's been hard to write a reproducer that isn't ""take our entire software stack and run a full simulation"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/issues/14504:159,testability,simul,simulation,159,"No, unfortunately I haven't found the time yet for that one :-) It's been hard to write a reproducer that isn't ""take our entire software stack and run a full simulation"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14504
https://github.com/root-project/root/pull/14506:119,availability,error,error,119,Thank you for the PR. . I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:119,performance,error,error,119,Thank you for the PR. . I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:119,safety,error,error,119,Thank you for the PR. . I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:119,usability,error,error,119,Thank you for the PR. . I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:119,availability,error,error,119,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:196,availability,error,error,196,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:470,availability,error,error,470,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:581,availability,state,stated,581,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:476,integrability,messag,messages,476,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:581,integrability,state,stated,581,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:476,interoperability,messag,messages,476,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:119,performance,error,error,119,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:196,performance,error,error,196,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:470,performance,error,error,470,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:119,safety,error,error,119,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:196,safety,error,error,196,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:470,safety,error,error,470,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:119,usability,error,error,119,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:196,usability,error,error,196,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:441,usability,user,user,441,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:470,usability,error,error,470,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:593,usability,close,close,593,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok? ``` C++. if (stddev == 0) {. Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");. }. ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:9,availability,operat,operations,9,For math operations in ROOT we prefer not to emit messages and leave to the user to handle the returned NaN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:50,integrability,messag,messages,50,For math operations in ROOT we prefer not to emit messages and leave to the user to handle the returned NaN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:50,interoperability,messag,messages,50,For math operations in ROOT we prefer not to emit messages and leave to the user to handle the returned NaN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:31,usability,prefer,prefer,31,For math operations in ROOT we prefer not to emit messages and leave to the user to handle the returned NaN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14506:76,usability,user,user,76,For math operations in ROOT we prefer not to emit messages and leave to the user to handle the returned NaN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14506
https://github.com/root-project/root/pull/14507:116,deployability,updat,updated,116,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:124,integrability,buffer,buffer,124,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:131,integrability,interfac,interface,131,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:131,interoperability,interfac,interface,131,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:178,interoperability,incompatib,incompatibility,178,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:131,modifiability,interfac,interface,131,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:116,safety,updat,updated,116,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:116,security,updat,updated,116,@guitargeek @vepadulano . This also fixes the issue. - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:29,deployability,upgrad,upgrade,29,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:118,energy efficiency,green,green,118,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:29,modifiability,upgrad,upgrade,29,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:42,safety,test,testing,42,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:104,safety,test,tests,104,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:42,testability,test,testing,42,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:104,testability,test,tests,104,"Hi @smuzaffar! This is a big upgrade, and testing it with CMSSW would give us more confidence, the ROOT tests are all green already. Can you give us a hand? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:20,safety,test,tests,20,"@guitargeek , cmssw tests via https://github.com/cms-sw/root/pull/205",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:20,testability,test,tests,20,"@guitargeek , cmssw tests via https://github.com/cms-sw/root/pull/205",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:12,safety,test,tests,12,"FYI , cmssw tests passed https://github.com/cms-sw/root/pull/205#issuecomment-2001831508",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:12,testability,test,tests,12,"FYI , cmssw tests passed https://github.com/cms-sw/root/pull/205#issuecomment-2001831508",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:90,availability,state,state,90,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:115,deployability,updat,update,115,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:181,deployability,patch,patches,181,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:90,integrability,state,state,90,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:133,performance,time,times,133,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:80,safety,valid,validated,80,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:115,safety,updat,update,115,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:181,safety,patch,patches,181,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:80,security,validat,validated,80,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:115,security,updat,update,115,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:181,security,patch,patches,181,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:25,usability,stop,stop,25,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:250,deployability,patch,patches,250,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:638,deployability,patch,patches,638,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:821,deployability,patch,patch,821,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:390,integrability,repositor,repository,390,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:461,integrability,repositor,repositories,461,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:787,integrability,repositor,repositories,787,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:286,interoperability,conflict,conflicts,286,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:390,interoperability,repositor,repository,390,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:461,interoperability,repositor,repositories,461,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:787,interoperability,repositor,repositories,787,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:332,reliability,doe,doesn,332,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:250,safety,patch,patches,250,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:638,safety,patch,patches,638,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:821,safety,patch,patch,821,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:250,security,patch,patches,250,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:638,security,patch,patches,638,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:821,security,patch,patch,821,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:179,usability,clear,clear,179,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/pull/14507:202,usability,statu,status,202,"> I strongly believe we should have a similar approach as with our LLVM fork. We need to have some ""source of truth"" that is a certain cppyy/CPyCPPyy tag from upstream and then a clear way to reach the status of our fork from there, i.e. a series of patches that can be applied without conflicts. This PR goes in that direction but doesn't implement it fully as the sync script refers to a repository outside of our organisation. Ideally we would have separate repositories (one for cppyy and one for CPyCppyy) that we can refer to. Thanks for raising this point. The situation will be improved in the next weeks, I'll try to get as many patches merged to upstream as possible. Then, based on how many differences are left, we can decide if we want to go with one (or multiple) separate repositories, or we stay with the patch files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14507
https://github.com/root-project/root/issues/14508:81,deployability,updat,updated,81,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:107,deployability,API,APIs,107,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:251,energy efficiency,model,model,251,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:304,energy efficiency,model,model,304,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:399,energy efficiency,model,model,399,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:709,energy efficiency,model,model,709,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:107,integrability,API,APIs,107,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:718,integrability,Event,Events,718,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:1177,integrability,buffer,buffer,1177,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:107,interoperability,API,APIs,107,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:985,interoperability,Bind,BindRawPtr,985,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:1022,interoperability,Bind,BindRawPtr,1022,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:985,modifiability,Bind,BindRawPtr,985,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:1022,modifiability,Bind,BindRawPtr,1022,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:1298,performance,content,content,1298,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:71,safety,test,test,71,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:81,safety,updat,updated,81,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:81,security,updat,updated,81,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:251,security,model,model,251,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:304,security,model,model,304,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:399,security,model,model,399,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:709,security,model,model,709,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14508:71,testability,test,test,71,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:. ```c++. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {. auto model = ROOT::Experimental::RNTupleModel::Create();. model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());. model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());. auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();. writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};. void* pInts = &ints;. void** ppInts = &pInts;. std::vector<float> floats = {2.0, 4.0, 6.0};. void* pFloats = &floats;. void** ppFloats = &pFloats;. {. auto entry = writer->CreateEntry();. entry->BindRawPtr(""ints"", *ppInts);. entry->BindRawPtr(""floats"", *ppFloats);. writer->Fill(*entry);. }. writer.reset();. return 0;. }. ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14508
https://github.com/root-project/root/issues/14509:20,usability,help,help,20,@hahnjo might be of help here,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:193,availability,avail,available,193,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:120,deployability,patch,patches,120,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:179,deployability,automat,automatically,179,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:213,deployability,upgrad,upgrade,213,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:258,deployability,releas,release,258,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:213,modifiability,upgrad,upgrade,213,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:193,reliability,availab,available,193,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:238,reliability,doe,doesn,238,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:120,safety,patch,patches,120,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:193,safety,avail,available,193,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:120,security,patch,patches,120,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:193,security,availab,available,193,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14509:179,testability,automat,automatically,179,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14509
https://github.com/root-project/root/issues/14511:98,performance,memor,memory,98,"The price of jitted code... TTree scan. ```cpp. #include <TTree.h>. #include <TFile.h>. #include <memory>. int main(){. std::unique_ptr<TFile> f{TFile::Open(""hsimple.root"")};. std::unique_ptr<TTree> t{f->Get<TTree>(""ntuple"")};. t->Scan("""","""","""",4,0);. }. ```. ![ttree_scan](https://github.com/root-project/root/assets/15638895/d6412b1f-8fa9-4592-9cc0-ce1d30f5c050). RDF Display. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display(""px"")->Print();. }. ```. ![rdf_display](https://github.com/root-project/root/assets/15638895/9804bf8d-eb88-4454-bdba-f569c961aa50).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:98,usability,memor,memory,98,"The price of jitted code... TTree scan. ```cpp. #include <TTree.h>. #include <TFile.h>. #include <memory>. int main(){. std::unique_ptr<TFile> f{TFile::Open(""hsimple.root"")};. std::unique_ptr<TTree> t{f->Get<TTree>(""ntuple"")};. t->Scan("""","""","""",4,0);. }. ```. ![ttree_scan](https://github.com/root-project/root/assets/15638895/d6412b1f-8fa9-4592-9cc0-ce1d30f5c050). RDF Display. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display(""px"")->Print();. }. ```. ![rdf_display](https://github.com/root-project/root/assets/15638895/9804bf8d-eb88-4454-bdba-f569c961aa50).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:341,availability,slo,slower,341,"For completeness:. RDF Display without jitting. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit](https://github.com/root-project/root/assets/15638895/34a5dcf4-86ae-426b-915d-97f2c7913fdd). Which on my machine is ""only"" 60% slower than the equivalent TTree::Scan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:341,reliability,slo,slower,341,"For completeness:. RDF Display without jitting. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit](https://github.com/root-project/root/assets/15638895/34a5dcf4-86ae-426b-915d-97f2c7913fdd). Which on my machine is ""only"" 60% slower than the equivalent TTree::Scan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:4,safety,compl,completeness,4,"For completeness:. RDF Display without jitting. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit](https://github.com/root-project/root/assets/15638895/34a5dcf4-86ae-426b-915d-97f2c7913fdd). Which on my machine is ""only"" 60% slower than the equivalent TTree::Scan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:4,security,compl,completeness,4,"For completeness:. RDF Display without jitting. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit](https://github.com/root-project/root/assets/15638895/34a5dcf4-86ae-426b-915d-97f2c7913fdd). Which on my machine is ""only"" 60% slower than the equivalent TTree::Scan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:12,deployability,log,logic,12,"The current logic in `RDisplay` relies on `cling::printValue` for printing the column elements, which means we still need a lot of jitting even when the call to the `Display` action is properly templated. https://github.com/root-project/root/blob/aa513463b0b512517370cb91cca025e53a8b13a2/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L213-L216.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:4,energy efficiency,current,current,4,"The current logic in `RDisplay` relies on `cling::printValue` for printing the column elements, which means we still need a lot of jitting even when the call to the `Display` action is properly templated. https://github.com/root-project/root/blob/aa513463b0b512517370cb91cca025e53a8b13a2/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L213-L216.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:12,safety,log,logic,12,"The current logic in `RDisplay` relies on `cling::printValue` for printing the column elements, which means we still need a lot of jitting even when the call to the `Display` action is properly templated. https://github.com/root-project/root/blob/aa513463b0b512517370cb91cca025e53a8b13a2/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L213-L216.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:12,security,log,logic,12,"The current logic in `RDisplay` relies on `cling::printValue` for printing the column elements, which means we still need a lot of jitting even when the call to the `Display` action is properly templated. https://github.com/root-project/root/blob/aa513463b0b512517370cb91cca025e53a8b13a2/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L213-L216.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:12,testability,log,logic,12,"The current logic in `RDisplay` relies on `cling::printValue` for printing the column elements, which means we still need a lot of jitting even when the call to the `Display` action is properly templated. https://github.com/root-project/root/blob/aa513463b0b512517370cb91cca025e53a8b13a2/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L213-L216.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:14,deployability,log,logic,14,"> The current logic in RDisplay relies on cling::printValue for printing the column elements,. We should short-circuit this for the numerical types. Furthermore, in principle, `Display(""numerical_column"")` should be doable without JITing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:6,energy efficiency,current,current,6,"> The current logic in RDisplay relies on cling::printValue for printing the column elements,. We should short-circuit this for the numerical types. Furthermore, in principle, `Display(""numerical_column"")` should be doable without JITing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:14,safety,log,logic,14,"> The current logic in RDisplay relies on cling::printValue for printing the column elements,. We should short-circuit this for the numerical types. Furthermore, in principle, `Display(""numerical_column"")` should be doable without JITing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:14,security,log,logic,14,"> The current logic in RDisplay relies on cling::printValue for printing the column elements,. We should short-circuit this for the numerical types. Furthermore, in principle, `Display(""numerical_column"")` should be doable without JITing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:14,testability,log,logic,14,"> The current logic in RDisplay relies on cling::printValue for printing the column elements,. We should short-circuit this for the numerical types. Furthermore, in principle, `Display(""numerical_column"")` should be doable without JITing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:1055,energy efficiency,current,current,1055,"With the changes at the linked PR, this is the new flamegraph of the same example previously posted. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit_notfileopen](https://github.com/root-project/root/assets/15638895/ee905b95-957e-482a-a783-0c08c856d05f). With now comparable times between TTree::Scan and RInterface::Display. ```. $: ./ttree_scan. ************************. * Row * px *. ************************. * 0 * 0.0194094 *. * 1 * 0.3271895 *. * 2 * -0.294611 *. * 3 * -0.774589 *. ************************. real	0m0.315s. user	0m0.205s. sys	0m0.110s. $: ./rdf_display. +-----+-----------+. | Row | px | . +-----+-----------+. | 0 | 0.019409 | . +-----+-----------+. | 1 | 0.327190 | . +-----+-----------+. | 2 | -0.294612 | . +-----+-----------+. | 3 | -0.774590 | . +-----+-----------+. | 4 | -1.430795 | . +-----+-----------+. real	0m0.309s. user	0m0.197s. sys	0m0.112s. ```. Between the originally reported 16 seconds and the current 300 milliseconds it's a ~50x speedup",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:392,performance,time,times,392,"With the changes at the linked PR, this is the new flamegraph of the same example previously posted. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit_notfileopen](https://github.com/root-project/root/assets/15638895/ee905b95-957e-482a-a783-0c08c856d05f). With now comparable times between TTree::Scan and RInterface::Display. ```. $: ./ttree_scan. ************************. * Row * px *. ************************. * 0 * 0.0194094 *. * 1 * 0.3271895 *. * 2 * -0.294611 *. * 3 * -0.774589 *. ************************. real	0m0.315s. user	0m0.205s. sys	0m0.110s. $: ./rdf_display. +-----+-----------+. | Row | px | . +-----+-----------+. | 0 | 0.019409 | . +-----+-----------+. | 1 | 0.327190 | . +-----+-----------+. | 2 | -0.294612 | . +-----+-----------+. | 3 | -0.774590 | . +-----+-----------+. | 4 | -1.430795 | . +-----+-----------+. real	0m0.309s. user	0m0.197s. sys	0m0.112s. ```. Between the originally reported 16 seconds and the current 300 milliseconds it's a ~50x speedup",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:648,usability,user,user,648,"With the changes at the linked PR, this is the new flamegraph of the same example previously posted. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit_notfileopen](https://github.com/root-project/root/assets/15638895/ee905b95-957e-482a-a783-0c08c856d05f). With now comparable times between TTree::Scan and RInterface::Display. ```. $: ./ttree_scan. ************************. * Row * px *. ************************. * 0 * 0.0194094 *. * 1 * 0.3271895 *. * 2 * -0.294611 *. * 3 * -0.774589 *. ************************. real	0m0.315s. user	0m0.205s. sys	0m0.110s. $: ./rdf_display. +-----+-----------+. | Row | px | . +-----+-----------+. | 0 | 0.019409 | . +-----+-----------+. | 1 | 0.327190 | . +-----+-----------+. | 2 | -0.294612 | . +-----+-----------+. | 3 | -0.774590 | . +-----+-----------+. | 4 | -1.430795 | . +-----+-----------+. real	0m0.309s. user	0m0.197s. sys	0m0.112s. ```. Between the originally reported 16 seconds and the current 300 milliseconds it's a ~50x speedup",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/issues/14511:970,usability,user,user,970,"With the changes at the linked PR, this is the new flamegraph of the same example previously posted. ```cpp. #include <ROOT/RDataFrame.hxx>. int main(){. ROOT::RDataFrame df{""ntuple"", ""hsimple.root""};. df.Display<float>({""px""})->Print();. }. ```. ![rdf_display_nojit_notfileopen](https://github.com/root-project/root/assets/15638895/ee905b95-957e-482a-a783-0c08c856d05f). With now comparable times between TTree::Scan and RInterface::Display. ```. $: ./ttree_scan. ************************. * Row * px *. ************************. * 0 * 0.0194094 *. * 1 * 0.3271895 *. * 2 * -0.294611 *. * 3 * -0.774589 *. ************************. real	0m0.315s. user	0m0.205s. sys	0m0.110s. $: ./rdf_display. +-----+-----------+. | Row | px | . +-----+-----------+. | 0 | 0.019409 | . +-----+-----------+. | 1 | 0.327190 | . +-----+-----------+. | 2 | -0.294612 | . +-----+-----------+. | 3 | -0.774590 | . +-----+-----------+. | 4 | -1.430795 | . +-----+-----------+. real	0m0.309s. user	0m0.197s. sys	0m0.112s. ```. Between the originally reported 16 seconds and the current 300 milliseconds it's a ~50x speedup",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14511
https://github.com/root-project/root/pull/14513:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14513
https://github.com/root-project/root/pull/14519:56,availability,cluster,clusters,56,"FWIW the tutorial output looks something like this, the clusters prepared by the threads in parallel are nicely visible:. ![Screenshot from 2024-02-01 16-27-02](https://github.com/root-project/root/assets/1613332/72117ada-699e-49bb-941f-abcf5146df0b)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:56,deployability,cluster,clusters,56,"FWIW the tutorial output looks something like this, the clusters prepared by the threads in parallel are nicely visible:. ![Screenshot from 2024-02-01 16-27-02](https://github.com/root-project/root/assets/1613332/72117ada-699e-49bb-941f-abcf5146df0b)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:92,performance,parallel,parallel,92,"FWIW the tutorial output looks something like this, the clusters prepared by the threads in parallel are nicely visible:. ![Screenshot from 2024-02-01 16-27-02](https://github.com/root-project/root/assets/1613332/72117ada-699e-49bb-941f-abcf5146df0b)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/issues/14520:54,availability,error,error,54,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:153,availability,error,error,153,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:24,interoperability,share,share,24,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:54,performance,error,error,54,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:153,performance,error,error,153,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:54,safety,error,error,54,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:153,safety,error,error,153,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:54,usability,error,error,54,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:153,usability,error,error,153,"@KrisThielemans can you share the full TBB and XRootD error files? The snippets above only show the last lines after `make` gave up, not what the actual error is (in case of TBB it's only a warning that is not fatal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:121,availability,error,error,121,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:204,availability,error,error,204,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:235,availability,error,error,235,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:316,availability,error,error,316,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:75,deployability,log,log,75,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:92,deployability,build,builds,92,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:121,performance,error,error,121,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:204,performance,error,error,204,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:235,performance,error,error,235,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:316,performance,error,error,316,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:75,safety,log,log,75,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:121,safety,error,error,121,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:204,safety,error,error,204,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:235,safety,error,error,235,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:316,safety,error,error,316,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:75,security,log,log,75,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:75,testability,log,log,75,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:121,usability,error,error,121,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:204,usability,error,error,204,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:235,usability,error,error,235,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:316,usability,error,error,316,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds. [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip). [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:162,deployability,build,builds,162,"Right, very confusing... The only hint is `read jobs pipe: Bad file descriptor.` - maybe this means you are running out of file descriptors in excessive parallel builds / on the ""restricted"" GitHub Actions runners?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:153,performance,parallel,parallel,153,"Right, very confusing... The only hint is `read jobs pipe: Bad file descriptor.` - maybe this means you are running out of file descriptors in excessive parallel builds / on the ""restricted"" GitHub Actions runners?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:34,usability,hint,hint,34,"Right, very confusing... The only hint is `read jobs pipe: Bad file descriptor.` - maybe this means you are running out of file descriptors in excessive parallel builds / on the ""restricted"" GitHub Actions runners?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:111,usability,workflow,workflows,111,just using 2. https://github.com/SyneRBI/SIRF-SuperBuild/blob/929fa6052d14d2c5f99d8917f5cd0b27c13bece8/.github/workflows/c-cpp.yml#L152.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:86,deployability,build,build,86,"FYI, we have the same problem again since about 1 month. I tried using a non-parallel build (https://github.com/SyneRBI/SIRF-SuperBuild/pull/903), which does work, but results in prohibitive build times.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:191,deployability,build,build,191,"FYI, we have the same problem again since about 1 month. I tried using a non-parallel build (https://github.com/SyneRBI/SIRF-SuperBuild/pull/903), which does work, but results in prohibitive build times.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:77,performance,parallel,parallel,77,"FYI, we have the same problem again since about 1 month. I tried using a non-parallel build (https://github.com/SyneRBI/SIRF-SuperBuild/pull/903), which does work, but results in prohibitive build times.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:197,performance,time,times,197,"FYI, we have the same problem again since about 1 month. I tried using a non-parallel build (https://github.com/SyneRBI/SIRF-SuperBuild/pull/903), which does work, but results in prohibitive build times.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:153,reliability,doe,does,153,"FYI, we have the same problem again since about 1 month. I tried using a non-parallel build (https://github.com/SyneRBI/SIRF-SuperBuild/pull/903), which does work, but results in prohibitive build times.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:87,availability,error,error,87,@KrisThielemans thanks a lot for reporting. I agree with @hahnjo . We did not see that error on any of our platforms unfortunately.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:107,interoperability,platform,platforms,107,@KrisThielemans thanks a lot for reporting. I agree with @hahnjo . We did not see that error on any of our platforms unfortunately.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:87,performance,error,error,87,@KrisThielemans thanks a lot for reporting. I agree with @hahnjo . We did not see that error on any of our platforms unfortunately.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:87,safety,error,error,87,@KrisThielemans thanks a lot for reporting. I agree with @hahnjo . We did not see that error on any of our platforms unfortunately.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:87,usability,error,error,87,@KrisThielemans thanks a lot for reporting. I agree with @hahnjo . We did not see that error on any of our platforms unfortunately.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/pull/14523:42,deployability,version,versions,42,IMHO this is quite bad - to how many ROOT versions should we backport this? This problem is basically hiding there all the way since commit 4b5425616e53b67a02115e6a9f59bb047b58079d in 2011!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:42,integrability,version,versions,42,IMHO this is quite bad - to how many ROOT versions should we backport this? This problem is basically hiding there all the way since commit 4b5425616e53b67a02115e6a9f59bb047b58079d in 2011!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:42,modifiability,version,versions,42,IMHO this is quite bad - to how many ROOT versions should we backport this? This problem is basically hiding there all the way since commit 4b5425616e53b67a02115e6a9f59bb047b58079d in 2011!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:312,availability,error,errors,312,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:344,availability,error,errors,344,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:167,modifiability,deco,decompression,167,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:330,modifiability,deco,decompression,330,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:312,performance,error,errors,312,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:344,performance,error,errors,344,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:100,safety,test,test,100,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:312,safety,error,errors,312,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:344,safety,error,errors,344,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:100,testability,test,test,100,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:217,usability,clear,clear,217,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:312,usability,error,errors,312,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:344,usability,error,errors,344,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:157,availability,sli,slightly,157,"After more investigation, it seems that all existing code paths in `TKey.cxx`, `TBufferXML.cxx`, `TMessage.cxx`, and `TBasket.cxx` allocate a buffer that is slightly larger, so it's probably not an as critical problem for the non-RNTuple case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:131,energy efficiency,alloc,allocate,131,"After more investigation, it seems that all existing code paths in `TKey.cxx`, `TBufferXML.cxx`, `TMessage.cxx`, and `TBasket.cxx` allocate a buffer that is slightly larger, so it's probably not an as critical problem for the non-RNTuple case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:142,integrability,buffer,buffer,142,"After more investigation, it seems that all existing code paths in `TKey.cxx`, `TBufferXML.cxx`, `TMessage.cxx`, and `TBasket.cxx` allocate a buffer that is slightly larger, so it's probably not an as critical problem for the non-RNTuple case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:157,reliability,sli,slightly,157,"After more investigation, it seems that all existing code paths in `TKey.cxx`, `TBufferXML.cxx`, `TMessage.cxx`, and `TBasket.cxx` allocate a buffer that is slightly larger, so it's probably not an as critical problem for the non-RNTuple case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:191,energy efficiency,core,core,191,"To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/lz4/src/ZipLZ4.cxx#L54-L58. https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/zip/src/RZip.cxx#L145-L148. (that's the very original code with the old compression algorithm; it uses an offset which is correct by construction). https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/zstd/src/ZipZSTD.cxx#L32-L35",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:307,energy efficiency,core,core,307,"To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/lz4/src/ZipLZ4.cxx#L54-L58. https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/zip/src/RZip.cxx#L145-L148. (that's the very original code with the old compression algorithm; it uses an offset which is correct by construction). https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/zstd/src/ZipZSTD.cxx#L32-L35",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:543,energy efficiency,core,core,543,"To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/lz4/src/ZipLZ4.cxx#L54-L58. https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/zip/src/RZip.cxx#L145-L148. (that's the very original code with the old compression algorithm; it uses an offset which is correct by construction). https://github.com/root-project/root/blob/e8545f74ac01f4edde41305c75aada5aae8991fd/core/zstd/src/ZipZSTD.cxx#L32-L35",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:252,deployability,fail,fails,252,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:461,energy efficiency,alloc,allocating,461,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:252,reliability,fail,fails,252,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:368,reliability,doe,does,368,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:389,reliability,doe,doesn,389,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:330,testability,understand,understanding,330,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:524,testability,trace,traced,524,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:54,usability,user,users,54,"Somewhat, that commit made it more likely for regular users to run into the problem: Essentially, the commit moved code around to always seal pages in `CommitPage`. Before it was only done when implicit MT was enabled, and the original reproducer code fails in ROOT 6.30 with a preceding call to `ROOT::EnableImplicitMT()`. In my understanding, that's also what CMSSW does, so for them it doesn't make a difference. (In fact, the problematic pattern of exactly allocating as many bytes as the uncompressed page holds can be traced back to commits 1ea8447f10c18d3cb52e0e174ad44aced397a452 and 88bd1f023ac6cbbc58c0037def937a03de03a3b4 at the very beginning of `RPageSinkBuf`'s history)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:0,availability,ping,ping,0,"ping @pcanal it would be really good to have the fix in, my understanding is that it blocks CMS RNTuple work...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:60,testability,understand,understanding,60,"ping @pcanal it would be really good to have the fix in, my understanding is that it blocks CMS RNTuple work...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:319,availability,sli,slight,319,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:464,availability,sli,slightly,464,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:252,deployability,configurat,configuration,252,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:438,energy efficiency,alloc,allocate,438,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:538,energy efficiency,alloc,allocations,538,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:800,energy efficiency,reduc,reduces,800,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:252,integrability,configur,configuration,252,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:449,integrability,buffer,buffer,449,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:165,modifiability,deco,decompression,165,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:252,modifiability,configur,configuration,252,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:319,reliability,sli,slight,319,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:464,reliability,sli,slightly,464,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:959,reliability,doe,doesn,959,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:812,safety,risk,risk,812,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1265,safety,test,test,1265,"he other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1799,safety,risk,risk,1799,"he other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:252,security,configur,configuration,252,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:812,security,risk,risk,812,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is mos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1790,security,secur,security,1790,"he other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1799,security,risk,risk,1799,"he other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1265,testability,test,test,1265,"he other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1025,usability,hint,hints,1025,"ly"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a spa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1964,usability,clear,clear,1964,"he other compression algorithms already do this,. Indeed. The diffs was made less obvious because:. ZLIB decompression is already doing the right thing. ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different. . > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:. ```. Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap. ```. and used via. ```. char *bufcur = &fBuffer[fKeylen];. ```. so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:. * why are those added? * why doesn't RNTuple need it? 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:150,deployability,manag,manage,150,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:127,energy efficiency,optim,optimization,127,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:150,energy efficiency,manag,manage,150,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:127,performance,optimiz,optimization,127,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:161,performance,memor,memory,161,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:150,safety,manag,manage,150,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:9,testability,understand,understanding,9,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:161,usability,memor,memory,161,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:623,availability,operat,operate,623,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1167,availability,sli,slightly,1167,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1750,availability,error,errors,1750,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:661,deployability,patch,patch,661,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:707,deployability,releas,releases,707,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1031,integrability,buffer,buffer,1031,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1183,integrability,buffer,buffers,1183,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:748,performance,memor,memory,748,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:826,performance,memor,memory,826,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1743,performance,memor,memory,1743,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1750,performance,error,errors,1750,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1167,reliability,sli,slightly,1167,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:337,safety,test,test,337,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:593,safety,risk,risk,593,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:661,safety,patch,patch,661,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1750,safety,error,errors,1750,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:584,security,secur,security,584,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:593,security,risk,risk,593,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:661,security,patch,patch,661,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:337,testability,test,test,337,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1574,testability,understand,understanding,1574,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:98,usability,hint,hints,98,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:748,usability,memor,memory,748,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:826,usability,memor,memory,826,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:894,usability,stop,stops,894,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1019,usability,stop,stop,1019,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1743,usability,memor,memory,1743,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:1750,usability,error,errors,1750,"> [01bb696](https://github.com/root-project/root/commit/01bb6965557fcc63d5d2e535b89f57e025922731) hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was `9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). I think `nbuffers >= 1` in all cases, so we should always have 9 additional bytes beyond what we tell `R__zipMultipleAlgorithm`. > This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). Yes, we have to operate under that assumption. > This patch needs to be backported to as many older releases as possible as it can lead to a memory over-write even in the case of TTree (the compression is being given a memory area smaller than it is and unless the compression algorithm stops before it has over-inflated the object by 28+9 bytes, it might still happens). Yes, I think the compression algorithms stop at the buffer sizes we give them. Unless I'm missing something, this means only RNTuple was affected by this and TTree was fine because of the slightly larger buffers? For now, I've opened backports for 6.30 (https://github.com/root-project/root/pull/14624), 6.28 (https://github.com/root-project/root/pull/14625), and 6.26 (https://github.com/root-project/root/pull/14626). If we find that TTree is also affected, we can (and have to) open more backports. > A a side note, the extra size given by TKey and TBaskets probably should be removed (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". Ok, we can try (in `master`). We have to be careful though, I don't want to introduce more memory errors for writing TTrees...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14526:88,availability,servic,services,88,"Please don't merge, I suspect the merge in master broke our dev3 builds. https://lcgapp-services.cern.ch/cdash/viewFiles.php?buildid=302042",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:65,deployability,build,builds,65,"Please don't merge, I suspect the merge in master broke our dev3 builds. https://lcgapp-services.cern.ch/cdash/viewFiles.php?buildid=302042",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:88,deployability,servic,services,88,"Please don't merge, I suspect the merge in master broke our dev3 builds. https://lcgapp-services.cern.ch/cdash/viewFiles.php?buildid=302042",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:125,deployability,build,buildid,125,"Please don't merge, I suspect the merge in master broke our dev3 builds. https://lcgapp-services.cern.ch/cdash/viewFiles.php?buildid=302042",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:88,integrability,servic,services,88,"Please don't merge, I suspect the merge in master broke our dev3 builds. https://lcgapp-services.cern.ch/cdash/viewFiles.php?buildid=302042",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:88,modifiability,servic,services,88,"Please don't merge, I suspect the merge in master broke our dev3 builds. https://lcgapp-services.cern.ch/cdash/viewFiles.php?buildid=302042",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:81,deployability,build,builds,81,@andresailer I'll merge once you confirm that this fixes the issue in the `dev3` builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:33,usability,confirm,confirm,33,@andresailer I'll merge once you confirm that this fixes the issue in the `dev3` builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:64,deployability,patch,patch,64,> dev3 is fine again. Thanks for waiting! Thanks to you for the patch!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:64,safety,patch,patch,64,> dev3 is fine again. Thanks for waiting! Thanks to you for the patch!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14526:64,security,patch,patch,64,> dev3 is fine again. Thanks for waiting! Thanks to you for the patch!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14526
https://github.com/root-project/root/pull/14531:270,availability,slo,slower,270,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:745,energy efficiency,model,model,745,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:108,performance,memor,memory,108,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:115,performance,overhead,overhead,115,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:270,reliability,slo,slower,270,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:229,safety,compl,complexity,229,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:8,security,hash,hash,8,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:229,security,compl,complexity,229,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:389,security,Hash,Hash,389,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:745,security,model,model,745,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:108,usability,memor,memory,108,"> Use a hash map to resolve the top-level field name to an index in the `fValues` vector. This comes at the memory overhead of storing ~ all the top-level field names in every entry (probably increase by several factors). Method complexity is O(1) but probably a little slower than just indexing the array. Not necessarily:. * We could use a `RFieldBase *` as key and provide appropriate `Hash` and `KeyEqual` functions that dig into the field name. The not-so-nice implication is that `find` also takes a `RFieldBase *`, so we'd need to create a temporary one for that (but doable since it's an internal detail). * Alternatively, we could store non-owned pointers to the field's name as keys. That would tie the `REntry` to the lifetime of the model, but AFAICT that's already the case because `RValue` has a link to the field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:896,deployability,manag,manage,896,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1144,deployability,manag,managed,1144,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:896,energy efficiency,manag,manage,896,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1144,energy efficiency,manag,managed,1144,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:115,integrability,Event,Event,115,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:360,integrability,event,event,360,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:913,integrability,Event,Event,913,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1006,integrability,Event,Event,1006,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1057,integrability,Event,Event,1057,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:896,safety,manag,manage,896,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1144,safety,manag,managed,1144,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:172,security,token,token,172,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:220,security,token,token,220,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:500,security,token,token,500,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1218,security,ident,identifier,1218,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1286,security,ident,identifier,1286,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1479,security,ident,identifier,1479,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1653,security,ident,identifier,1653,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1164,testability,simul,simultaneously,1164,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:578,usability,user,users,578,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:1159,usability,user,user,1159,"So in CMSSW, we have been moving our framework away from using strings as the 'keys' to finding stuff in the `edm::Event` to using `edm::GetToken`. (CMSSW has both a typed token` edm::GetTokenT<T>` as well as an untyped token `edm::GetToken` where the type corresponds to the C++ class type of the data product.) We require algorithms which need data from the event to declare what they will 'consume' and as part of that call we return a `edm::GetToken`. Then in the algorithm they have to pass the token to the `edm::Even`t to get the data they requested earlier. This allows users to only use the string associated to the data they want once and allows the framework to do an O(1) lookup for the data (since the `edm::GetToken` is holding an index), and allows us to prefetch the data since we know exactly what will be requested during the job. This case is a bit different since in CMSSW we manage the `edm::Event` and pass it to the algorithm so we know the `edm::GetToken` being passed to the `edm::Event` has to be the one associated with the `edm::Event`. In your case, it is theoretically possible for multiple `RNTupleReader`s to be managed by the user simultaneously which means they could pass the wrong 'identifier' to a reader. So it seems you do want to 'check' that an identifier used to request data is one associated with the reader. Might I suggest using a new class (e.g. `RNTupleFieldToken` or `RNTupleFieldKey`) which holds the index to field and a unique identifier to the associated `RNTupleModel` (e.g. it could hold the value of the address in a `std::uintptr_t`). That would allow fast lookup and a fast cross-check that the identifier is a match.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:225,deployability,patch,patch,225,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:254,deployability,manag,management,254,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:175,energy efficiency,model,model,175,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:254,energy efficiency,manag,management,254,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:150,integrability,interfac,interface,150,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:93,interoperability,exchang,exchange,93,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:150,interoperability,interfac,interface,150,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:150,modifiability,interfac,interface,150,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:189,safety,safe,safety,189,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:225,safety,patch,patch,225,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:254,safety,manag,management,254,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:123,security,token,token,123,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:175,security,model,model,175,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:225,security,patch,patch,225,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/issues/14538:54,deployability,patch,patch,54,"@linev in that old Jira report you said you have some patch for this ""Crop"" functionality. Do you still have it ? I could not find a link to it from the report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:54,safety,patch,patch,54,"@linev in that old Jira report you said you have some patch for this ""Crop"" functionality. Do you still have it ? I could not find a link to it from the report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:54,security,patch,patch,54,"@linev in that old Jira report you said you have some patch for this ""Crop"" functionality. Do you still have it ? I could not find a link to it from the report.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:227,deployability,automat,automatically,227,There is no PR for it. But I implement code in our [go4](https://github.com/gsi-ee/go4) framework long time ago. If we want to have such functionality - we can move this code into ROOT. It can be methods for TH1/TH2 classes to automatically zoom into non-empty bins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:103,performance,time,time,103,There is no PR for it. But I implement code in our [go4](https://github.com/gsi-ee/go4) framework long time ago. If we want to have such functionality - we can move this code into ROOT. It can be methods for TH1/TH2 classes to automatically zoom into non-empty bins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:227,testability,automat,automatically,227,There is no PR for it. But I implement code in our [go4](https://github.com/gsi-ee/go4) framework long time ago. If we want to have such functionality - we can move this code into ROOT. It can be methods for TH1/TH2 classes to automatically zoom into non-empty bins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:171,usability,mous,mouse,171,I was rethinking to this issue. How big is the problem? Is it worth introducing heuristics to zoom on very sharp peaks when it can be done with `SetRangeUser` or with 2-3 mouse movements?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:121,availability,avail,available,121,@dpiparo . Idea to have such auto-zoom functionality in interactive canvas. It is already implemented in JSROOT and also available in web-based canvas. Can be see by pressing `Ctrl` + `*`. See on screenshot: . ![autozoom](https://github.com/user-attachments/assets/d35e5d67-1fa8-491f-9e53-2b54ee310c12). From this point of view issue is resolved - once web-canvas will be switched as default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:121,reliability,availab,available,121,@dpiparo . Idea to have such auto-zoom functionality in interactive canvas. It is already implemented in JSROOT and also available in web-based canvas. Can be see by pressing `Ctrl` + `*`. See on screenshot: . ![autozoom](https://github.com/user-attachments/assets/d35e5d67-1fa8-491f-9e53-2b54ee310c12). From this point of view issue is resolved - once web-canvas will be switched as default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:121,safety,avail,available,121,@dpiparo . Idea to have such auto-zoom functionality in interactive canvas. It is already implemented in JSROOT and also available in web-based canvas. Can be see by pressing `Ctrl` + `*`. See on screenshot: . ![autozoom](https://github.com/user-attachments/assets/d35e5d67-1fa8-491f-9e53-2b54ee310c12). From this point of view issue is resolved - once web-canvas will be switched as default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:121,security,availab,available,121,@dpiparo . Idea to have such auto-zoom functionality in interactive canvas. It is already implemented in JSROOT and also available in web-based canvas. Can be see by pressing `Ctrl` + `*`. See on screenshot: . ![autozoom](https://github.com/user-attachments/assets/d35e5d67-1fa8-491f-9e53-2b54ee310c12). From this point of view issue is resolved - once web-canvas will be switched as default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:56,usability,interact,interactive,56,@dpiparo . Idea to have such auto-zoom functionality in interactive canvas. It is already implemented in JSROOT and also available in web-based canvas. Can be see by pressing `Ctrl` + `*`. See on screenshot: . ![autozoom](https://github.com/user-attachments/assets/d35e5d67-1fa8-491f-9e53-2b54ee310c12). From this point of view issue is resolved - once web-canvas will be switched as default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:241,usability,user,user-attachments,241,@dpiparo . Idea to have such auto-zoom functionality in interactive canvas. It is already implemented in JSROOT and also available in web-based canvas. Can be see by pressing `Ctrl` + `*`. See on screenshot: . ![autozoom](https://github.com/user-attachments/assets/d35e5d67-1fa8-491f-9e53-2b54ee310c12). From this point of view issue is resolved - once web-canvas will be switched as default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14540:274,modifiability,evolv,evolved,274,Hi @vepadulano . This tutorial shows how to write a C++ stand alone application that reads and writes a custom class to a tree. https://github.com/root-project/root/tree/master/tutorials/tree/dictionary. Do you think this tutorial solves the issue or the tutorial should be evolved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:104,usability,custom,custom,104,Hi @vepadulano . This tutorial shows how to write a C++ stand alone application that reads and writes a custom class to a tree. https://github.com/root-project/root/tree/master/tutorials/tree/dictionary. Do you think this tutorial solves the issue or the tutorial should be evolved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14541:179,usability,user,user-attachments,179,"@couet is right. Please see the plot from hsimple.root below. The title of the palette was changed on the fly using the editor, as well as its offset. ![Image](https://github.com/user-attachments/assets/90c5f35b-9167-4d93-8d7f-21ec44d8555c).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14541
https://github.com/root-project/root/issues/14542:10,usability,close,close,10,Reminder: close associated JIRA ticket.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14543:38,deployability,patch,patch,38,I sent an email to the author of this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:38,safety,patch,patch,38,I sent an email to the author of this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:23,security,auth,author,23,I sent an email to the author of this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:38,security,patch,patch,38,I sent an email to the author of this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14545:195,availability,error,errors,195,"I cannot reproduce this issue. I saved the image produced by tutorials/image/rose_image.C into a .root file. Then in a fresh ROOT session, I read it back and display the image. It works fine. No errors. I am on Mac. Maybe @linev can tell if that's what it tried?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:195,performance,error,errors,195,"I cannot reproduce this issue. I saved the image produced by tutorials/image/rose_image.C into a .root file. Then in a fresh ROOT session, I read it back and display the image. It works fine. No errors. I am on Mac. Maybe @linev can tell if that's what it tried?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:195,safety,error,errors,195,"I cannot reproduce this issue. I saved the image produced by tutorials/image/rose_image.C into a .root file. Then in a fresh ROOT session, I read it back and display the image. It works fine. No errors. I am on Mac. Maybe @linev can tell if that's what it tried?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:130,security,session,session,130,"I cannot reproduce this issue. I saved the image produced by tutorials/image/rose_image.C into a .root file. Then in a fresh ROOT session, I read it back and display the image. It works fine. No errors. I am on Mac. Maybe @linev can tell if that's what it tried?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:195,usability,error,errors,195,"I cannot reproduce this issue. I saved the image produced by tutorials/image/rose_image.C into a .root file. Then in a fresh ROOT session, I read it back and display the image. It works fine. No errors. I am on Mac. Maybe @linev can tell if that's what it tried?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:23,usability,close,close,23,Then I guess we should close this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:21,usability,close,close,21,@hahnjo reminder plz close also https://its.cern.ch/jira/browse/ROOT-10973,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14546:183,energy efficiency,Draw,DrawFrame,183,"Indeed this has nothing to do with TRatioplot. It can be reproduced with the simple following macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"",10,53,700,525);. gPad->DrawFrame(-5,-1.25,5,1.25);. TLine *line = new TLine(-5,-0.5,5,-0.5);. line->SetLineStyle(2);. line->Draw();. }. ```. Which, on my Mac, gives:. <img width=""648"" alt=""Screenshot 2024-02-13 at 13 21 33"" src=""https://github.com/root-project/root/assets/4697738/26ecd350-74f0-4529-b84b-decc8c210490"">. It is a precision issue. It might be that on an other machine it will not give the same result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:284,energy efficiency,Draw,Draw,284,"Indeed this has nothing to do with TRatioplot. It can be reproduced with the simple following macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"",10,53,700,525);. gPad->DrawFrame(-5,-1.25,5,1.25);. TLine *line = new TLine(-5,-0.5,5,-0.5);. line->SetLineStyle(2);. line->Draw();. }. ```. Which, on my Mac, gives:. <img width=""648"" alt=""Screenshot 2024-02-13 at 13 21 33"" src=""https://github.com/root-project/root/assets/4697738/26ecd350-74f0-4529-b84b-decc8c210490"">. It is a precision issue. It might be that on an other machine it will not give the same result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:77,testability,simpl,simple,77,"Indeed this has nothing to do with TRatioplot. It can be reproduced with the simple following macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"",10,53,700,525);. gPad->DrawFrame(-5,-1.25,5,1.25);. TLine *line = new TLine(-5,-0.5,5,-0.5);. line->SetLineStyle(2);. line->Draw();. }. ```. Which, on my Mac, gives:. <img width=""648"" alt=""Screenshot 2024-02-13 at 13 21 33"" src=""https://github.com/root-project/root/assets/4697738/26ecd350-74f0-4529-b84b-decc8c210490"">. It is a precision issue. It might be that on an other machine it will not give the same result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:77,usability,simpl,simple,77,"Indeed this has nothing to do with TRatioplot. It can be reproduced with the simple following macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"",10,53,700,525);. gPad->DrawFrame(-5,-1.25,5,1.25);. TLine *line = new TLine(-5,-0.5,5,-0.5);. line->SetLineStyle(2);. line->Draw();. }. ```. Which, on my Mac, gives:. <img width=""648"" alt=""Screenshot 2024-02-13 at 13 21 33"" src=""https://github.com/root-project/root/assets/4697738/26ecd350-74f0-4529-b84b-decc8c210490"">. It is a precision issue. It might be that on an other machine it will not give the same result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:257,energy efficiency,Draw,DrawLine,257,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:334,energy efficiency,Draw,DrawLineNDC,334,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:408,energy efficiency,Draw,DrawlLine,408,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:461,energy efficiency,Draw,DrawLineNDC,461,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:494,interoperability,coordinat,coordinates,494,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:473,reliability,doe,does,473,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:21,testability,simpl,simplified,21,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:21,usability,simpl,simplified,21,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:739,usability,interact,interactively,739,"The problem has been simplified to:. ```. {. double x = 6.25;. double y = 1.5625000232831;. double y1 = -y;. double y2 = y;. double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->Range(-x, y1, x, y2);. TLine *line = new TLine();. line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);. line->DrawLineNDC(0., r*(yv-y1),. 1., r*(yv-y1))->SetLineColor(kBlue);. }. ```. DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:198,energy efficiency,Draw,DrawFrame,198,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:358,energy efficiency,Draw,DrawLine,358,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:393,energy efficiency,Draw,DrawLine,393,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:430,energy efficiency,Draw,DrawLine,430,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:463,energy efficiency,Draw,DrawLine,463,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:498,energy efficiency,Draw,DrawLine,498,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:73,testability,simpl,simple,73,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:73,usability,simpl,simple,73,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:. ```. void lineonaxis(){. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);. c1->SetGridy();. TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);. f->GetYaxis()->SetNdivisions(10);. f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();. line->SetLineColor(kRed);. line->DrawLine(-5, -1., 5 , -1.);. line->DrawLine(-5, -0.5, 5 , -0.5);. line->DrawLine(-5, 0., 5 , 0.);. line->DrawLine(-5, 0.5, 5 , 0.5);. line->DrawLine(-5, 1., 5 , 1.);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:791,deployability,automat,automatically,791,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:122,energy efficiency,draw,drawings,122,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:156,energy efficiency,draw,drawn,156,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:436,energy efficiency,Draw,Drawing,436,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:685,energy efficiency,draw,draw,685,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:72,interoperability,coordinat,coordinates,72,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:173,interoperability,coordinat,coordinates,173,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:218,interoperability,coordinat,coordinates,218,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:365,interoperability,coordinat,coordinate,365,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:737,interoperability,coordinat,coordinates,737,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:605,performance,time,time,605,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:503,testability,simpl,simple,503,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:791,testability,automat,automatically,791,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:503,usability,simpl,simple,503,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. . And then axis position calculated relative to this rounded values. In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`. Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. . To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:116,interoperability,coordinat,coordinates,116,In the ROOT it is pure rounding problem which will be fixed by #14837. In JSROOT it is SVG frame layer with integer coordinates and therefore rounding works differently. Solved for this particular case of TLine by comit: https://github.com/root-project/jsroot/commit/4abf28c32f184b166a43b0943f587a7068804749,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:97,modifiability,layer,layer,97,In the ROOT it is pure rounding problem which will be fixed by #14837. In JSROOT it is SVG frame layer with integer coordinates and therefore rounding works differently. Solved for this particular case of TLine by comit: https://github.com/root-project/jsroot/commit/4abf28c32f184b166a43b0943f587a7068804749,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14549:114,availability,error,error,114,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:26,deployability,log,logic,26,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:129,energy efficiency,draw,drawn,129,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:368,energy efficiency,draw,drawing,368,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:114,performance,error,error,114,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:18,safety,compl,complex,18,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:26,safety,log,logic,26,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:114,safety,error,error,114,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:174,safety,avoid,avoid,174,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:18,security,compl,complex,18,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:26,security,log,logic,26,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:26,testability,log,logic,26,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:114,usability,error,error,114,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:390,usability,close,close,390,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14551:606,deployability,updat,updating,606,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:687,deployability,build,build,687,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:769,deployability,updat,update,769,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:814,deployability,automat,automatically,814,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:606,safety,updat,updating,606,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:769,safety,updat,update,769,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:606,security,updat,updating,606,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:769,security,updat,update,769,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:814,testability,automat,automatically,814,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:30,usability,user,users,30,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:36,usability,guid,guide,36,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:199,usability,close,close,199,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:226,usability,user,users,226,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:232,usability,guid,guide,232,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:396,usability,user,users,396,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:402,usability,guid,guide,402,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:444,usability,guid,guides,444,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:528,usability,guid,guide,528,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:952,usability,document,documentation,952,"One option is to move it to a users guide chapter. Other option, copying relevant comment here by @guitargeek:. ```. This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:. https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:. https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained. ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14552:70,safety,input,input,70,"In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:102,safety,except,exceptions,102,"In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:20,usability,clear,clear,20,"In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:70,usability,input,input,70,"In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:72,safety,input,input,72,"> In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here). I think ""Fatal"" is the recommended way, see https://github.com/root-project/root/pull/14627#discussion_r1492987421. I just proposed a PR with that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:104,safety,except,exceptions,104,"> In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here). I think ""Fatal"" is the recommended way, see https://github.com/root-project/root/pull/14627#discussion_r1492987421. I just proposed a PR with that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:22,usability,clear,clear,22,"> In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here). I think ""Fatal"" is the recommended way, see https://github.com/root-project/root/pull/14627#discussion_r1492987421. I just proposed a PR with that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:72,usability,input,input,72,"> In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here). I think ""Fatal"" is the recommended way, see https://github.com/root-project/root/pull/14627#discussion_r1492987421. I just proposed a PR with that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14553:97,deployability,depend,dependencies,97,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:4,energy efficiency,current,current,4,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:97,integrability,depend,dependencies,97,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:63,modifiability,pac,packages,63,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:97,modifiability,depend,dependencies,97,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:97,safety,depend,dependencies,97,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:12,testability,understand,understanding,12,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:97,testability,depend,dependencies,97,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA. ```. tensorflow . keras. torch. sklearn. xgboost. sonnet. graph_nets. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:47,deployability,depend,dependencies,47,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:114,deployability,contain,containers,114,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:47,integrability,depend,dependencies,47,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:47,modifiability,depend,dependencies,47,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:47,safety,depend,dependencies,47,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:47,testability,depend,dependencies,47,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:19,usability,confirm,confirm,19,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:84,availability,error,error,84,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:25,deployability,depend,dependencies,25,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:112,deployability,instal,installed,112,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:25,integrability,depend,dependencies,25,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:25,modifiability,depend,dependencies,25,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:97,modifiability,pac,package,97,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:84,performance,error,error,84,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:25,safety,depend,dependencies,25,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:84,safety,error,error,84,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:25,testability,depend,dependencies,25,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:84,usability,error,error,84,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:180,availability,error,error,180,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:193,deployability,build,build,193,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:237,deployability,instal,install,237,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:405,deployability,instal,install,405,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:288,interoperability,platform,platforms,288,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:338,interoperability,platform,platform,338,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:427,interoperability,platform,platforms,427,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:459,interoperability,incompatib,incompatibilities,459,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:156,modifiability,pac,package,156,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:249,modifiability,pac,packages,249,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:180,performance,error,error,180,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:58,safety,test,tests,58,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:180,safety,error,error,180,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:58,testability,test,tests,58,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:180,usability,error,error,180,"For TMVA nothing, if they are not there the corresponding tests are not run. Everything is protected. But I think if we add in the requirements.txt and the package is not there an error in the build is emitted. . We should have a way to install the packages in the new CI, but not in all platforms, only in some of them, for example in a platform tensorflow in another torch. It could be too much work to install them in every platforms, due to some possible incompatibilities",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:10,deployability,updat,update,10,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:208,deployability,depend,dependencies,208,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:115,energy efficiency,current,current,115,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:208,integrability,depend,dependencies,208,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:174,modifiability,pac,packages,174,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:208,modifiability,depend,dependencies,208,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:10,safety,updat,update,10,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:208,safety,depend,dependencies,208,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:10,security,updat,update,10,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:123,testability,understand,understanding,123,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:208,testability,depend,dependencies,208,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:. ```. graph_nets. sonnet. ipywidgets (for JsMVA). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:8,usability,stop,stopping,8,What is stopping us from adding them and close this item for good?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:41,usability,close,close,41,What is stopping us from adding them and close this item for good?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:139,safety,test,tests,139,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:240,safety,test,tests,240,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:415,safety,test,tests,415,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:139,testability,test,tests,139,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:240,testability,test,tests,240,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:415,testability,test,tests,415,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:10,usability,stop,stopping,10,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:43,usability,close,close,43,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:328,usability,close,close,328,"> What is stopping us from adding them and close this item for good? That the CI will probably become red, because it would enable the GNN tests that were never run on the CI before. But we can work around this by also always disabling the tests:. https://github.com/root-project/root/pull/15512. Once that PR is merged, we can close this issue, and I'll open a new one to remind the TMVA guys to re-enable the GNN tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14554:182,availability,ping,pinging,182,"The crash happens on line `2598` of `TDecompSparse.cxx`:. `w1 = w[ipiv]*a[apos];`. because `apos = 3493762`. but `fFact.N = 3493234`. Not sure what the best way is to solve this, so pinging @lmoneta . The reproducer is:. ```. #include ""TFile.h"". #include ""TDecompSparse.h"". void decomp() {. auto f = TFile::Open(""/tmp/matrix_fail.root"");. f->ls();. TMatrixTSparse<double>* M = (TMatrixTSparse<double>*)f->Get(""M"");. M->Print();. TVectorT<double>* x = (TVectorT<double>*)f->Get(""x"");. TDecompSparse solver(*M,0);. Bool_t ok;. TVectorD xx = solver.Solve(*x, ok);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:279,modifiability,deco,decomp,279,"The crash happens on line `2598` of `TDecompSparse.cxx`:. `w1 = w[ipiv]*a[apos];`. because `apos = 3493762`. but `fFact.N = 3493234`. Not sure what the best way is to solve this, so pinging @lmoneta . The reproducer is:. ```. #include ""TFile.h"". #include ""TDecompSparse.h"". void decomp() {. auto f = TFile::Open(""/tmp/matrix_fail.root"");. f->ls();. TMatrixTSparse<double>* M = (TMatrixTSparse<double>*)f->Get(""M"");. M->Print();. TVectorT<double>* x = (TVectorT<double>*)f->Get(""x"");. TDecompSparse solver(*M,0);. Bool_t ok;. TVectorD xx = solver.Solve(*x, ok);. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14555:344,usability,close,closed,344,"See https://its.cern.ch/jira/browse/ROOT-3437 for preceding discussion. After discussing offline with @pcanal, the conclusion is that since we have exactly this feature in RNTuple, and we want to ultimately encourage people to start using RNTuple instead of TTree, we won't make the effort to still add it to TTree. Therefore, the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14556:75,interoperability,plug,plugins,75,> * TFitterMinuit should have a deprecation warning. Does it refer to `etc/plugins/TVirtualFitter/P030_TFitterMinuit.C` or to what class exactly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:53,reliability,Doe,Does,53,> * TFitterMinuit should have a deprecation warning. Does it refer to `etc/plugins/TVirtualFitter/P030_TFitterMinuit.C` or to what class exactly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14557:85,safety,test,tests,85,Possible solution in a provate branch. Plan to create PR after some additional local tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:39,testability,Plan,Plan,39,Possible solution in a provate branch. Plan to create PR after some additional local tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:85,testability,test,tests,85,Possible solution in a provate branch. Plan to create PR after some additional local tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14558:5,deployability,log,logical,5,"As a logical extension, the same happens for any additional branch that later files have, for example:. ```c++. void printBranches(const char *path) {. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716_2() {. {. std::unique_ptr<TFile> file(TFile::Open(""a.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. value = 42;. tree->Write();. }. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. tree->Branch(""b"", &value);. value = 42;. tree->Fill();. tree->Write();. }. {. TFileMerger merger;. merger.OutputFile(""c.root"");. merger.AddFile(""a.root"");. merger.AddFile(""b.root"");. merger.Merge();. }. printBranches(""a.root"");. printBranches(""b.root"");. printBranches(""c.root"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:13,modifiability,extens,extension,13,"As a logical extension, the same happens for any additional branch that later files have, for example:. ```c++. void printBranches(const char *path) {. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716_2() {. {. std::unique_ptr<TFile> file(TFile::Open(""a.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. value = 42;. tree->Write();. }. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. tree->Branch(""b"", &value);. value = 42;. tree->Fill();. tree->Write();. }. {. TFileMerger merger;. merger.OutputFile(""c.root"");. merger.AddFile(""a.root"");. merger.AddFile(""b.root"");. merger.Merge();. }. printBranches(""a.root"");. printBranches(""b.root"");. printBranches(""c.root"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:5,safety,log,logical,5,"As a logical extension, the same happens for any additional branch that later files have, for example:. ```c++. void printBranches(const char *path) {. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716_2() {. {. std::unique_ptr<TFile> file(TFile::Open(""a.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. value = 42;. tree->Write();. }. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. tree->Branch(""b"", &value);. value = 42;. tree->Fill();. tree->Write();. }. {. TFileMerger merger;. merger.OutputFile(""c.root"");. merger.AddFile(""a.root"");. merger.AddFile(""b.root"");. merger.Merge();. }. printBranches(""a.root"");. printBranches(""b.root"");. printBranches(""c.root"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:5,security,log,logical,5,"As a logical extension, the same happens for any additional branch that later files have, for example:. ```c++. void printBranches(const char *path) {. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716_2() {. {. std::unique_ptr<TFile> file(TFile::Open(""a.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. value = 42;. tree->Write();. }. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. tree->Branch(""b"", &value);. value = 42;. tree->Fill();. tree->Write();. }. {. TFileMerger merger;. merger.OutputFile(""c.root"");. merger.AddFile(""a.root"");. merger.AddFile(""b.root"");. merger.Merge();. }. printBranches(""a.root"");. printBranches(""b.root"");. printBranches(""c.root"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:5,testability,log,logical,5,"As a logical extension, the same happens for any additional branch that later files have, for example:. ```c++. void printBranches(const char *path) {. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716_2() {. {. std::unique_ptr<TFile> file(TFile::Open(""a.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. value = 42;. tree->Write();. }. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. int value;. tree->Branch(""a"", &value);. tree->Branch(""b"", &value);. value = 42;. tree->Fill();. tree->Write();. }. {. TFileMerger merger;. merger.OutputFile(""c.root"");. merger.AddFile(""a.root"");. merger.AddFile(""b.root"");. merger.Merge();. }. printBranches(""a.root"");. printBranches(""b.root"");. printBranches(""c.root"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:154,availability,down,down,154,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:7,deployability,log,logical,7,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:15,modifiability,extens,extension,15,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:7,safety,log,logical,7,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:7,security,log,logical,7,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:7,testability,log,logical,7,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:132,testability,simpl,simplified,132,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:132,usability,simpl,simplified,132,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:952,usability,Clear,Clear,952,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```. #include ""TTree.h"". #include ""TFileMerger.h"". #include ""TFile.h"". #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {. printf(""PrintBranches:\n"");. for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {. printf("" %s\n"", branch->GetName());. }. }. void ROOT_4716() {. TTree atree(""tree"", ""title"");. int value;. atree.Branch(""a"", &value);. printBranches(&atree);. TTree abtree(""tree"", ""title"");. abtree.Branch(""a"", &value);. abtree.Branch(""b"", &value);. value = 42;. abtree.Fill();. printBranches(&abtree);. TTree dummy;. TList treelist;. treelist.Add(&atree);. treelist.Add(&abtree);. std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));. TFileMergeInfo info(file.get());. dummy.Merge(&treelist, &info);. printBranches(&dummy);. treelist.Clear();. treelist.Add(&abtree);. std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));. TFileMergeInfo info2(file2.get());. atree.Merge(&treelist, &info2);. printBranches(&atree);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14559:465,deployability,version,version,465,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:465,integrability,version,version,465,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:465,modifiability,version,version,465,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:144,safety,test,test,144,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:653,safety,test,test,653,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:293,security,Team,Team,293,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:144,testability,test,test,144,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:653,testability,test,test,653,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:502,usability,help,help,502,"Cannot reproduce this issue, I get the following (correct) output:. ```bash. dvalapar@pceproot007:~/work/root/clingbuild (dev.fix_9672-1)$ root test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Feb 13 2024, 09:36:41 |. | From heads/dev.fix_9672@v6-31-01-997-gc30c4035f6 |. | With Ubuntu clang version 14.0.0-1ubuntu1.1 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] . Processing test.C... 2x3 matrix is as follows. | 0 | 1 | 2 |. --------------------------------------------. 0 | 1 2 3 . 1 | 4 5 6 . C | F. -------. 1|1. 2|4. 3|2. 4|5. 5|3. 6|6. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:136,usability,close,close,136,> This was fixed [here](https://github.com/root-project/root/commit/2fc350d0762f54ccef4378035dfa15281ff75626). Thanks @mdessole. Can we close this issue then?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14560:23,availability,error,error,23,"I cannot reproduce the error with the provided reproducer, so I assume this issue has been fixed somewhere along the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:23,performance,error,error,23,"I cannot reproduce the error with the provided reproducer, so I assume this issue has been fixed somewhere along the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:23,safety,error,error,23,"I cannot reproduce the error with the provided reproducer, so I assume this issue has been fixed somewhere along the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:23,usability,error,error,23,"I cannot reproduce the error with the provided reproducer, so I assume this issue has been fixed somewhere along the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14563:124,modifiability,variab,variable,124,"I don't understand this issue. One can define several cutting expressions ""E"" and drag them alternatively to the ""Scissors"" variable to compare them consecutively. If needed, using the ""SAME"" option for overlaying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:8,testability,understand,understand,8,"I don't understand this issue. One can define several cutting expressions ""E"" and drag them alternatively to the ""Scissors"" variable to compare them consecutively. If needed, using the ""SAME"" option for overlaying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:62,usability,close,close,62,"@bellenot : if @ferdymercury is right, I would be inclined to close this issue as this is an interesting one, but ""clarified"" (in the JIRA sense). What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:57,security,auth,author,57,"I think he's right, but let's ask @agheata, the original author of `TTreeViewer`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:394,availability,operat,operations,394,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:93,deployability,automat,automatically,93,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:144,energy efficiency,green,green,144,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:501,energy efficiency,draw,draw,501,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:604,reliability,doe,does,604,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:858,reliability,doe,does,858,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:386,safety,compl,complex,386,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:386,security,compl,complex,386,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:93,testability,automat,automatically,93,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:762,usability,document,documentation,762,"I checked again. So you can seamlessly define several ""cut expressions"". When doing that, it automatically changes the icon from ""E"" to a yello-green condition icon. ![image](https://github.com/root-project/root/assets/10653970/69c9ffe2-8d79-4504-aad9-a89144417388). Then, you can either drag-drop cond1 or cond2 to the scissors. Or you can double click on the scissors, and write more complex operations such as: `(~cond1) && (~cond2)`, or `(~cond1) || !(~cond2)`. Parenthesis are important!! If you draw one after the other, or call new TCanvas, you can easily compare them. The only thing that really does not work is the option ""same"". So you cannot compare them on the same canvas. So, I believe that two tasks are required here:. - [ ] Improve the doxygen documentation of TTreeViewer to explain this capability. - [ ] Fix the issue that ""same"" option does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14564:143,deployability,releas,releases,143,"I would avoid including the code in ROOT. Wrapper for GSL exists, I would use those if needed, see . https://www.thesalmons.org/john/random123/releases/latest/docs/index.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:42,integrability,Wrap,Wrapper,42,"I would avoid including the code in ROOT. Wrapper for GSL exists, I would use those if needed, see . https://www.thesalmons.org/john/random123/releases/latest/docs/index.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:42,interoperability,Wrapper,Wrapper,42,"I would avoid including the code in ROOT. Wrapper for GSL exists, I would use those if needed, see . https://www.thesalmons.org/john/random123/releases/latest/docs/index.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:8,safety,avoid,avoid,8,"I would avoid including the code in ROOT. Wrapper for GSL exists, I would use those if needed, see . https://www.thesalmons.org/john/random123/releases/latest/docs/index.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:10,deployability,patch,patch,10,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:86,integrability,interfac,interface,86,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:86,interoperability,interfac,interface,86,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:86,modifiability,interfac,interface,86,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:10,safety,patch,patch,10,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:10,security,patch,patch,10,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:34,usability,close,close,34,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:57,usability,user,users,57,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:10,usability,close,close,10,Reminder: close the JIRA ticket https://its.cern.ch/jira/browse/ROOT-5138,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14567:67,deployability,build,build,67,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:238,deployability,version,version,238,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:261,deployability,version,version,261,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:310,deployability,version,version,310,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:333,deployability,version,version,333,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:382,deployability,version,version,382,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:405,deployability,version,version,405,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:457,deployability,version,version,457,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:480,deployability,version,version,480,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:539,deployability,version,version,539,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:562,deployability,version,version,562,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:618,deployability,version,version,618,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:641,deployability,version,version,641,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:1210,deployability,instal,install,1210,"etxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.so. ```. So there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:2274,deployability,instal,install,2274,"tibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.so. ```. So there's no need for an extra `LC_RPATH` in ROOT libraries in the install directory. As for the `xrdcp` tool, that is not installed if `builtin_xrootd=ON`, as well as any other command line tool of XRootD. . @pcanal can we close this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:2330,deployability,instal,installed,2330,"tibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.so. ```. So there's no need for an extra `LC_RPATH` in ROOT libraries in the install directory. As for the `xrdcp` tool, that is not installed if `builtin_xrootd=ON`, as well as any other command line tool of XRootD. . @pcanal can we close this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:119,energy efficiency,load,loaded,119,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:253,energy efficiency,current,current,253,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:325,energy efficiency,current,current,325,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:397,energy efficiency,current,current,397,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:472,energy efficiency,current,current,472,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:554,energy efficiency,current,current,554,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:633,energy efficiency,current,current,633,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:704,energy efficiency,Load,Load,704,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:871,energy efficiency,Load,Load,871,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:1195,energy efficiency,load,loaded,1195,"o:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:238,integrability,version,version,238,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:261,integrability,version,version,261,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:310,integrability,version,version,310,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:333,integrability,version,version,333,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:382,integrability,version,version,382,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:405,integrability,version,version,405,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:457,integrability,version,version,457,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:480,integrability,version,version,480,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:539,integrability,version,version,539,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:562,integrability,version,version,562,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:618,integrability,version,version,618,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:641,integrability,version,version,641,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:682,integrability,sub,substituted,682,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:224,interoperability,compatib,compatibility,224,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:296,interoperability,compatib,compatibility,296,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:368,interoperability,compatib,compatibility,368,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:443,interoperability,compatib,compatibility,443,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:525,interoperability,compatib,compatibility,525,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:604,interoperability,compatib,compatibility,604,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:238,modifiability,version,version,238,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:261,modifiability,version,version,261,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:310,modifiability,version,version,310,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:333,modifiability,version,version,333,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:382,modifiability,version,version,382,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:405,modifiability,version,version,405,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:457,modifiability,version,version,457,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:480,modifiability,version,version,480,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:539,modifiability,version,version,539,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:562,modifiability,version,version,562,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:618,modifiability,version,version,618,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:641,modifiability,version,version,641,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:119,performance,load,loaded,119,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:704,performance,Load,Load,704,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:871,performance,Load,Load,871,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:1195,performance,load,loaded,1195,"o:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:709,usability,command,command,709,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:754,usability,User,Users,754,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:876,usability,command,command,876,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:920,usability,User,Users,920,"With latest ROOT master I see the following situation. In the ROOT build folder, if I try to check which libraries are loaded e.g. by `libNetxNG.so`:. ```. otool -L lib/libNetxNG.so. lib/libNetxNG.so:. 	@rpath/libNetxNG.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libNet.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libRIO.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libThread.so (compatibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:2312,usability,tool,tool,2312,"tibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.so. ```. So there's no need for an extra `LC_RPATH` in ROOT libraries in the install directory. As for the `xrdcp` tool, that is not installed if `builtin_xrootd=ON`, as well as any other command line tool of XRootD. . @pcanal can we close this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:2385,usability,command,command,2385,"tibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.so. ```. So there's no need for an extra `LC_RPATH` in ROOT libraries in the install directory. As for the `xrdcp` tool, that is not installed if `builtin_xrootd=ON`, as well as any other command line tool of XRootD. . @pcanal can we close this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:2398,usability,tool,tool,2398,"tibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.so. ```. So there's no need for an extra `LC_RPATH` in ROOT libraries in the install directory. As for the `xrdcp` tool, that is not installed if `builtin_xrootd=ON`, as well as any other command line tool of XRootD. . @pcanal can we close this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:2431,usability,close,close,2431,"tibility version 0.0.0, current version 0.0.0). 	@rpath/libXrdUtils.3.dylib (compatibility version 3.0.0, current version 3.0.0). 	@rpath/libXrdCl.3.dylib (compatibility version 3.0.0, current version 3.0.0). ```. with `@rpath` being substituted by . ```. Load command 22. cmd LC_RPATH. cmdsize 120. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/builtins/xrootd/XROOTD-prefix/lib (offset 12). Load command 23. cmd LC_RPATH. cmdsize 88. path /Users/vpadulan/Programs/rootproject/rootbuild/gh-14567-builtin-xrootd/lib (offset 12). ```. And. ```. ls lib/libXrd*. zsh: no matches found: lib/libXrd*. ```. And that's fine, since both the global libraries directory as well as the lib directory of the builtin are properly loaded. In the install directory. ```. ls lib/libXrd*. lib/libXrdAppUtils.2.0.0.dylib lib/libXrdCryptoLite.2.dylib lib/libXrdSecgsiGMAPDN-5.so. lib/libXrdAppUtils.2.dylib lib/libXrdCryptoLite.dylib lib/libXrdSeckrb5-5.so. lib/libXrdAppUtils.dylib lib/libXrdCryptossl-5.so lib/libXrdSecpwd-5.so. lib/libXrdCl.3.0.0.dylib lib/libXrdPosix.3.0.0.dylib lib/libXrdSecsss-5.so. lib/libXrdCl.3.dylib lib/libXrdPosix.3.dylib lib/libXrdSecunix-5.so. lib/libXrdCl.dylib lib/libXrdPosix.dylib lib/libXrdUtils.3.0.0.dylib. lib/libXrdClHttp-5.so lib/libXrdPosixPreload.2.0.0.dylib lib/libXrdUtils.3.dylib. lib/libXrdClProxyPlugin-5.so lib/libXrdPosixPreload.2.dylib lib/libXrdUtils.dylib. lib/libXrdClRecorder-5.so lib/libXrdPosixPreload.dylib lib/libXrdXml.3.0.0.dylib. lib/libXrdCrypto.2.0.0.dylib lib/libXrdSec-5.so lib/libXrdXml.3.dylib. lib/libXrdCrypto.2.dylib lib/libXrdSecProt-5.so lib/libXrdXml.dylib. lib/libXrdCrypto.dylib lib/libXrdSecgsi-5.so. lib/libXrdCryptoLite.2.0.0.dylib lib/libXrdSecgsiAUTHZVO-5.so. ```. So there's no need for an extra `LC_RPATH` in ROOT libraries in the install directory. As for the `xrdcp` tool, that is not installed if `builtin_xrootd=ON`, as well as any other command line tool of XRootD. . @pcanal can we close this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:49,usability,close,close,49,"After discussion with @pcanal , we agreed we can close the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14572:111,energy efficiency,core,core,111,"After discussion with the team, the following decision was reached. This feature is not on the critical set of core features of ROOT and addressing the request would not have a great-enough impact, implementing a fix as requested would take time that is better spent in other areas. Of course, a PR would be welcome. For the moment, the issue is closed as it won't be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:241,performance,time,time,241,"After discussion with the team, the following decision was reached. This feature is not on the critical set of core features of ROOT and addressing the request would not have a great-enough impact, implementing a fix as requested would take time that is better spent in other areas. Of course, a PR would be welcome. For the moment, the issue is closed as it won't be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:26,security,team,team,26,"After discussion with the team, the following decision was reached. This feature is not on the critical set of core features of ROOT and addressing the request would not have a great-enough impact, implementing a fix as requested would take time that is better spent in other areas. Of course, a PR would be welcome. For the moment, the issue is closed as it won't be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:346,usability,close,closed,346,"After discussion with the team, the following decision was reached. This feature is not on the critical set of core features of ROOT and addressing the request would not have a great-enough impact, implementing a fix as requested would take time that is better spent in other areas. Of course, a PR would be welcome. For the moment, the issue is closed as it won't be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14574:52,availability,sli,slightly,52,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:339,availability,error,error,339,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:216,energy efficiency,load,loading,216,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:216,performance,load,loading,216,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:272,performance,time,time,272,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:339,performance,error,error,339,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:52,reliability,sli,slightly,52,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:106,reliability,doe,does,106,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:339,safety,error,error,339,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:339,usability,error,error,339,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:409,usability,command,command,409,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:436,usability,close,close,436,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14575:199,modifiability,variab,variables,199,I think this is a duplicate of https://github.com/root-project/root/issues/6671. There is a draft PR: https://github.com/root-project/root/pull/14271. But checking bin content saturation on floating variables is rather non-trivial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:168,performance,content,content,168,I think this is a duplicate of https://github.com/root-project/root/issues/6671. There is a draft PR: https://github.com/root-project/root/pull/14271. But checking bin content saturation on floating variables is rather non-trivial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:647,availability,operat,operator,647,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:709,availability,operat,operator,709,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:71,performance,perform,performed,71,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:240,performance,memor,memory,240,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:342,performance,content,content,342,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1008,performance,perform,performance,1008,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:107,security,access,access,107,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:329,security,access,access,329,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:481,security,access,access,481,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:800,testability,simpl,simple,800,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:71,usability,perform,performed,71,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:210,usability,behavi,behavior,210,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:240,usability,memor,memory,240,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:800,usability,simpl,simple,800,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1008,usability,perform,performance,1008,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1030,usability,experien,experience,1030,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:. * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF. * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` . * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:45,availability,state,statement,45,"In my opinion, we could just add an ""assert"" statement that is skipped in release mode; and add a note on the doxygen documentation that passing an out-of-range bin leads to undefined behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:74,deployability,releas,release,74,"In my opinion, we could just add an ""assert"" statement that is skipped in release mode; and add a note on the doxygen documentation that passing an out-of-range bin leads to undefined behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:45,integrability,state,statement,45,"In my opinion, we could just add an ""assert"" statement that is skipped in release mode; and add a note on the doxygen documentation that passing an out-of-range bin leads to undefined behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:37,testability,assert,assert,37,"In my opinion, we could just add an ""assert"" statement that is skipped in release mode; and add a note on the doxygen documentation that passing an out-of-range bin leads to undefined behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:118,usability,document,documentation,118,"In my opinion, we could just add an ""assert"" statement that is skipped in release mode; and add a note on the doxygen documentation that passing an out-of-range bin leads to undefined behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:184,usability,behavi,behavior,184,"In my opinion, we could just add an ""assert"" statement that is skipped in release mode; and add a note on the doxygen documentation that passing an out-of-range bin leads to undefined behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14576:18,usability,close,close,18,Thanks! Reminder: close the associated JIRA ticket :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14577:96,usability,statu,status,96,"@vepadulano . `ROOT::Internal::GetDemangledTypeName(t)` calls `TClassEdit::DemangleName(t.name, status)`. We could also use `RDFInternal::DemangleTypeIdName` within the RDFInternal namespace which calls `TClassEdit::DemangleTypeIDName(ti, errcode)` -> `TClassEdit::DemangleName(ti.name(), errcode)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14578:481,integrability,event,event,481,"Hi! I thought about this also a few weeks ago, and just like Jason Turner I came to the conclusion that this is evil:. https://www.youtube.com/watch?v=T97QJ0KBaBU. In this case, the implicit conversion would even mean the lazy evaluation of the `RResultPtr`. So it becomes more in-transparent where the evaluation would actually happen. So this suggestion sounds nice on paper, but I think in practice it will leas to more confusion than benefit by obscuring the triggering of the event loop.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:191,interoperability,convers,conversion,191,"Hi! I thought about this also a few weeks ago, and just like Jason Turner I came to the conclusion that this is evil:. https://www.youtube.com/watch?v=T97QJ0KBaBU. In this case, the implicit conversion would even mean the lazy evaluation of the `RResultPtr`. So it becomes more in-transparent where the evaluation would actually happen. So this suggestion sounds nice on paper, but I think in practice it will leas to more confusion than benefit by obscuring the triggering of the event loop.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:393,reliability,pra,practice,393,"Hi! I thought about this also a few weeks ago, and just like Jason Turner I came to the conclusion that this is evil:. https://www.youtube.com/watch?v=T97QJ0KBaBU. In this case, the implicit conversion would even mean the lazy evaluation of the `RResultPtr`. So it becomes more in-transparent where the evaluation would actually happen. So this suggestion sounds nice on paper, but I think in practice it will leas to more confusion than benefit by obscuring the triggering of the event loop.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:358,deployability,scale,scale,358,"@guitargeek love the reference to Jason! And of course I totally agree! This is one of those occasions where you look back at your own past opinions and realise you were wrong (since I was the OP). The only other alternative would be providing explicit overloads for `RResultPtr<T>` wherever one would want this feature to be used, but that's really hard to scale and sounds unmantainable. I believe we can close this issue, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:358,energy efficiency,scale,scale,358,"@guitargeek love the reference to Jason! And of course I totally agree! This is one of those occasions where you look back at your own past opinions and realise you were wrong (since I was the OP). The only other alternative would be providing explicit overloads for `RResultPtr<T>` wherever one would want this feature to be used, but that's really hard to scale and sounds unmantainable. I believe we can close this issue, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:358,modifiability,scal,scale,358,"@guitargeek love the reference to Jason! And of course I totally agree! This is one of those occasions where you look back at your own past opinions and realise you were wrong (since I was the OP). The only other alternative would be providing explicit overloads for `RResultPtr<T>` wherever one would want this feature to be used, but that's really hard to scale and sounds unmantainable. I believe we can close this issue, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:358,performance,scale,scale,358,"@guitargeek love the reference to Jason! And of course I totally agree! This is one of those occasions where you look back at your own past opinions and realise you were wrong (since I was the OP). The only other alternative would be providing explicit overloads for `RResultPtr<T>` wherever one would want this feature to be used, but that's really hard to scale and sounds unmantainable. I believe we can close this issue, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:407,usability,close,close,407,"@guitargeek love the reference to Jason! And of course I totally agree! This is one of those occasions where you look back at your own past opinions and realise you were wrong (since I was the OP). The only other alternative would be providing explicit overloads for `RResultPtr<T>` wherever one would want this feature to be used, but that's really hard to scale and sounds unmantainable. I believe we can close this issue, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14583:66,availability,error,error,66,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:2122,deployability,automat,automatically,2122,"is function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. printTree_fullclass(""b.root"");. printTree_splitclass(""b.root"");. }. ```. Now I am not sure if the call of `SetMakeClass` is automatically done, and therefore this function became internal, or if it is still worth to be documented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:758,integrability,pub,public,758,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:142,modifiability,pac,packed,142,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:66,performance,error,error,66,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:101,reliability,doe,does,101,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:66,safety,error,error,66,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:388,testability,understand,understand,388,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
